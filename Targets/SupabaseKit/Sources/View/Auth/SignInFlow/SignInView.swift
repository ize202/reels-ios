//
//  SignInView.swift
//  SupabaseKit (Generated by SwiftyLaunch 2.0)
//  https://docs.swiftylaun.ch/module/authkit/sign-in-with-apple-flow
//

import AnalyticsKit
import AuthenticationServices
import SharedKit
import SwiftUI

/// This view prompts the user to sign in.
/// We show this when a view has a .requireLogin() modifier and the user is not signed in
public struct SignInView: View {

	@ObservedObject var db: DB
	let navTitle: LocalizedStringKey

	/// Calls this when the user is signed in
	/// Useful when displayed modally to dismiss the Login View.
	let onSignedIn: () -> Void

	public init(
		db: DB,
		navTitle: LocalizedStringKey = "",
		onSignedIn: @escaping () -> Void = {}
	) {
		self._db = ObservedObject(wrappedValue: db)
		self.navTitle = navTitle
		self.onSignedIn = onSignedIn
	}

	public var body: some View {
		VStack(spacing: 20) {
			SignInHeroSection()
				.padding(.top, 10)

			// If user is already signed in (and not anonymous), show a small sign out button
			if let currentUser = db.currentUser, !currentUser.isAnonymous {
				HStack(spacing: 0) {
					Text("You're already signed in.")
						.foregroundStyle(.secondary)

					Button("Sign Out") {
						Task {
							await tryFunctionOtherwiseShowInAppNotification(
								fallbackNotificationContent: .init(
									title: "Sign Out Error", message: "Try Again Later")
							) {
								try await db.signOut()
							}
						}
					}
					Spacer()
				}
				.font(.caption)
			}
			SignUpButtons()
		}
		.padding()
		.onChange(of: db.authState) { newState in
			if newState == .signedIn {
				onSignedIn()
			}
		}

		.captureViewActivity(as: "SignInView")
	}
}

struct SignInHeroSection: View {
	var body: some View {
		VStack {
			Image(.appIconPreview)
				.resizable()
				.squircle(width: 125)

			Text(Constants.AppData.appName)
				.font(.largeTitle)
				.bold()

			Text(Constants.AppData.appDescription)
				.font(.callout)
				.multilineTextAlignment(.center)
				.foregroundStyle(.secondary)
		}
	}
}

#Preview {
	Color.gray
		.sheet(isPresented: .constant(true)) {
			SignInView(db: DB())
		}
}
