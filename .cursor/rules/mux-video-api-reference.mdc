---
description: This is the OpenAPI specification for the Mux Video API.
globs: 
alwaysApply: false
---
# Mux Video API 

```json
{
  "openapi": "3.0.3",
  "x-group-parameters": true,
  "info": {
    "title": "Mux API",
    "description": "Mux is how developers build online video. This API encompasses Mux Video functionality to help you build your video-related projects better and faster than ever before.",
    "version": "v1",
    "contact": {
      "name": "Mux DevEx",
      "url": "https://docs.mux.com",
      "email": "devex@mux.com"
    }
  },
  "servers": [
    {
      "url": "https://api.mux.com",
      "description": "Mux Production Environment"
    }
  ],
  "security": [
    {
      "accessToken": []
    }
  ],
  "tags": [
    {
      "name": "Transcription Vocabularies",
      "description": "Transcription Vocabularies allows you to provide collections of phrases like proper nouns, technical jargon, and uncommon words as part of captioning workflows. When using Auto-Generated Captions, Transcription Vocabularies increase the likelihood of correct speech recognition for these words and phrases."
    },
    {
      "name": "Web Inputs",
      "description": "Note: Web Inputs are currently in beta. Please [reach out to us](mdc:mailto:help@mux.com) if you're interested in using them.\n\nWeb Inputs are Mux-managed web browsers that you can use to broadcast visually compelling live streams from any web page you build.\n"
    },
    {
      "name": "Assets",
      "description": "An asset refers to a piece of media content that is stored or is being live streamed through the Mux system. An asset always has a duration and one or more tracks (audio, video, and text data).\n\nThe media content of an asset cannot be updated once created, however an asset can be used to create another asset, and can be modified within that process."
    },
    {
      "name": "Live Streams",
      "description": "A Live Stream represents a unique live stream of video being pushed to Mux. It includes configuration details (a Stream Key) for live broadcasting software/hardware and a Playback ID for playing the stream anywhere. Currently, RTMP is the only supported method of ingesting video. Use rtmp://global-live.mux.com:5222/app with the Live Stream's Stream Key for getting the video into Mux, and use https://stream.mux.com with the Live Stream's Playback ID for playback.\n\nA Live Stream can be used once for a specific event, or re-used forever. If you're building an application like Facebook Live or Twitch, you could create one Live Stream per user. This allows them to configure their broadcasting software once, and the Live Stream Playback ID will always show their latest stream.\n\nEach RTMP session creates a new video asset automatically. You can set up a webhook to be notified each time a broadcast (or Live Stream RTMP session) begins or ends with the video.live_stream.active and video.live_stream.idle events respectively. Assets that are created from a Live Stream have the same behavior as other Assets you create.\n\nLearn more about [how to go live in our guides](mdc:https:/docs.mux.com/guides/start-live-streaming)."
    },
    {
      "name": "URL Signing Keys",
      "description": "A URL signing key is used as the secret when signing any Mux URL. Mux requires a [JSON Web Token](mdc:https:/jwt.io) as the value of the token query parameter. The token query parameter must be set for URLs that reference a playback ID with a signed playback policy."
    },
    {
      "name": "Direct Uploads",
      "description": "Direct upload allows you to push assets directly to Mux storage instead of needing to go through your own first. When you create a new direct upload, we'll give you back a signed URL for a Google Cloud Storage bucket. Their storage API is S3 compatible, so whatever tool you use to upload to either GCS or S3 should work, just remember you're probably uploading large video files and should [take advantage of things like resumable or multipart uploads](mdc:https:/cloud.google.com/storage/docs/json_api/v1/how-tos/resumable-upload).\n\nParticularly for customers that deal with a lot of user-generated content, it's common to expect quite a few abandoned uploads. To keep those abandoned uploads from cluttering up your asset lists, we don't create an asset for you until the upload is complete. Once that asset is created, you can expect all of the normal asset-related webhooks."
    },
    {
      "name": "Delivery Usage",
      "description": "The Delivery Usage API allows you to get delivery/streaming usage details for each asset and across all assets. Delivery usage details are aggregated every hour at the top of the hour and can be requested for a specified time window within the last 90 days starting at 12 hours prior to when the request is made.\n\nAssets are ordered by delivery usage starting with the one with the highest usage. Only assets with delivery usage greater than 0 seconds are returned in the response."
    },
    {
      "name": "Playback Restrictions",
      "description": "Playback Restrictions allows you to set additional rules for playing videos. You can set the domains/hostnames allowed to play your videos. For instance, viewers can play videos embedded on the `https://example.com` website when you set the Playback Restrictions with `example.com` as an allowed domain. Any Video requests from other websites are denied. Additionally, you can set rules for what user agents to allow. Please see [Using User-Agent HTTP header for validation](mdc:https:/docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation) for more details on this feature."
    },
    {
      "name": "DRM Configurations",
      "description": "DRM Configurations allow you to adjust the security level of content delivered through Mux Video's Digital Rights Management (DRM) feature."
    },
    {
      "name": "Playback ID",
      "description": "Operations related to the manipulation of playback IDs, through which users are able to stream videos and live streams from Mux."
    }
  ],
  "paths": {
    "/video/v1/transcription-vocabularies": {
      "post": {
        "tags": [
          "Transcription Vocabularies"
        ],
        "summary": "Create a Transcription Vocabulary",
        "description": "Create a new Transcription Vocabulary.",
        "operationId": "create-transcription-vocabulary",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user-supplied name of the Transcription Vocabulary."
                  },
                  "phrases": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A phrase or word belonging to a Transcription Vocabulary.",
                      "minLength": 1,
                      "maxLength": 32
                    },
                    "maxItems": 1000,
                    "description": "Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles`, the probability of successful speech recognition for these words or phrases is boosted."
                  },
                  "passthrough": {
                    "type": "string",
                    "description": "Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters."
                  }
                },
                "required": [
                  "phrases"
                ]
              },
              "example": {
                "name": "Mux API Vocabulary",
                "phrases": [
                  "Mux",
                  "Live Stream",
                  "Playback ID",
                  "video encoding"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transcription Vocabulary Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "updated_at",
                        "created_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Transcription Vocabulary"
                        },
                        "name": {
                          "type": "string",
                          "description": "The user-supplied name of the Transcription Vocabulary."
                        },
                        "phrases": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A phrase or word belonging to a Transcription Vocabulary.",
                            "minLength": 1,
                            "maxLength": 32
                          },
                          "maxItems": 1000,
                          "description": "Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles` configuration, the probability of successful speech recognition for these words or phrases is boosted."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Transcription Vocabulary was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Transcription Vocabulary was updated, defined as a Unix timestamp (seconds since epoch)."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "VDm3npt2eaEDvz9emzun8Q",
                    "name": "Mux API Vocabulary",
                    "phrases": [
                      "Mux",
                      "Live Stream",
                      "Playback ID",
                      "video encoding"
                    ],
                    "created_at": "1609869152",
                    "updated_at": "1609869152"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Transcription Vocabularies"
        ],
        "summary": "List Transcription Vocabularies",
        "description": "List all Transcription Vocabularies.",
        "operationId": "list-transcription-vocabularies",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "maximum": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-required": [
                          "id",
                          "updated_at",
                          "created_at"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the Transcription Vocabulary"
                          },
                          "name": {
                            "type": "string",
                            "description": "The user-supplied name of the Transcription Vocabulary."
                          },
                          "phrases": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A phrase or word belonging to a Transcription Vocabulary.",
                              "minLength": 1,
                              "maxLength": 32
                            },
                            "maxItems": 1000,
                            "description": "Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles` configuration, the probability of successful speech recognition for these words or phrases is boosted."
                          },
                          "passthrough": {
                            "type": "string",
                            "description": "Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "int64",
                            "description": "Time the Transcription Vocabulary was created, defined as a Unix timestamp (seconds since epoch)."
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "int64",
                            "description": "Time the Transcription Vocabulary was updated, defined as a Unix timestamp (seconds since epoch)."
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "VDm3npt2eaEDvz9emzun8Q",
                      "name": "Mux API Vocabulary",
                      "phrases": [
                        "Mux",
                        "Live Stream",
                        "Playback ID",
                        "video encoding"
                      ],
                      "created_at": "1609869152",
                      "updated_at": "1609870000"
                    },
                    {
                      "id": "M1lDlzSP102NgukTnyQyLqw",
                      "name": "Video Codecs",
                      "phrases": [
                        "h.264",
                        "HEVC",
                        "AV1"
                      ],
                      "created_at": "1609869152",
                      "updated_at": "1609870000"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/transcription-vocabularies/{TRANSCRIPTION_VOCABULARY_ID}": {
      "get": {
        "tags": [
          "Transcription Vocabularies"
        ],
        "summary": "Retrieve a Transcription Vocabulary",
        "description": "Retrieves the details of a Transcription Vocabulary that has previously been created. Supply the unique Transcription Vocabulary ID and Mux will return the corresponding Transcription Vocabulary information. The same information is returned when creating a Transcription Vocabulary.",
        "operationId": "get-transcription-vocabulary",
        "parameters": [
          {
            "name": "TRANSCRIPTION_VOCABULARY_ID",
            "in": "path",
            "description": "The ID of the Transcription Vocabulary.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "updated_at",
                        "created_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Transcription Vocabulary"
                        },
                        "name": {
                          "type": "string",
                          "description": "The user-supplied name of the Transcription Vocabulary."
                        },
                        "phrases": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A phrase or word belonging to a Transcription Vocabulary.",
                            "minLength": 1,
                            "maxLength": 32
                          },
                          "maxItems": 1000,
                          "description": "Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles` configuration, the probability of successful speech recognition for these words or phrases is boosted."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Transcription Vocabulary was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Transcription Vocabulary was updated, defined as a Unix timestamp (seconds since epoch)."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "VDm3npt2eaEDvz9emzun8Q",
                    "name": "Mux API Vocabulary",
                    "phrases": [
                      "Mux",
                      "Live Stream",
                      "Playback ID",
                      "video encoding"
                    ],
                    "created_at": "1609869152",
                    "updated_at": "1609870000"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transcription Vocabularies"
        ],
        "summary": "Delete a Transcription Vocabulary",
        "description": "Deletes a Transcription Vocabulary. The Transcription Vocabulary's ID will be disassociated from any live streams using it. Transcription Vocabularies can be deleted while associated live streams are active. However, the words and phrases in the deleted Transcription Vocabulary will remain attached to those streams while they are active.",
        "operationId": "delete-transcription-vocabulary",
        "parameters": [
          {
            "name": "TRANSCRIPTION_VOCABULARY_ID",
            "in": "path",
            "description": "The ID of the Transcription Vocabulary.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "put": {
        "tags": [
          "Transcription Vocabularies"
        ],
        "summary": "Update a Transcription Vocabulary",
        "description": "Updates the details of a previously-created Transcription Vocabulary. Updates to Transcription Vocabularies are allowed while associated live streams are active. However, updates will not be applied to those streams while they are active.",
        "operationId": "update-transcription-vocabulary",
        "parameters": [
          {
            "name": "TRANSCRIPTION_VOCABULARY_ID",
            "in": "path",
            "description": "The ID of the Transcription Vocabulary.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user-supplied name of the Transcription Vocabulary."
                  },
                  "phrases": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A phrase or word belonging to a Transcription Vocabulary.",
                      "minLength": 1,
                      "maxLength": 32
                    },
                    "maxItems": 1000,
                    "description": "Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles`, the probability of successful speech recognition for these words or phrases is boosted."
                  },
                  "passthrough": {
                    "type": "string",
                    "description": "Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters."
                  }
                },
                "required": [
                  "phrases"
                ]
              },
              "example": {
                "name": "Mux API Vocabulary - Updated",
                "phrases": [
                  "Mux",
                  "Live Stream",
                  "RTMP",
                  "Stream Key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "updated_at",
                        "created_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Transcription Vocabulary"
                        },
                        "name": {
                          "type": "string",
                          "description": "The user-supplied name of the Transcription Vocabulary."
                        },
                        "phrases": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A phrase or word belonging to a Transcription Vocabulary.",
                            "minLength": 1,
                            "maxLength": 32
                          },
                          "maxItems": 1000,
                          "description": "Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles` configuration, the probability of successful speech recognition for these words or phrases is boosted."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Transcription Vocabulary was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Transcription Vocabulary was updated, defined as a Unix timestamp (seconds since epoch)."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "VDm3npt2eaEDvz9emzun8Q",
                    "name": "Mux API Vocabulary - Updated",
                    "phrases": [
                      "Mux",
                      "Live Stream",
                      "RTMP",
                      "Stream Key"
                    ],
                    "created_at": "1609869152",
                    "updated_at": "1609870000"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/web-inputs": {
      "post": {
        "tags": [
          "Web Inputs"
        ],
        "summary": "Create a new Web Input",
        "description": "Create a new Web Input",
        "operationId": "create-web-input",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the Web Input."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "int64",
                        "description": "Time the Web Input was created, defined as a Unix timestamp (seconds since epoch)."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL for the Web Input to load."
                      },
                      "auto_launch": {
                        "type": "boolean",
                        "description": "When set to `true` the Web Input will automatically launch and start streaming immediately after creation"
                      },
                      "live_stream_id": {
                        "type": "string",
                        "description": "The Live Stream ID to broadcast this Web Input to"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "idle",
                          "launching",
                          "streaming"
                        ]
                      },
                      "passthrough": {
                        "type": "string",
                        "description": "Arbitrary metadata that will be included in the Web Input details and related webhooks. Can be used to store your own ID for the Web Input. **Max: 255 characters**."
                      },
                      "resolution": {
                        "type": "string",
                        "description": "The resolution of the viewport of the Web Input's browser instance. Defaults to 1920x1080 if not set.",
                        "enum": [
                          "1920x1080",
                          "1280x720",
                          "1080x1920",
                          "720x1280",
                          "1080x1080",
                          "720x720"
                        ],
                        "default": "1920x1080"
                      },
                      "timeout": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of seconds that the Web Input should stream for before automatically shutting down.",
                        "default": 3600
                      }
                    }
                  },
                  {
                    "x-required": [
                      "live_stream_id",
                      "url"
                    ]
                  }
                ]
              },
              "example": {
                "url": "https://example.com/hello.html",
                "live_stream_id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Web Input Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the Web Input."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "int64",
                              "description": "Time the Web Input was created, defined as a Unix timestamp (seconds since epoch)."
                            },
                            "url": {
                              "type": "string",
                              "description": "The URL for the Web Input to load."
                            },
                            "auto_launch": {
                              "type": "boolean",
                              "description": "When set to `true` the Web Input will automatically launch and start streaming immediately after creation"
                            },
                            "live_stream_id": {
                              "type": "string",
                              "description": "The Live Stream ID to broadcast this Web Input to"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "idle",
                                "launching",
                                "streaming"
                              ]
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "Arbitrary metadata that will be included in the Web Input details and related webhooks. Can be used to store your own ID for the Web Input. **Max: 255 characters**."
                            },
                            "resolution": {
                              "type": "string",
                              "description": "The resolution of the viewport of the Web Input's browser instance. Defaults to 1920x1080 if not set.",
                              "enum": [
                                "1920x1080",
                                "1280x720",
                                "1080x1920",
                                "720x1280",
                                "1080x1080",
                                "720x720"
                              ],
                              "default": "1920x1080"
                            },
                            "timeout": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The number of seconds that the Web Input should stream for before automatically shutting down.",
                              "default": 3600
                            }
                          }
                        },
                        {
                          "x-required": [
                            "id",
                            "created_at",
                            "url",
                            "auto_launch",
                            "live_stream_id",
                            "status",
                            "resolution"
                          ]
                        }
                      ]
                    }
                  },
                  "x-required": [
                    "data"
                  ]
                },
                "example": {
                  "data": {
                    "id": "S3Jlx7KABs1EfhscCGEM02G5RYpgwb02nn",
                    "created_at": "1609868768",
                    "url": "https://example.com/hello.html",
                    "live_stream_id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "status": "idle",
                    "resolution": "1920x1080",
                    "timeout": 3600
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Web Inputs"
        ],
        "summary": "List Web Inputs",
        "description": "List Web Inputs",
        "operationId": "list-web-inputs",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the Web Input."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "int64",
                                "description": "Time the Web Input was created, defined as a Unix timestamp (seconds since epoch)."
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL for the Web Input to load."
                              },
                              "auto_launch": {
                                "type": "boolean",
                                "description": "When set to `true` the Web Input will automatically launch and start streaming immediately after creation"
                              },
                              "live_stream_id": {
                                "type": "string",
                                "description": "The Live Stream ID to broadcast this Web Input to"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "idle",
                                  "launching",
                                  "streaming"
                                ]
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary metadata that will be included in the Web Input details and related webhooks. Can be used to store your own ID for the Web Input. **Max: 255 characters**."
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The resolution of the viewport of the Web Input's browser instance. Defaults to 1920x1080 if not set.",
                                "enum": [
                                  "1920x1080",
                                  "1280x720",
                                  "1080x1920",
                                  "720x1280",
                                  "1080x1080",
                                  "720x720"
                                ],
                                "default": "1920x1080"
                              },
                              "timeout": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of seconds that the Web Input should stream for before automatically shutting down.",
                                "default": 3600
                              }
                            }
                          },
                          {
                            "x-required": [
                              "id",
                              "created_at",
                              "url",
                              "auto_launch",
                              "live_stream_id",
                              "status",
                              "resolution"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "x-required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "id": "S3Jlx7KABs1EfhscCGEM02G5RYpgwb02nn",
                      "created_at": "1609868768",
                      "url": "https://example.com/hello.html",
                      "live_stream_id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                      "status": "idle",
                      "resolution": "1920x1080",
                      "timeout": 3600
                    },
                    {
                      "id": "eMSK5cBGHTz3DLVjGy02BnrKvCLPN2QdF",
                      "created_at": "1609868768",
                      "url": "https://example.com/hello-there.html",
                      "live_stream_id": "RlWPQAZ1PdGuL2eZYmZ50202XUlc7Cn1AM",
                      "status": "idle",
                      "resolution": "720x720",
                      "timeout": 3600
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/web-inputs/{WEB_INPUT_ID}": {
      "get": {
        "tags": [
          "Web Inputs"
        ],
        "summary": "Retrieve a Web Input",
        "description": "Retrieve a single Web Input's info",
        "operationId": "get-web-input",
        "parameters": [
          {
            "name": "WEB_INPUT_ID",
            "in": "path",
            "description": "The Web Input ID",
            "required": true,
            "example": "abcd1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the Web Input."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "int64",
                              "description": "Time the Web Input was created, defined as a Unix timestamp (seconds since epoch)."
                            },
                            "url": {
                              "type": "string",
                              "description": "The URL for the Web Input to load."
                            },
                            "auto_launch": {
                              "type": "boolean",
                              "description": "When set to `true` the Web Input will automatically launch and start streaming immediately after creation"
                            },
                            "live_stream_id": {
                              "type": "string",
                              "description": "The Live Stream ID to broadcast this Web Input to"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "idle",
                                "launching",
                                "streaming"
                              ]
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "Arbitrary metadata that will be included in the Web Input details and related webhooks. Can be used to store your own ID for the Web Input. **Max: 255 characters**."
                            },
                            "resolution": {
                              "type": "string",
                              "description": "The resolution of the viewport of the Web Input's browser instance. Defaults to 1920x1080 if not set.",
                              "enum": [
                                "1920x1080",
                                "1280x720",
                                "1080x1920",
                                "720x1280",
                                "1080x1080",
                                "720x720"
                              ],
                              "default": "1920x1080"
                            },
                            "timeout": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The number of seconds that the Web Input should stream for before automatically shutting down.",
                              "default": 3600
                            }
                          }
                        },
                        {
                          "x-required": [
                            "id",
                            "created_at",
                            "url",
                            "auto_launch",
                            "live_stream_id",
                            "status",
                            "resolution"
                          ]
                        }
                      ]
                    }
                  },
                  "x-required": [
                    "data"
                  ]
                },
                "example": {
                  "data": {
                    "id": "S3Jlx7KABs1EfhscCGEM02G5RYpgwb02nn",
                    "created_at": "1609868768",
                    "url": "https://example.com/hello.html",
                    "live_stream_id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "status": "idle",
                    "resolution": "1920x1080",
                    "timeout": 3600
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web Inputs"
        ],
        "summary": "Delete a Web Input",
        "description": "Deletes a Web Input and all its data",
        "operationId": "delete-web-input",
        "parameters": [
          {
            "name": "WEB_INPUT_ID",
            "in": "path",
            "description": "The Web Input ID",
            "required": true,
            "example": "abcd1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/web-inputs/{WEB_INPUT_ID}/launch": {
      "put": {
        "tags": [
          "Web Inputs"
        ],
        "summary": "Launch a Web Input",
        "description": "Launches the browsers instance, loads the URL specified, and then starts streaming to the specified Live Stream.",
        "operationId": "launch-web-input",
        "parameters": [
          {
            "name": "WEB_INPUT_ID",
            "in": "path",
            "description": "The Web Input ID",
            "required": true,
            "example": "abcd1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "x-required": [
                    "data"
                  ]
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/web-inputs/{WEB_INPUT_ID}/shutdown": {
      "put": {
        "tags": [
          "Web Inputs"
        ],
        "summary": "Shut down a Web Input",
        "description": "Ends streaming to the specified Live Stream, and then shuts down the Web Input browser instance.",
        "operationId": "shutdown-web-input",
        "parameters": [
          {
            "name": "WEB_INPUT_ID",
            "in": "path",
            "description": "The Web Input ID",
            "required": true,
            "example": "abcd1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "x-required": [
                    "data"
                  ]
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/web-inputs/{WEB_INPUT_ID}/reload": {
      "put": {
        "tags": [
          "Web Inputs"
        ],
        "summary": "Reload a Web Input",
        "description": "Reloads the page that a Web Input is displaying.\n\nNote: Using this when the Web Input is streaming will display the page reloading.\n",
        "operationId": "reload-web-input",
        "parameters": [
          {
            "name": "WEB_INPUT_ID",
            "in": "path",
            "description": "The Web Input ID",
            "required": true,
            "example": "abcd1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "x-required": [
                    "data"
                  ]
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/web-inputs/{WEB_INPUT_ID}/url": {
      "put": {
        "tags": [
          "Web Inputs"
        ],
        "summary": "Update Web Input URL",
        "description": "Changes the URL that a Web Input loads when it launches.\n\nNote: This can only be called when the Web Input is idle.\n",
        "operationId": "update-web-input-url",
        "parameters": [
          {
            "name": "WEB_INPUT_ID",
            "in": "path",
            "description": "The Web Input ID",
            "required": true,
            "example": "abcd1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL for the Web Input to load."
                  }
                },
                "x-required": [
                  "url"
                ]
              },
              "example": {
                "url": "https://example.com/hello-there.html"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the Web Input."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "int64",
                              "description": "Time the Web Input was created, defined as a Unix timestamp (seconds since epoch)."
                            },
                            "url": {
                              "type": "string",
                              "description": "The URL for the Web Input to load."
                            },
                            "auto_launch": {
                              "type": "boolean",
                              "description": "When set to `true` the Web Input will automatically launch and start streaming immediately after creation"
                            },
                            "live_stream_id": {
                              "type": "string",
                              "description": "The Live Stream ID to broadcast this Web Input to"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "idle",
                                "launching",
                                "streaming"
                              ]
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "Arbitrary metadata that will be included in the Web Input details and related webhooks. Can be used to store your own ID for the Web Input. **Max: 255 characters**."
                            },
                            "resolution": {
                              "type": "string",
                              "description": "The resolution of the viewport of the Web Input's browser instance. Defaults to 1920x1080 if not set.",
                              "enum": [
                                "1920x1080",
                                "1280x720",
                                "1080x1920",
                                "720x1280",
                                "1080x1080",
                                "720x720"
                              ],
                              "default": "1920x1080"
                            },
                            "timeout": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The number of seconds that the Web Input should stream for before automatically shutting down.",
                              "default": 3600
                            }
                          }
                        },
                        {
                          "x-required": [
                            "id",
                            "created_at",
                            "url",
                            "auto_launch",
                            "live_stream_id",
                            "status",
                            "resolution"
                          ]
                        }
                      ]
                    }
                  },
                  "x-required": [
                    "data"
                  ]
                },
                "example": {
                  "data": {
                    "id": "S3Jlx7KABs1EfhscCGEM02G5RYpgwb02nn",
                    "created_at": "1609868768",
                    "url": "https://example.com/hello-there.html",
                    "live_stream_id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "status": "idle",
                    "resolution": "1920x1080",
                    "timeout": 3600
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create an asset",
        "description": "Create a new Mux Video asset.",
        "operationId": "create-asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "input": {
                        "type": "array",
                        "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                        "deprecated": true,
                        "x-mux-doc-decorators-hidden-children": "all",
                        "items": {
                          "type": "object",
                          "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                            },
                            "overlay_settings": {
                              "type": "object",
                              "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                              "properties": {
                                "vertical_align": {
                                  "type": "string",
                                  "enum": [
                                    "top",
                                    "middle",
                                    "bottom"
                                  ],
                                  "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                },
                                "vertical_margin": {
                                  "type": "string",
                                  "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                },
                                "horizontal_align": {
                                  "type": "string",
                                  "enum": [
                                    "left",
                                    "center",
                                    "right"
                                  ],
                                  "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                },
                                "horizontal_margin": {
                                  "type": "string",
                                  "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                },
                                "width": {
                                  "type": "string",
                                  "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                },
                                "height": {
                                  "type": "string",
                                  "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                },
                                "opacity": {
                                  "type": "string",
                                  "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                }
                              }
                            },
                            "generated_subtitles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "A name for this subtitle track."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language to generate subtitles in.",
                                    "default": "en",
                                    "enum": [
                                      "en",
                                      "es",
                                      "it",
                                      "pt",
                                      "de",
                                      "fr",
                                      "pl",
                                      "ru",
                                      "nl",
                                      "ca",
                                      "tr",
                                      "sv",
                                      "uk",
                                      "no",
                                      "fi",
                                      "sk",
                                      "el",
                                      "cs",
                                      "hr",
                                      "da",
                                      "ro",
                                      "bg"
                                    ]
                                  }
                                }
                              },
                              "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                            },
                            "start_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "end_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "video",
                                "audio",
                                "text"
                              ],
                              "description": "This parameter is required for `text` type tracks."
                            },
                            "text_type": {
                              "type": "string",
                              "enum": [
                                "subtitles"
                              ],
                              "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                            },
                            "language_code": {
                              "type": "string",
                              "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                            },
                            "closed_captions": {
                              "type": "boolean",
                              "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            }
                          }
                        }
                      },
                      "inputs": {
                        "type": "array",
                        "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                        "items": {
                          "type": "object",
                          "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                            },
                            "overlay_settings": {
                              "type": "object",
                              "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                              "properties": {
                                "vertical_align": {
                                  "type": "string",
                                  "enum": [
                                    "top",
                                    "middle",
                                    "bottom"
                                  ],
                                  "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                },
                                "vertical_margin": {
                                  "type": "string",
                                  "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                },
                                "horizontal_align": {
                                  "type": "string",
                                  "enum": [
                                    "left",
                                    "center",
                                    "right"
                                  ],
                                  "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                },
                                "horizontal_margin": {
                                  "type": "string",
                                  "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                },
                                "width": {
                                  "type": "string",
                                  "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                },
                                "height": {
                                  "type": "string",
                                  "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                },
                                "opacity": {
                                  "type": "string",
                                  "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                }
                              }
                            },
                            "generated_subtitles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "A name for this subtitle track."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language to generate subtitles in.",
                                    "default": "en",
                                    "enum": [
                                      "en",
                                      "es",
                                      "it",
                                      "pt",
                                      "de",
                                      "fr",
                                      "pl",
                                      "ru",
                                      "nl",
                                      "ca",
                                      "tr",
                                      "sv",
                                      "uk",
                                      "no",
                                      "fi",
                                      "sk",
                                      "el",
                                      "cs",
                                      "hr",
                                      "da",
                                      "ro",
                                      "bg"
                                    ]
                                  }
                                }
                              },
                              "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                            },
                            "start_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "end_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "video",
                                "audio",
                                "text"
                              ],
                              "description": "This parameter is required for `text` type tracks."
                            },
                            "text_type": {
                              "type": "string",
                              "enum": [
                                "subtitles"
                              ],
                              "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                            },
                            "language_code": {
                              "type": "string",
                              "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                            },
                            "closed_captions": {
                              "type": "boolean",
                              "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            }
                          }
                        }
                      },
                      "playback_policy": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "deprecated": true,
                        "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                        "x-mux-doc-decorators-hidden-children": "all"
                      },
                      "playback_policies": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                      },
                      "advanced_playback_policies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policy": {
                              "type": "string",
                              "enum": [
                                "public",
                                "signed",
                                "drm"
                              ],
                              "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                            },
                            "drm_configuration_id": {
                              "type": "string",
                              "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                            }
                          }
                        },
                        "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                      },
                      "per_title_encode": {
                        "type": "boolean",
                        "format": "boolean",
                        "x-mux-doc-decorators": [
                          "hidden"
                        ],
                        "deprecated": true
                      },
                      "passthrough": {
                        "type": "string",
                        "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                      },
                      "mp4_support": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                          "none",
                          "standard",
                          "capped-1080p",
                          "audio-only",
                          "audio-only,capped-1080p"
                        ],
                        "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                        "x-mux-doc-decorators-deprecated-enum-values": [
                          "standard"
                        ]
                      },
                      "normalize_audio": {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                        "default": false
                      },
                      "master_access": {
                        "type": "string",
                        "enum": [
                          "none",
                          "temporary"
                        ],
                        "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                      },
                      "test": {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                      },
                      "max_resolution_tier": {
                        "type": "string",
                        "enum": [
                          "1080p",
                          "1440p",
                          "2160p"
                        ],
                        "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                      },
                      "encoding_tier": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                          "smart",
                          "baseline",
                          "premium"
                        ],
                        "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                      },
                      "video_quality": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "plus",
                          "premium"
                        ],
                        "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                      },
                      "static_renditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-required": [
                            "resolution"
                          ],
                          "properties": {
                            "resolution": {
                              "type": "string",
                              "enum": [
                                "highest",
                                "audio-only",
                                "2160p",
                                "1440p",
                                "1080p",
                                "720p",
                                "540p",
                                "480p",
                                "360p",
                                "270p"
                              ],
                              "x-mux-doc-decorators-hidden-enum-values": [
                                "2160p",
                                "1440p",
                                "1080p",
                                "720p",
                                "540p",
                                "480p",
                                "360p",
                                "270p"
                              ]
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                            }
                          }
                        },
                        "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                      },
                      "meta": {
                        "type": "object",
                        "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maxLength": 512,
                            "description": "The asset title. Max 512 code points."
                          },
                          "creator_id": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                          },
                          "external_id": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                          }
                        }
                      }
                    }
                  },
                  {
                    "x-required": [
                      "inputs"
                    ]
                  }
                ]
              },
              "example": {
                "inputs": [
                  {
                    "url": "https://muxed.s3.amazonaws.com/leds.mp4"
                  }
                ],
                "playback_policies": [
                  "public"
                ],
                "video_quality": "basic"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asset Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "status",
                        "max_resolution_tier",
                        "encoding_tier",
                        "master_access"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Asset. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "preparing",
                            "ready",
                            "errored"
                          ],
                          "description": "The status of the asset."
                        },
                        "duration": {
                          "type": "number",
                          "format": "double",
                          "description": "The duration of the asset in seconds (max duration for a single asset is 12 hours)."
                        },
                        "max_stored_resolution": {
                          "type": "string",
                          "enum": [
                            "Audio only",
                            "SD",
                            "HD",
                            "FHD",
                            "UHD"
                          ],
                          "description": "This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.",
                          "deprecated": true
                        },
                        "resolution_tier": {
                          "type": "string",
                          "enum": [
                            "audio-only",
                            "720p",
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."
                        },
                        "max_resolution_tier": {
                          "type": "string",
                          "enum": [
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                        },
                        "encoding_tier": {
                          "type": "string",
                          "deprecated": true,
                          "enum": [
                            "smart",
                            "baseline",
                            "premium"
                          ],
                          "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "video_quality": {
                          "type": "string",
                          "enum": [
                            "basic",
                            "plus",
                            "premium"
                          ],
                          "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "max_stored_frame_rate": {
                          "type": "number",
                          "format": "double",
                          "description": "The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."
                        },
                        "aspect_ratio": {
                          "type": "string",
                          "description": "The aspect ratio of the asset in the form of `width:height`, for example `16:9`."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "tracks": {
                          "type": "array",
                          "description": "The individual media tracks that make up an asset.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the Track"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of track",
                                "enum": [
                                  "video",
                                  "audio",
                                  "text"
                                ]
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
                              },
                              "max_width": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_height": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_frame_rate": {
                                "type": "number",
                                "format": "double",
                                "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
                              },
                              "max_channels": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
                              },
                              "max_channel_layout": {
                                "type": "string",
                                "description": "Only set for the `audio` type track.",
                                "deprecated": true
                              },
                              "text_type": {
                                "type": "string",
                                "enum": [
                                  "subtitles"
                                ],
                                "description": "This parameter is only set for `text` type tracks."
                              },
                              "text_source": {
                                "type": "string",
                                "description": "The source of the text contained in a Track of type `text`. Valid `text_source`\nvalues are listed below.\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n",
                                "enum": [
                                  "uploaded",
                                  "embedded",
                                  "generated_live",
                                  "generated_live_final",
                                  "generated_vod"
                                ]
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language code value represents [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \"English\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."
                              },
                              "closed_captions": {
                                "type": "boolean",
                                "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "preparing",
                                  "ready",
                                  "errored",
                                  "deleted"
                                ],
                                "description": "The status of the track. This parameter is only set for `text` type tracks."
                              },
                              "primary": {
                                "type": "boolean",
                                "description": "For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "object",
                          "description": "Object that describes any errors that happened when processing this asset.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of error that occurred for this asset."
                            },
                            "messages": {
                              "type": "array",
                              "description": "Error messages with more details.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "per_title_encode": {
                          "type": "boolean",
                          "format": "boolean",
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "deprecated": true
                        },
                        "upload_id": {
                          "type": "string",
                          "description": "Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."
                        },
                        "is_live": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id` , you can use the `meta` object instead. **Max: 255 characters**."
                        },
                        "live_stream_id": {
                          "type": "string",
                          "description": "Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "master": {
                          "type": "object",
                          "description": "An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.",
                          "properties": {
                            "status": {
                              "enum": [
                                "ready",
                                "preparing",
                                "errored"
                              ],
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "description": "The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."
                            }
                          }
                        },
                        "master_access": {
                          "type": "string",
                          "enum": [
                            "temporary",
                            "none"
                          ],
                          "default": "none"
                        },
                        "mp4_support": {
                          "type": "string",
                          "deprecated": true,
                          "default": "none",
                          "enum": [
                            "standard",
                            "none",
                            "capped-1080p",
                            "audio-only",
                            "audio-only,capped-1080p"
                          ],
                          "x-mux-doc-decorators-deprecated-enum-values": [
                            "standard"
                          ]
                        },
                        "source_asset_id": {
                          "type": "string",
                          "description": "Asset Identifier of the video used as the source for creating the clip."
                        },
                        "normalize_audio": {
                          "type": "boolean",
                          "default": false,
                          "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."
                        },
                        "static_renditions": {
                          "type": "object",
                          "description": "An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "disabled",
                              "description": "Indicates the status of downloadable MP4 versions of this asset. This field is only valid when `mp4_support` is enabled",
                              "enum": [
                                "ready",
                                "preparing",
                                "disabled",
                                "errored"
                              ]
                            },
                            "files": {
                              "type": "array",
                              "description": "Array of file objects.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "enum": [
                                      "low.mp4",
                                      "medium.mp4",
                                      "high.mp4",
                                      "highest.mp4",
                                      "audio.m4a",
                                      "capped-1080p.mp4",
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "description": "Name of the static rendition file"
                                  },
                                  "ext": {
                                    "type": "string",
                                    "description": "Extension of the static rendition file",
                                    "enum": [
                                      "mp4",
                                      "m4a"
                                    ]
                                  },
                                  "height": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The height of the static rendition's file in pixels"
                                  },
                                  "width": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The width of the static rendition's file in pixels"
                                  },
                                  "bitrate": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The bitrate in bits per second"
                                  },
                                  "filesize": {
                                    "type": "string",
                                    "format": "int64",
                                    "description": "The file size in bytes"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates the static rendition type of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "standard",
                                      "advanced"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "advanced"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Indicates the status of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.\n* `ready` indicates the MP4 has been generated and is ready for download\n* `preparing` indicates the asset has not been ingested or the static rendition is still being generated after an asset is ready\n* `skipped` indicates the static rendition will not be generated because the requested resolution conflicts with the asset attributes after the asset has been ingested\n* `errored` indicates the static rendition cannot be generated. For example, an asset could not be ingested\n",
                                    "enum": [
                                      "ready",
                                      "preparing",
                                      "skipped",
                                      "errored"
                                    ]
                                  },
                                  "resolution_tier": {
                                    "type": "string",
                                    "description": "Indicates the resolution tier of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "audio-only"
                                    ]
                                  },
                                  "resolution": {
                                    "type": "string",
                                    "description": "Indicates the resolution of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of this static rendition, used in managing this static rendition. This field is only valid for `static_renditions`, not for `mp4_support`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "recording_times": {
                          "type": "array",
                          "description": "An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \"slate\" type.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "started_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration of the live stream recorded. The time value is in seconds."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "content",
                                  "slate"
                                ],
                                "description": "The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."
                              }
                            }
                          }
                        },
                        "non_standard_input_reasons": {
                          "type": "object",
                          "description": "An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](mdc:https:/docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.",
                          "properties": {
                            "video_codec": {
                              "type": "string",
                              "description": "The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."
                            },
                            "audio_codec": {
                              "type": "string",
                              "description": "The audio codec used on the input file. Non-AAC audio codecs are non-standard."
                            },
                            "video_gop_size": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."
                            },
                            "video_frame_rate": {
                              "type": "string",
                              "description": "The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."
                            },
                            "video_resolution": {
                              "type": "string",
                              "description": "The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."
                            },
                            "video_bitrate": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what's considered standard which typically is 16 Mbps."
                            },
                            "pixel_aspect_ratio": {
                              "type": "string",
                              "description": "The video pixel aspect ratio of the input file."
                            },
                            "video_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List."
                            },
                            "audio_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List."
                            },
                            "unexpected_media_file_parameters": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "A catch-all reason when the input file in created with non-standard encoding parameters."
                            },
                            "unsupported_pixel_format": {
                              "type": "string",
                              "description": "The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."
                            }
                          }
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."
                        },
                        "ingest_type": {
                          "type": "string",
                          "enum": [
                            "on_demand_url",
                            "on_demand_direct_upload",
                            "on_demand_clip",
                            "live_rtmp",
                            "live_srt"
                          ],
                          "description": "The type of ingest used to create the asset."
                        },
                        "meta": {
                          "type": "object",
                          "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                          "properties": {
                            "title": {
                              "type": "string",
                              "maxLength": 512,
                              "description": "The asset title. Max 512 code points."
                            },
                            "creator_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                            },
                            "external_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "preparing",
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW"
                      }
                    ],
                    "master_access": "none",
                    "id": "SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv",
                    "encoding_tier": "baseline",
                    "video_quality": "basic",
                    "created_at": "1607452572"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "List assets",
        "description": "List all Mux assets.",
        "operationId": "list-assets",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "live_stream_id",
            "in": "query",
            "description": "Filter response to return all the assets for this live stream only",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upload_id",
            "in": "query",
            "description": "Filter response to return an asset created from this direct upload only",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-required": [
                          "id",
                          "created_at",
                          "status",
                          "max_resolution_tier",
                          "encoding_tier",
                          "master_access"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the Asset. Max 255 characters."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "int64",
                            "description": "Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "preparing",
                              "ready",
                              "errored"
                            ],
                            "description": "The status of the asset."
                          },
                          "duration": {
                            "type": "number",
                            "format": "double",
                            "description": "The duration of the asset in seconds (max duration for a single asset is 12 hours)."
                          },
                          "max_stored_resolution": {
                            "type": "string",
                            "enum": [
                              "Audio only",
                              "SD",
                              "HD",
                              "FHD",
                              "UHD"
                            ],
                            "description": "This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.",
                            "deprecated": true
                          },
                          "resolution_tier": {
                            "type": "string",
                            "enum": [
                              "audio-only",
                              "720p",
                              "1080p",
                              "1440p",
                              "2160p"
                            ],
                            "description": "The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."
                          },
                          "max_resolution_tier": {
                            "type": "string",
                            "enum": [
                              "1080p",
                              "1440p",
                              "2160p"
                            ],
                            "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                          },
                          "encoding_tier": {
                            "type": "string",
                            "deprecated": true,
                            "enum": [
                              "smart",
                              "baseline",
                              "premium"
                            ],
                            "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                          },
                          "video_quality": {
                            "type": "string",
                            "enum": [
                              "basic",
                              "plus",
                              "premium"
                            ],
                            "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                          },
                          "max_stored_frame_rate": {
                            "type": "number",
                            "format": "double",
                            "description": "The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."
                          },
                          "aspect_ratio": {
                            "type": "string",
                            "description": "The aspect ratio of the asset in the form of `width:height`, for example `16:9`."
                          },
                          "playback_ids": {
                            "type": "array",
                            "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                            "items": {
                              "type": "object",
                              "x-required": [
                                "id",
                                "policy"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier for the PlaybackID"
                                },
                                "policy": {
                                  "type": "string",
                                  "enum": [
                                    "public",
                                    "signed",
                                    "drm"
                                  ],
                                  "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                },
                                "drm_configuration_id": {
                                  "type": "string",
                                  "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                }
                              }
                            }
                          },
                          "tracks": {
                            "type": "array",
                            "description": "The individual media tracks that make up an asset.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier for the Track"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of track",
                                  "enum": [
                                    "video",
                                    "audio",
                                    "text"
                                  ]
                                },
                                "duration": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
                                },
                                "max_width": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
                                },
                                "max_height": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
                                },
                                "max_frame_rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
                                },
                                "max_channels": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
                                },
                                "max_channel_layout": {
                                  "type": "string",
                                  "description": "Only set for the `audio` type track.",
                                  "deprecated": true
                                },
                                "text_type": {
                                  "type": "string",
                                  "enum": [
                                    "subtitles"
                                  ],
                                  "description": "This parameter is only set for `text` type tracks."
                                },
                                "text_source": {
                                  "type": "string",
                                  "description": "The source of the text contained in a Track of type `text`. Valid `text_source`\nvalues are listed below.\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n",
                                  "enum": [
                                    "uploaded",
                                    "embedded",
                                    "generated_live",
                                    "generated_live_final",
                                    "generated_vod"
                                  ]
                                },
                                "language_code": {
                                  "type": "string",
                                  "description": "The language code value represents [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \"English\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."
                                },
                                "closed_captions": {
                                  "type": "boolean",
                                  "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."
                                },
                                "passthrough": {
                                  "type": "string",
                                  "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "preparing",
                                    "ready",
                                    "errored",
                                    "deleted"
                                  ],
                                  "description": "The status of the track. This parameter is only set for `text` type tracks."
                                },
                                "primary": {
                                  "type": "boolean",
                                  "description": "For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."
                                }
                              }
                            }
                          },
                          "errors": {
                            "type": "object",
                            "description": "Object that describes any errors that happened when processing this asset.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The type of error that occurred for this asset."
                              },
                              "messages": {
                                "type": "array",
                                "description": "Error messages with more details.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "per_title_encode": {
                            "type": "boolean",
                            "format": "boolean",
                            "x-mux-doc-decorators": [
                              "hidden"
                            ],
                            "deprecated": true
                          },
                          "upload_id": {
                            "type": "string",
                            "description": "Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."
                          },
                          "is_live": {
                            "type": "boolean",
                            "format": "boolean",
                            "description": "Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."
                          },
                          "passthrough": {
                            "type": "string",
                            "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id` , you can use the `meta` object instead. **Max: 255 characters**."
                          },
                          "live_stream_id": {
                            "type": "string",
                            "description": "Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."
                          },
                          "master": {
                            "type": "object",
                            "description": "An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.",
                            "properties": {
                              "status": {
                                "enum": [
                                  "ready",
                                  "preparing",
                                  "errored"
                                ],
                                "type": "string"
                              },
                              "url": {
                                "type": "string",
                                "description": "The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."
                              }
                            }
                          },
                          "master_access": {
                            "type": "string",
                            "enum": [
                              "temporary",
                              "none"
                            ],
                            "default": "none"
                          },
                          "mp4_support": {
                            "type": "string",
                            "deprecated": true,
                            "default": "none",
                            "enum": [
                              "standard",
                              "none",
                              "capped-1080p",
                              "audio-only",
                              "audio-only,capped-1080p"
                            ],
                            "x-mux-doc-decorators-deprecated-enum-values": [
                              "standard"
                            ]
                          },
                          "source_asset_id": {
                            "type": "string",
                            "description": "Asset Identifier of the video used as the source for creating the clip."
                          },
                          "normalize_audio": {
                            "type": "boolean",
                            "default": false,
                            "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."
                          },
                          "static_renditions": {
                            "type": "object",
                            "description": "An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.",
                            "properties": {
                              "status": {
                                "type": "string",
                                "default": "disabled",
                                "description": "Indicates the status of downloadable MP4 versions of this asset. This field is only valid when `mp4_support` is enabled",
                                "enum": [
                                  "ready",
                                  "preparing",
                                  "disabled",
                                  "errored"
                                ]
                              },
                              "files": {
                                "type": "array",
                                "description": "Array of file objects.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "enum": [
                                        "low.mp4",
                                        "medium.mp4",
                                        "high.mp4",
                                        "highest.mp4",
                                        "audio.m4a",
                                        "capped-1080p.mp4",
                                        "2160p.mp4",
                                        "1440p.mp4",
                                        "1080p.mp4",
                                        "720p.mp4",
                                        "540p.mp4",
                                        "480p.mp4",
                                        "360p.mp4",
                                        "270p.mp4"
                                      ],
                                      "x-mux-doc-decorators-hidden-enum-values": [
                                        "2160p.mp4",
                                        "1440p.mp4",
                                        "1080p.mp4",
                                        "720p.mp4",
                                        "540p.mp4",
                                        "480p.mp4",
                                        "360p.mp4",
                                        "270p.mp4"
                                      ],
                                      "description": "Name of the static rendition file"
                                    },
                                    "ext": {
                                      "type": "string",
                                      "description": "Extension of the static rendition file",
                                      "enum": [
                                        "mp4",
                                        "m4a"
                                      ]
                                    },
                                    "height": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The height of the static rendition's file in pixels"
                                    },
                                    "width": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The width of the static rendition's file in pixels"
                                    },
                                    "bitrate": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The bitrate in bits per second"
                                    },
                                    "filesize": {
                                      "type": "string",
                                      "format": "int64",
                                      "description": "The file size in bytes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Indicates the static rendition type of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                      "enum": [
                                        "standard",
                                        "advanced"
                                      ],
                                      "x-mux-doc-decorators-hidden-enum-values": [
                                        "advanced"
                                      ]
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Indicates the status of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.\n* `ready` indicates the MP4 has been generated and is ready for download\n* `preparing` indicates the asset has not been ingested or the static rendition is still being generated after an asset is ready\n* `skipped` indicates the static rendition will not be generated because the requested resolution conflicts with the asset attributes after the asset has been ingested\n* `errored` indicates the static rendition cannot be generated. For example, an asset could not be ingested\n",
                                      "enum": [
                                        "ready",
                                        "preparing",
                                        "skipped",
                                        "errored"
                                      ]
                                    },
                                    "resolution_tier": {
                                      "type": "string",
                                      "description": "Indicates the resolution tier of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                      "enum": [
                                        "2160p",
                                        "1440p",
                                        "1080p",
                                        "720p",
                                        "audio-only"
                                      ]
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "Indicates the resolution of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                      "enum": [
                                        "highest",
                                        "audio-only",
                                        "2160p",
                                        "1440p",
                                        "1080p",
                                        "720p",
                                        "540p",
                                        "480p",
                                        "360p",
                                        "270p"
                                      ],
                                      "x-mux-doc-decorators-hidden-enum-values": [
                                        "2160p",
                                        "1440p",
                                        "1080p",
                                        "720p",
                                        "540p",
                                        "480p",
                                        "360p",
                                        "270p"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The ID of this static rendition, used in managing this static rendition. This field is only valid for `static_renditions`, not for `mp4_support`."
                                    },
                                    "passthrough": {
                                      "type": "string",
                                      "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "recording_times": {
                            "type": "array",
                            "description": "An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \"slate\" type.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "started_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."
                                },
                                "duration": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The duration of the live stream recorded. The time value is in seconds."
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "content",
                                    "slate"
                                  ],
                                  "description": "The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."
                                }
                              }
                            }
                          },
                          "non_standard_input_reasons": {
                            "type": "object",
                            "description": "An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](mdc:https:/docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.",
                            "properties": {
                              "video_codec": {
                                "type": "string",
                                "description": "The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."
                              },
                              "audio_codec": {
                                "type": "string",
                                "description": "The audio codec used on the input file. Non-AAC audio codecs are non-standard."
                              },
                              "video_gop_size": {
                                "type": "string",
                                "enum": [
                                  "high"
                                ],
                                "description": "The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."
                              },
                              "video_frame_rate": {
                                "type": "string",
                                "description": "The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."
                              },
                              "video_resolution": {
                                "type": "string",
                                "description": "The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."
                              },
                              "video_bitrate": {
                                "type": "string",
                                "enum": [
                                  "high"
                                ],
                                "description": "The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what's considered standard which typically is 16 Mbps."
                              },
                              "pixel_aspect_ratio": {
                                "type": "string",
                                "description": "The video pixel aspect ratio of the input file."
                              },
                              "video_edit_list": {
                                "type": "string",
                                "enum": [
                                  "non-standard"
                                ],
                                "description": "Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List."
                              },
                              "audio_edit_list": {
                                "type": "string",
                                "enum": [
                                  "non-standard"
                                ],
                                "description": "Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List."
                              },
                              "unexpected_media_file_parameters": {
                                "type": "string",
                                "enum": [
                                  "non-standard"
                                ],
                                "description": "A catch-all reason when the input file in created with non-standard encoding parameters."
                              },
                              "unsupported_pixel_format": {
                                "type": "string",
                                "description": "The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."
                              }
                            }
                          },
                          "test": {
                            "type": "boolean",
                            "format": "boolean",
                            "description": "True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."
                          },
                          "ingest_type": {
                            "type": "string",
                            "enum": [
                              "on_demand_url",
                              "on_demand_direct_upload",
                              "on_demand_clip",
                              "live_rtmp",
                              "live_srt"
                            ],
                            "description": "The type of ingest used to create the asset."
                          },
                          "meta": {
                            "type": "object",
                            "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                            "properties": {
                              "title": {
                                "type": "string",
                                "maxLength": 512,
                                "description": "The asset title. Max 512 code points."
                              },
                              "creator_id": {
                                "type": "string",
                                "maxLength": 128,
                                "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                              },
                              "external_id": {
                                "type": "string",
                                "maxLength": 128,
                                "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "tracks": [
                        {
                          "type": "video",
                          "max_width": 1920,
                          "max_height": 800,
                          "max_frame_rate": 24,
                          "id": "HK01Bq7FrEQmIu3QpRiZZ98HQOOZjm6BYyg17eEunlyo",
                          "duration": 734.166667
                        },
                        {
                          "type": "audio",
                          "max_channels": 2,
                          "id": "nNKHJqw2G9cE019AoK16CJr3O27gGnbtW4w525hJWqWw",
                          "duration": 734.143991
                        }
                      ],
                      "status": "ready",
                      "playback_ids": [
                        {
                          "policy": "public",
                          "id": "85g23gYz7NmQu02YsY81ihuod6cZMxCp017ZrfglyLCKc"
                        }
                      ],
                      "max_stored_resolution": "HD",
                      "resolution_tier": "1080p",
                      "max_stored_frame_rate": 24,
                      "master_access": "none",
                      "id": "8jd7M77xQgf2NzuocJRPYdSdEfY5dLlcRwFARtgQqU4",
                      "encoding_tier": "baseline",
                      "video_quality": "basic",
                      "duration": 734.25,
                      "created_at": "1609869152",
                      "aspect_ratio": "12:5"
                    },
                    {
                      "tracks": [
                        {
                          "type": "video",
                          "max_width": 1920,
                          "max_height": 1080,
                          "max_frame_rate": 29.97,
                          "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                          "duration": 23.8238
                        },
                        {
                          "type": "audio",
                          "max_channels": 2,
                          "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                          "duration": 23.823792
                        }
                      ],
                      "status": "ready",
                      "playback_ids": [
                        {
                          "policy": "public",
                          "id": "vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I"
                        }
                      ],
                      "max_stored_resolution": "HD",
                      "resolution_tier": "1080p",
                      "max_stored_frame_rate": 29.97,
                      "master_access": "none",
                      "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                      "encoding_tier": "smart",
                      "video_quality": "plus",
                      "duration": 23.857167,
                      "created_at": "1609868768",
                      "aspect_ratio": "16:9"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve an asset",
        "description": "Retrieves the details of an asset that has previously been created. Supply the unique asset ID that was returned from your previous request, and Mux will return the corresponding asset information. The same information is returned when creating an asset.",
        "operationId": "get-asset",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "status",
                        "max_resolution_tier",
                        "encoding_tier",
                        "master_access"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Asset. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "preparing",
                            "ready",
                            "errored"
                          ],
                          "description": "The status of the asset."
                        },
                        "duration": {
                          "type": "number",
                          "format": "double",
                          "description": "The duration of the asset in seconds (max duration for a single asset is 12 hours)."
                        },
                        "max_stored_resolution": {
                          "type": "string",
                          "enum": [
                            "Audio only",
                            "SD",
                            "HD",
                            "FHD",
                            "UHD"
                          ],
                          "description": "This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.",
                          "deprecated": true
                        },
                        "resolution_tier": {
                          "type": "string",
                          "enum": [
                            "audio-only",
                            "720p",
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."
                        },
                        "max_resolution_tier": {
                          "type": "string",
                          "enum": [
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                        },
                        "encoding_tier": {
                          "type": "string",
                          "deprecated": true,
                          "enum": [
                            "smart",
                            "baseline",
                            "premium"
                          ],
                          "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "video_quality": {
                          "type": "string",
                          "enum": [
                            "basic",
                            "plus",
                            "premium"
                          ],
                          "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "max_stored_frame_rate": {
                          "type": "number",
                          "format": "double",
                          "description": "The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."
                        },
                        "aspect_ratio": {
                          "type": "string",
                          "description": "The aspect ratio of the asset in the form of `width:height`, for example `16:9`."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "tracks": {
                          "type": "array",
                          "description": "The individual media tracks that make up an asset.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the Track"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of track",
                                "enum": [
                                  "video",
                                  "audio",
                                  "text"
                                ]
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
                              },
                              "max_width": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_height": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_frame_rate": {
                                "type": "number",
                                "format": "double",
                                "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
                              },
                              "max_channels": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
                              },
                              "max_channel_layout": {
                                "type": "string",
                                "description": "Only set for the `audio` type track.",
                                "deprecated": true
                              },
                              "text_type": {
                                "type": "string",
                                "enum": [
                                  "subtitles"
                                ],
                                "description": "This parameter is only set for `text` type tracks."
                              },
                              "text_source": {
                                "type": "string",
                                "description": "The source of the text contained in a Track of type `text`. Valid `text_source`\nvalues are listed below.\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n",
                                "enum": [
                                  "uploaded",
                                  "embedded",
                                  "generated_live",
                                  "generated_live_final",
                                  "generated_vod"
                                ]
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language code value represents [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \"English\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."
                              },
                              "closed_captions": {
                                "type": "boolean",
                                "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "preparing",
                                  "ready",
                                  "errored",
                                  "deleted"
                                ],
                                "description": "The status of the track. This parameter is only set for `text` type tracks."
                              },
                              "primary": {
                                "type": "boolean",
                                "description": "For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "object",
                          "description": "Object that describes any errors that happened when processing this asset.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of error that occurred for this asset."
                            },
                            "messages": {
                              "type": "array",
                              "description": "Error messages with more details.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "per_title_encode": {
                          "type": "boolean",
                          "format": "boolean",
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "deprecated": true
                        },
                        "upload_id": {
                          "type": "string",
                          "description": "Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."
                        },
                        "is_live": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id` , you can use the `meta` object instead. **Max: 255 characters**."
                        },
                        "live_stream_id": {
                          "type": "string",
                          "description": "Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "master": {
                          "type": "object",
                          "description": "An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.",
                          "properties": {
                            "status": {
                              "enum": [
                                "ready",
                                "preparing",
                                "errored"
                              ],
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "description": "The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."
                            }
                          }
                        },
                        "master_access": {
                          "type": "string",
                          "enum": [
                            "temporary",
                            "none"
                          ],
                          "default": "none"
                        },
                        "mp4_support": {
                          "type": "string",
                          "deprecated": true,
                          "default": "none",
                          "enum": [
                            "standard",
                            "none",
                            "capped-1080p",
                            "audio-only",
                            "audio-only,capped-1080p"
                          ],
                          "x-mux-doc-decorators-deprecated-enum-values": [
                            "standard"
                          ]
                        },
                        "source_asset_id": {
                          "type": "string",
                          "description": "Asset Identifier of the video used as the source for creating the clip."
                        },
                        "normalize_audio": {
                          "type": "boolean",
                          "default": false,
                          "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."
                        },
                        "static_renditions": {
                          "type": "object",
                          "description": "An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "disabled",
                              "description": "Indicates the status of downloadable MP4 versions of this asset. This field is only valid when `mp4_support` is enabled",
                              "enum": [
                                "ready",
                                "preparing",
                                "disabled",
                                "errored"
                              ]
                            },
                            "files": {
                              "type": "array",
                              "description": "Array of file objects.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "enum": [
                                      "low.mp4",
                                      "medium.mp4",
                                      "high.mp4",
                                      "highest.mp4",
                                      "audio.m4a",
                                      "capped-1080p.mp4",
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "description": "Name of the static rendition file"
                                  },
                                  "ext": {
                                    "type": "string",
                                    "description": "Extension of the static rendition file",
                                    "enum": [
                                      "mp4",
                                      "m4a"
                                    ]
                                  },
                                  "height": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The height of the static rendition's file in pixels"
                                  },
                                  "width": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The width of the static rendition's file in pixels"
                                  },
                                  "bitrate": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The bitrate in bits per second"
                                  },
                                  "filesize": {
                                    "type": "string",
                                    "format": "int64",
                                    "description": "The file size in bytes"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates the static rendition type of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "standard",
                                      "advanced"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "advanced"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Indicates the status of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.\n* `ready` indicates the MP4 has been generated and is ready for download\n* `preparing` indicates the asset has not been ingested or the static rendition is still being generated after an asset is ready\n* `skipped` indicates the static rendition will not be generated because the requested resolution conflicts with the asset attributes after the asset has been ingested\n* `errored` indicates the static rendition cannot be generated. For example, an asset could not be ingested\n",
                                    "enum": [
                                      "ready",
                                      "preparing",
                                      "skipped",
                                      "errored"
                                    ]
                                  },
                                  "resolution_tier": {
                                    "type": "string",
                                    "description": "Indicates the resolution tier of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "audio-only"
                                    ]
                                  },
                                  "resolution": {
                                    "type": "string",
                                    "description": "Indicates the resolution of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of this static rendition, used in managing this static rendition. This field is only valid for `static_renditions`, not for `mp4_support`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "recording_times": {
                          "type": "array",
                          "description": "An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \"slate\" type.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "started_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration of the live stream recorded. The time value is in seconds."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "content",
                                  "slate"
                                ],
                                "description": "The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."
                              }
                            }
                          }
                        },
                        "non_standard_input_reasons": {
                          "type": "object",
                          "description": "An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](mdc:https:/docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.",
                          "properties": {
                            "video_codec": {
                              "type": "string",
                              "description": "The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."
                            },
                            "audio_codec": {
                              "type": "string",
                              "description": "The audio codec used on the input file. Non-AAC audio codecs are non-standard."
                            },
                            "video_gop_size": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."
                            },
                            "video_frame_rate": {
                              "type": "string",
                              "description": "The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."
                            },
                            "video_resolution": {
                              "type": "string",
                              "description": "The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."
                            },
                            "video_bitrate": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what's considered standard which typically is 16 Mbps."
                            },
                            "pixel_aspect_ratio": {
                              "type": "string",
                              "description": "The video pixel aspect ratio of the input file."
                            },
                            "video_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List."
                            },
                            "audio_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List."
                            },
                            "unexpected_media_file_parameters": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "A catch-all reason when the input file in created with non-standard encoding parameters."
                            },
                            "unsupported_pixel_format": {
                              "type": "string",
                              "description": "The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."
                            }
                          }
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."
                        },
                        "ingest_type": {
                          "type": "string",
                          "enum": [
                            "on_demand_url",
                            "on_demand_direct_upload",
                            "on_demand_clip",
                            "live_rtmp",
                            "live_srt"
                          ],
                          "description": "The type of ingest used to create the asset."
                        },
                        "meta": {
                          "type": "object",
                          "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                          "properties": {
                            "title": {
                              "type": "string",
                              "maxLength": 512,
                              "description": "The asset title. Max 512 code points."
                            },
                            "creator_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                            },
                            "external_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "tracks": [
                      {
                        "type": "video",
                        "max_width": 1920,
                        "max_height": 1080,
                        "max_frame_rate": 29.97,
                        "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                        "duration": 23.8238
                      },
                      {
                        "type": "audio",
                        "max_channels": 2,
                        "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                        "duration": 23.823792
                      }
                    ],
                    "status": "ready",
                    "resolution_tier": "1080p",
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I"
                      }
                    ],
                    "passthrough": "example",
                    "max_stored_resolution": "HD",
                    "max_stored_frame_rate": 29.97,
                    "max_resolution_tier": "1080p",
                    "master_access": "none",
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "encoding_tier": "baseline",
                    "video_quality": "basic",
                    "duration": 23.857167,
                    "created_at": "1609868768",
                    "aspect_ratio": "16:9"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete an asset",
        "description": "Deletes a video asset and all its data.",
        "operationId": "delete-asset",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Assets"
        ],
        "summary": "Update an asset",
        "description": "Updates the details of an already-created Asset with the provided Asset ID. This currently supports only the `passthrough` field.",
        "operationId": "update-asset",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "passthrough": {
                    "type": "string",
                    "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id` , you can use the `meta` object instead. **Max: 255 characters**. In order to clear this value, the field should be included with an empty string value."
                  },
                  "meta": {
                    "type": "object",
                    "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                    "properties": {
                      "title": {
                        "type": "string",
                        "maxLength": 512,
                        "description": "The asset title. Max 512 code points."
                      },
                      "creator_id": {
                        "type": "string",
                        "maxLength": 128,
                        "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                      },
                      "external_id": {
                        "type": "string",
                        "maxLength": 128,
                        "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                      }
                    }
                  }
                }
              },
              "example": {
                "passthrough": "Example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "status",
                        "max_resolution_tier",
                        "encoding_tier",
                        "master_access"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Asset. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "preparing",
                            "ready",
                            "errored"
                          ],
                          "description": "The status of the asset."
                        },
                        "duration": {
                          "type": "number",
                          "format": "double",
                          "description": "The duration of the asset in seconds (max duration for a single asset is 12 hours)."
                        },
                        "max_stored_resolution": {
                          "type": "string",
                          "enum": [
                            "Audio only",
                            "SD",
                            "HD",
                            "FHD",
                            "UHD"
                          ],
                          "description": "This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.",
                          "deprecated": true
                        },
                        "resolution_tier": {
                          "type": "string",
                          "enum": [
                            "audio-only",
                            "720p",
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."
                        },
                        "max_resolution_tier": {
                          "type": "string",
                          "enum": [
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                        },
                        "encoding_tier": {
                          "type": "string",
                          "deprecated": true,
                          "enum": [
                            "smart",
                            "baseline",
                            "premium"
                          ],
                          "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "video_quality": {
                          "type": "string",
                          "enum": [
                            "basic",
                            "plus",
                            "premium"
                          ],
                          "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "max_stored_frame_rate": {
                          "type": "number",
                          "format": "double",
                          "description": "The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."
                        },
                        "aspect_ratio": {
                          "type": "string",
                          "description": "The aspect ratio of the asset in the form of `width:height`, for example `16:9`."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "tracks": {
                          "type": "array",
                          "description": "The individual media tracks that make up an asset.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the Track"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of track",
                                "enum": [
                                  "video",
                                  "audio",
                                  "text"
                                ]
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
                              },
                              "max_width": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_height": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_frame_rate": {
                                "type": "number",
                                "format": "double",
                                "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
                              },
                              "max_channels": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
                              },
                              "max_channel_layout": {
                                "type": "string",
                                "description": "Only set for the `audio` type track.",
                                "deprecated": true
                              },
                              "text_type": {
                                "type": "string",
                                "enum": [
                                  "subtitles"
                                ],
                                "description": "This parameter is only set for `text` type tracks."
                              },
                              "text_source": {
                                "type": "string",
                                "description": "The source of the text contained in a Track of type `text`. Valid `text_source`\nvalues are listed below.\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n",
                                "enum": [
                                  "uploaded",
                                  "embedded",
                                  "generated_live",
                                  "generated_live_final",
                                  "generated_vod"
                                ]
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language code value represents [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \"English\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."
                              },
                              "closed_captions": {
                                "type": "boolean",
                                "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "preparing",
                                  "ready",
                                  "errored",
                                  "deleted"
                                ],
                                "description": "The status of the track. This parameter is only set for `text` type tracks."
                              },
                              "primary": {
                                "type": "boolean",
                                "description": "For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "object",
                          "description": "Object that describes any errors that happened when processing this asset.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of error that occurred for this asset."
                            },
                            "messages": {
                              "type": "array",
                              "description": "Error messages with more details.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "per_title_encode": {
                          "type": "boolean",
                          "format": "boolean",
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "deprecated": true
                        },
                        "upload_id": {
                          "type": "string",
                          "description": "Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."
                        },
                        "is_live": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id` , you can use the `meta` object instead. **Max: 255 characters**."
                        },
                        "live_stream_id": {
                          "type": "string",
                          "description": "Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "master": {
                          "type": "object",
                          "description": "An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.",
                          "properties": {
                            "status": {
                              "enum": [
                                "ready",
                                "preparing",
                                "errored"
                              ],
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "description": "The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."
                            }
                          }
                        },
                        "master_access": {
                          "type": "string",
                          "enum": [
                            "temporary",
                            "none"
                          ],
                          "default": "none"
                        },
                        "mp4_support": {
                          "type": "string",
                          "deprecated": true,
                          "default": "none",
                          "enum": [
                            "standard",
                            "none",
                            "capped-1080p",
                            "audio-only",
                            "audio-only,capped-1080p"
                          ],
                          "x-mux-doc-decorators-deprecated-enum-values": [
                            "standard"
                          ]
                        },
                        "source_asset_id": {
                          "type": "string",
                          "description": "Asset Identifier of the video used as the source for creating the clip."
                        },
                        "normalize_audio": {
                          "type": "boolean",
                          "default": false,
                          "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."
                        },
                        "static_renditions": {
                          "type": "object",
                          "description": "An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "disabled",
                              "description": "Indicates the status of downloadable MP4 versions of this asset. This field is only valid when `mp4_support` is enabled",
                              "enum": [
                                "ready",
                                "preparing",
                                "disabled",
                                "errored"
                              ]
                            },
                            "files": {
                              "type": "array",
                              "description": "Array of file objects.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "enum": [
                                      "low.mp4",
                                      "medium.mp4",
                                      "high.mp4",
                                      "highest.mp4",
                                      "audio.m4a",
                                      "capped-1080p.mp4",
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "description": "Name of the static rendition file"
                                  },
                                  "ext": {
                                    "type": "string",
                                    "description": "Extension of the static rendition file",
                                    "enum": [
                                      "mp4",
                                      "m4a"
                                    ]
                                  },
                                  "height": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The height of the static rendition's file in pixels"
                                  },
                                  "width": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The width of the static rendition's file in pixels"
                                  },
                                  "bitrate": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The bitrate in bits per second"
                                  },
                                  "filesize": {
                                    "type": "string",
                                    "format": "int64",
                                    "description": "The file size in bytes"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates the static rendition type of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "standard",
                                      "advanced"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "advanced"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Indicates the status of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.\n* `ready` indicates the MP4 has been generated and is ready for download\n* `preparing` indicates the asset has not been ingested or the static rendition is still being generated after an asset is ready\n* `skipped` indicates the static rendition will not be generated because the requested resolution conflicts with the asset attributes after the asset has been ingested\n* `errored` indicates the static rendition cannot be generated. For example, an asset could not be ingested\n",
                                    "enum": [
                                      "ready",
                                      "preparing",
                                      "skipped",
                                      "errored"
                                    ]
                                  },
                                  "resolution_tier": {
                                    "type": "string",
                                    "description": "Indicates the resolution tier of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "audio-only"
                                    ]
                                  },
                                  "resolution": {
                                    "type": "string",
                                    "description": "Indicates the resolution of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of this static rendition, used in managing this static rendition. This field is only valid for `static_renditions`, not for `mp4_support`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "recording_times": {
                          "type": "array",
                          "description": "An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \"slate\" type.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "started_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration of the live stream recorded. The time value is in seconds."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "content",
                                  "slate"
                                ],
                                "description": "The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."
                              }
                            }
                          }
                        },
                        "non_standard_input_reasons": {
                          "type": "object",
                          "description": "An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](mdc:https:/docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.",
                          "properties": {
                            "video_codec": {
                              "type": "string",
                              "description": "The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."
                            },
                            "audio_codec": {
                              "type": "string",
                              "description": "The audio codec used on the input file. Non-AAC audio codecs are non-standard."
                            },
                            "video_gop_size": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."
                            },
                            "video_frame_rate": {
                              "type": "string",
                              "description": "The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."
                            },
                            "video_resolution": {
                              "type": "string",
                              "description": "The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."
                            },
                            "video_bitrate": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what's considered standard which typically is 16 Mbps."
                            },
                            "pixel_aspect_ratio": {
                              "type": "string",
                              "description": "The video pixel aspect ratio of the input file."
                            },
                            "video_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List."
                            },
                            "audio_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List."
                            },
                            "unexpected_media_file_parameters": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "A catch-all reason when the input file in created with non-standard encoding parameters."
                            },
                            "unsupported_pixel_format": {
                              "type": "string",
                              "description": "The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."
                            }
                          }
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."
                        },
                        "ingest_type": {
                          "type": "string",
                          "enum": [
                            "on_demand_url",
                            "on_demand_direct_upload",
                            "on_demand_clip",
                            "live_rtmp",
                            "live_srt"
                          ],
                          "description": "The type of ingest used to create the asset."
                        },
                        "meta": {
                          "type": "object",
                          "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                          "properties": {
                            "title": {
                              "type": "string",
                              "maxLength": 512,
                              "description": "The asset title. Max 512 code points."
                            },
                            "creator_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                            },
                            "external_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "tracks": [
                      {
                        "type": "video",
                        "max_width": 1920,
                        "max_height": 1080,
                        "max_frame_rate": 29.97,
                        "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                        "duration": 23.8238
                      },
                      {
                        "type": "audio",
                        "max_channels": 2,
                        "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                        "duration": 23.823792
                      }
                    ],
                    "status": "ready",
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I"
                      }
                    ],
                    "max_stored_resolution": "HD",
                    "resolution_tier": "1080p",
                    "max_stored_frame_rate": 29.97,
                    "master_access": "none",
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "encoding_tier": "baseline",
                    "video_quality": "basic",
                    "duration": 23.857167,
                    "created_at": "1609868768",
                    "updated_at": "1609869000",
                    "aspect_ratio": "16:9",
                    "passthrough": "Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/input-info": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve asset input info",
        "description": "Returns a list of the input objects that were used to create the asset along with any settings that were applied to each input.",
        "operationId": "get-asset-input-info",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "settings": {
                            "type": "object",
                            "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                              },
                              "overlay_settings": {
                                "type": "object",
                                "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                "properties": {
                                  "vertical_align": {
                                    "type": "string",
                                    "enum": [
                                      "top",
                                      "middle",
                                      "bottom"
                                    ],
                                    "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                  },
                                  "vertical_margin": {
                                    "type": "string",
                                    "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                  },
                                  "horizontal_align": {
                                    "type": "string",
                                    "enum": [
                                      "left",
                                      "center",
                                      "right"
                                    ],
                                    "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                  },
                                  "horizontal_margin": {
                                    "type": "string",
                                    "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                  },
                                  "width": {
                                    "type": "string",
                                    "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                  },
                                  "height": {
                                    "type": "string",
                                    "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                  },
                                  "opacity": {
                                    "type": "string",
                                    "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                  }
                                }
                              },
                              "generated_subtitles": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "A name for this subtitle track."
                                    },
                                    "passthrough": {
                                      "type": "string",
                                      "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                    },
                                    "language_code": {
                                      "type": "string",
                                      "description": "The language to generate subtitles in.",
                                      "default": "en",
                                      "enum": [
                                        "en",
                                        "es",
                                        "it",
                                        "pt",
                                        "de",
                                        "fr",
                                        "pl",
                                        "ru",
                                        "nl",
                                        "ca",
                                        "tr",
                                        "sv",
                                        "uk",
                                        "no",
                                        "fi",
                                        "sk",
                                        "el",
                                        "cs",
                                        "hr",
                                        "da",
                                        "ro",
                                        "bg"
                                      ]
                                    }
                                  }
                                },
                                "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                              },
                              "start_time": {
                                "type": "number",
                                "format": "double",
                                "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                              },
                              "end_time": {
                                "type": "number",
                                "format": "double",
                                "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "video",
                                  "audio",
                                  "text"
                                ],
                                "description": "This parameter is required for `text` type tracks."
                              },
                              "text_type": {
                                "type": "string",
                                "enum": [
                                  "subtitles"
                                ],
                                "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                              },
                              "closed_captions": {
                                "type": "boolean",
                                "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                              }
                            }
                          },
                          "file": {
                            "type": "object",
                            "properties": {
                              "container_format": {
                                "type": "string"
                              },
                              "tracks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "x-required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "duration": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "encoding": {
                                      "type": "string"
                                    },
                                    "width": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "height": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "frame_rate": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "sample_rate": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "sample_size": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "channels": {
                                      "type": "integer",
                                      "format": "int64"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "settings": {
                        "url": "https://muxed.s3.amazonaws.com/leds.mp4"
                      },
                      "file": {
                        "container_format": "mp4",
                        "tracks": [
                          {
                            "type": "video",
                            "duration": 120,
                            "width": 1280,
                            "height": 720,
                            "frame_rate": 30,
                            "encoding": "h.264"
                          },
                          {
                            "type": "audio",
                            "duration": 120,
                            "sample_rate": 16000,
                            "sample_size": 24,
                            "encoding": "aac"
                          }
                        ]
                      }
                    },
                    {
                      "settings": {
                        "url": "https://example.com/myVideo_en.srt"
                      },
                      "file": {
                        "container_format": "srt"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/playback-ids": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create a playback ID",
        "description": "Creates a playback ID that can be used to stream the asset to a viewer.",
        "operationId": "create-asset-playback-id",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "policy": {
                    "type": "string",
                    "enum": [
                      "public",
                      "signed",
                      "drm"
                    ],
                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                  },
                  "drm_configuration_id": {
                    "type": "string",
                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                  }
                }
              },
              "example": {
                "policy": "public"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "policy"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the PlaybackID"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "drm_configuration_id": {
                          "type": "string",
                          "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "policy": "public",
                    "id": "Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/playback-ids/{PLAYBACK_ID}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve a playback ID",
        "description": "Retrieves information about the specified playback ID.",
        "operationId": "get-asset-playback-id",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PLAYBACK_ID",
            "in": "path",
            "description": "The asset or live stream's playback ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "policy"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the PlaybackID"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "drm_configuration_id": {
                          "type": "string",
                          "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "policy": "public",
                    "id": "vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete a playback ID",
        "description": "Deletes a playback ID, rendering it nonfunctional for viewing an asset's video content. Please note that deleting the playback ID removes access to the underlying asset; a viewer who started playback before the playback ID was deleted may be able to watch the entire video for a limited duration.",
        "operationId": "delete-asset-playback-id",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PLAYBACK_ID",
            "in": "path",
            "description": "The asset or live stream's playback ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/mp4-support": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update MP4 support",
        "operationId": "update-asset-mp4-support",
        "deprecated": true,
        "description": "This method has been deprecated. Please see the [Static Rendition API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions#after-asset-creation).\nAllows you to add or remove mp4 support for assets that were created without it. The values supported are `capped-1080p`, `audio-only`, `audio-only,capped-1080p`, `standard`(deprecated),  and `none`. `none` means that an asset *does not* have mp4 support, so submitting a request with `mp4_support` set to `none` will delete the mp4 assets from the asset in question.\n",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "deprecated": true,
                "x-required": [
                  "mp4_support"
                ],
                "properties": {
                  "mp4_support": {
                    "type": "string",
                    "description": "Specify what level of support for mp4 playback.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\n`none` will delete the MP4s from the asset in question.\n",
                    "enum": [
                      "standard",
                      "none",
                      "capped-1080p",
                      "audio-only",
                      "audio-only,capped-1080p"
                    ],
                    "x-mux-doc-decorators-deprecated-enum-values": [
                      "standard"
                    ]
                  }
                }
              },
              "example": {
                "mp4_support": "capped-1080p"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "status",
                        "max_resolution_tier",
                        "encoding_tier",
                        "master_access"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Asset. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "preparing",
                            "ready",
                            "errored"
                          ],
                          "description": "The status of the asset."
                        },
                        "duration": {
                          "type": "number",
                          "format": "double",
                          "description": "The duration of the asset in seconds (max duration for a single asset is 12 hours)."
                        },
                        "max_stored_resolution": {
                          "type": "string",
                          "enum": [
                            "Audio only",
                            "SD",
                            "HD",
                            "FHD",
                            "UHD"
                          ],
                          "description": "This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.",
                          "deprecated": true
                        },
                        "resolution_tier": {
                          "type": "string",
                          "enum": [
                            "audio-only",
                            "720p",
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."
                        },
                        "max_resolution_tier": {
                          "type": "string",
                          "enum": [
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                        },
                        "encoding_tier": {
                          "type": "string",
                          "deprecated": true,
                          "enum": [
                            "smart",
                            "baseline",
                            "premium"
                          ],
                          "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "video_quality": {
                          "type": "string",
                          "enum": [
                            "basic",
                            "plus",
                            "premium"
                          ],
                          "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "max_stored_frame_rate": {
                          "type": "number",
                          "format": "double",
                          "description": "The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."
                        },
                        "aspect_ratio": {
                          "type": "string",
                          "description": "The aspect ratio of the asset in the form of `width:height`, for example `16:9`."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "tracks": {
                          "type": "array",
                          "description": "The individual media tracks that make up an asset.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the Track"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of track",
                                "enum": [
                                  "video",
                                  "audio",
                                  "text"
                                ]
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
                              },
                              "max_width": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_height": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_frame_rate": {
                                "type": "number",
                                "format": "double",
                                "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
                              },
                              "max_channels": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
                              },
                              "max_channel_layout": {
                                "type": "string",
                                "description": "Only set for the `audio` type track.",
                                "deprecated": true
                              },
                              "text_type": {
                                "type": "string",
                                "enum": [
                                  "subtitles"
                                ],
                                "description": "This parameter is only set for `text` type tracks."
                              },
                              "text_source": {
                                "type": "string",
                                "description": "The source of the text contained in a Track of type `text`. Valid `text_source`\nvalues are listed below.\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n",
                                "enum": [
                                  "uploaded",
                                  "embedded",
                                  "generated_live",
                                  "generated_live_final",
                                  "generated_vod"
                                ]
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language code value represents [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \"English\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."
                              },
                              "closed_captions": {
                                "type": "boolean",
                                "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "preparing",
                                  "ready",
                                  "errored",
                                  "deleted"
                                ],
                                "description": "The status of the track. This parameter is only set for `text` type tracks."
                              },
                              "primary": {
                                "type": "boolean",
                                "description": "For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "object",
                          "description": "Object that describes any errors that happened when processing this asset.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of error that occurred for this asset."
                            },
                            "messages": {
                              "type": "array",
                              "description": "Error messages with more details.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "per_title_encode": {
                          "type": "boolean",
                          "format": "boolean",
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "deprecated": true
                        },
                        "upload_id": {
                          "type": "string",
                          "description": "Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."
                        },
                        "is_live": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id` , you can use the `meta` object instead. **Max: 255 characters**."
                        },
                        "live_stream_id": {
                          "type": "string",
                          "description": "Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "master": {
                          "type": "object",
                          "description": "An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.",
                          "properties": {
                            "status": {
                              "enum": [
                                "ready",
                                "preparing",
                                "errored"
                              ],
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "description": "The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."
                            }
                          }
                        },
                        "master_access": {
                          "type": "string",
                          "enum": [
                            "temporary",
                            "none"
                          ],
                          "default": "none"
                        },
                        "mp4_support": {
                          "type": "string",
                          "deprecated": true,
                          "default": "none",
                          "enum": [
                            "standard",
                            "none",
                            "capped-1080p",
                            "audio-only",
                            "audio-only,capped-1080p"
                          ],
                          "x-mux-doc-decorators-deprecated-enum-values": [
                            "standard"
                          ]
                        },
                        "source_asset_id": {
                          "type": "string",
                          "description": "Asset Identifier of the video used as the source for creating the clip."
                        },
                        "normalize_audio": {
                          "type": "boolean",
                          "default": false,
                          "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."
                        },
                        "static_renditions": {
                          "type": "object",
                          "description": "An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "disabled",
                              "description": "Indicates the status of downloadable MP4 versions of this asset. This field is only valid when `mp4_support` is enabled",
                              "enum": [
                                "ready",
                                "preparing",
                                "disabled",
                                "errored"
                              ]
                            },
                            "files": {
                              "type": "array",
                              "description": "Array of file objects.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "enum": [
                                      "low.mp4",
                                      "medium.mp4",
                                      "high.mp4",
                                      "highest.mp4",
                                      "audio.m4a",
                                      "capped-1080p.mp4",
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "description": "Name of the static rendition file"
                                  },
                                  "ext": {
                                    "type": "string",
                                    "description": "Extension of the static rendition file",
                                    "enum": [
                                      "mp4",
                                      "m4a"
                                    ]
                                  },
                                  "height": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The height of the static rendition's file in pixels"
                                  },
                                  "width": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The width of the static rendition's file in pixels"
                                  },
                                  "bitrate": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The bitrate in bits per second"
                                  },
                                  "filesize": {
                                    "type": "string",
                                    "format": "int64",
                                    "description": "The file size in bytes"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates the static rendition type of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "standard",
                                      "advanced"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "advanced"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Indicates the status of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.\n* `ready` indicates the MP4 has been generated and is ready for download\n* `preparing` indicates the asset has not been ingested or the static rendition is still being generated after an asset is ready\n* `skipped` indicates the static rendition will not be generated because the requested resolution conflicts with the asset attributes after the asset has been ingested\n* `errored` indicates the static rendition cannot be generated. For example, an asset could not be ingested\n",
                                    "enum": [
                                      "ready",
                                      "preparing",
                                      "skipped",
                                      "errored"
                                    ]
                                  },
                                  "resolution_tier": {
                                    "type": "string",
                                    "description": "Indicates the resolution tier of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "audio-only"
                                    ]
                                  },
                                  "resolution": {
                                    "type": "string",
                                    "description": "Indicates the resolution of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of this static rendition, used in managing this static rendition. This field is only valid for `static_renditions`, not for `mp4_support`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "recording_times": {
                          "type": "array",
                          "description": "An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \"slate\" type.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "started_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration of the live stream recorded. The time value is in seconds."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "content",
                                  "slate"
                                ],
                                "description": "The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."
                              }
                            }
                          }
                        },
                        "non_standard_input_reasons": {
                          "type": "object",
                          "description": "An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](mdc:https:/docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.",
                          "properties": {
                            "video_codec": {
                              "type": "string",
                              "description": "The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."
                            },
                            "audio_codec": {
                              "type": "string",
                              "description": "The audio codec used on the input file. Non-AAC audio codecs are non-standard."
                            },
                            "video_gop_size": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."
                            },
                            "video_frame_rate": {
                              "type": "string",
                              "description": "The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."
                            },
                            "video_resolution": {
                              "type": "string",
                              "description": "The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."
                            },
                            "video_bitrate": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what's considered standard which typically is 16 Mbps."
                            },
                            "pixel_aspect_ratio": {
                              "type": "string",
                              "description": "The video pixel aspect ratio of the input file."
                            },
                            "video_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List."
                            },
                            "audio_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List."
                            },
                            "unexpected_media_file_parameters": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "A catch-all reason when the input file in created with non-standard encoding parameters."
                            },
                            "unsupported_pixel_format": {
                              "type": "string",
                              "description": "The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."
                            }
                          }
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."
                        },
                        "ingest_type": {
                          "type": "string",
                          "enum": [
                            "on_demand_url",
                            "on_demand_direct_upload",
                            "on_demand_clip",
                            "live_rtmp",
                            "live_srt"
                          ],
                          "description": "The type of ingest used to create the asset."
                        },
                        "meta": {
                          "type": "object",
                          "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                          "properties": {
                            "title": {
                              "type": "string",
                              "maxLength": 512,
                              "description": "The asset title. Max 512 code points."
                            },
                            "creator_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                            },
                            "external_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "tracks": [
                      {
                        "type": "video",
                        "max_width": 1920,
                        "max_height": 1080,
                        "max_frame_rate": 29.97,
                        "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                        "duration": 23.8238
                      },
                      {
                        "type": "audio",
                        "max_channels": 2,
                        "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                        "duration": 23.823792
                      }
                    ],
                    "status": "ready",
                    "static_renditions": {
                      "status": "preparing"
                    },
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ"
                      }
                    ],
                    "mp4_support": "capped-1080p",
                    "max_stored_resolution": "HD",
                    "resolution_tier": "1080p",
                    "max_stored_frame_rate": 29.97,
                    "master_access": "none",
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "encoding_tier": "smart",
                    "video_quality": "plus",
                    "duration": 23.857167,
                    "created_at": "1609868768",
                    "aspect_ratio": "16:9"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/master-access": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update master access",
        "operationId": "update-asset-master-access",
        "description": "Allows you to add temporary access to the master (highest-quality) version of the asset in MP4 format. A URL will be created that can be used to download the master version for 24 hours. After 24 hours Master Access will revert to \"none\".\nThis master version is not optimized for web and not meant to be streamed, only downloaded for purposes like archiving or editing the video offline.",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "master_access"
                ],
                "properties": {
                  "master_access": {
                    "type": "string",
                    "description": "Add or remove access to the master version of the video.",
                    "enum": [
                      "temporary",
                      "none"
                    ]
                  }
                }
              },
              "example": {
                "master_access": "temporary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "status",
                        "max_resolution_tier",
                        "encoding_tier",
                        "master_access"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Asset. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "preparing",
                            "ready",
                            "errored"
                          ],
                          "description": "The status of the asset."
                        },
                        "duration": {
                          "type": "number",
                          "format": "double",
                          "description": "The duration of the asset in seconds (max duration for a single asset is 12 hours)."
                        },
                        "max_stored_resolution": {
                          "type": "string",
                          "enum": [
                            "Audio only",
                            "SD",
                            "HD",
                            "FHD",
                            "UHD"
                          ],
                          "description": "This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.",
                          "deprecated": true
                        },
                        "resolution_tier": {
                          "type": "string",
                          "enum": [
                            "audio-only",
                            "720p",
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."
                        },
                        "max_resolution_tier": {
                          "type": "string",
                          "enum": [
                            "1080p",
                            "1440p",
                            "2160p"
                          ],
                          "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                        },
                        "encoding_tier": {
                          "type": "string",
                          "deprecated": true,
                          "enum": [
                            "smart",
                            "baseline",
                            "premium"
                          ],
                          "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "video_quality": {
                          "type": "string",
                          "enum": [
                            "basic",
                            "plus",
                            "premium"
                          ],
                          "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                        },
                        "max_stored_frame_rate": {
                          "type": "number",
                          "format": "double",
                          "description": "The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."
                        },
                        "aspect_ratio": {
                          "type": "string",
                          "description": "The aspect ratio of the asset in the form of `width:height`, for example `16:9`."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "tracks": {
                          "type": "array",
                          "description": "The individual media tracks that make up an asset.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the Track"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of track",
                                "enum": [
                                  "video",
                                  "audio",
                                  "text"
                                ]
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
                              },
                              "max_width": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_height": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
                              },
                              "max_frame_rate": {
                                "type": "number",
                                "format": "double",
                                "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
                              },
                              "max_channels": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
                              },
                              "max_channel_layout": {
                                "type": "string",
                                "description": "Only set for the `audio` type track.",
                                "deprecated": true
                              },
                              "text_type": {
                                "type": "string",
                                "enum": [
                                  "subtitles"
                                ],
                                "description": "This parameter is only set for `text` type tracks."
                              },
                              "text_source": {
                                "type": "string",
                                "description": "The source of the text contained in a Track of type `text`. Valid `text_source`\nvalues are listed below.\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n",
                                "enum": [
                                  "uploaded",
                                  "embedded",
                                  "generated_live",
                                  "generated_live_final",
                                  "generated_vod"
                                ]
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language code value represents [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \"English\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."
                              },
                              "closed_captions": {
                                "type": "boolean",
                                "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "preparing",
                                  "ready",
                                  "errored",
                                  "deleted"
                                ],
                                "description": "The status of the track. This parameter is only set for `text` type tracks."
                              },
                              "primary": {
                                "type": "boolean",
                                "description": "For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "object",
                          "description": "Object that describes any errors that happened when processing this asset.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of error that occurred for this asset."
                            },
                            "messages": {
                              "type": "array",
                              "description": "Error messages with more details.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "per_title_encode": {
                          "type": "boolean",
                          "format": "boolean",
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "deprecated": true
                        },
                        "upload_id": {
                          "type": "string",
                          "description": "Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."
                        },
                        "is_live": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id` , you can use the `meta` object instead. **Max: 255 characters**."
                        },
                        "live_stream_id": {
                          "type": "string",
                          "description": "Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."
                        },
                        "master": {
                          "type": "object",
                          "description": "An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.",
                          "properties": {
                            "status": {
                              "enum": [
                                "ready",
                                "preparing",
                                "errored"
                              ],
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "description": "The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."
                            }
                          }
                        },
                        "master_access": {
                          "type": "string",
                          "enum": [
                            "temporary",
                            "none"
                          ],
                          "default": "none"
                        },
                        "mp4_support": {
                          "type": "string",
                          "deprecated": true,
                          "default": "none",
                          "enum": [
                            "standard",
                            "none",
                            "capped-1080p",
                            "audio-only",
                            "audio-only,capped-1080p"
                          ],
                          "x-mux-doc-decorators-deprecated-enum-values": [
                            "standard"
                          ]
                        },
                        "source_asset_id": {
                          "type": "string",
                          "description": "Asset Identifier of the video used as the source for creating the clip."
                        },
                        "normalize_audio": {
                          "type": "boolean",
                          "default": false,
                          "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."
                        },
                        "static_renditions": {
                          "type": "object",
                          "description": "An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "disabled",
                              "description": "Indicates the status of downloadable MP4 versions of this asset. This field is only valid when `mp4_support` is enabled",
                              "enum": [
                                "ready",
                                "preparing",
                                "disabled",
                                "errored"
                              ]
                            },
                            "files": {
                              "type": "array",
                              "description": "Array of file objects.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "enum": [
                                      "low.mp4",
                                      "medium.mp4",
                                      "high.mp4",
                                      "highest.mp4",
                                      "audio.m4a",
                                      "capped-1080p.mp4",
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p.mp4",
                                      "1440p.mp4",
                                      "1080p.mp4",
                                      "720p.mp4",
                                      "540p.mp4",
                                      "480p.mp4",
                                      "360p.mp4",
                                      "270p.mp4"
                                    ],
                                    "description": "Name of the static rendition file"
                                  },
                                  "ext": {
                                    "type": "string",
                                    "description": "Extension of the static rendition file",
                                    "enum": [
                                      "mp4",
                                      "m4a"
                                    ]
                                  },
                                  "height": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The height of the static rendition's file in pixels"
                                  },
                                  "width": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The width of the static rendition's file in pixels"
                                  },
                                  "bitrate": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The bitrate in bits per second"
                                  },
                                  "filesize": {
                                    "type": "string",
                                    "format": "int64",
                                    "description": "The file size in bytes"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates the static rendition type of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "standard",
                                      "advanced"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "advanced"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Indicates the status of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.\n* `ready` indicates the MP4 has been generated and is ready for download\n* `preparing` indicates the asset has not been ingested or the static rendition is still being generated after an asset is ready\n* `skipped` indicates the static rendition will not be generated because the requested resolution conflicts with the asset attributes after the asset has been ingested\n* `errored` indicates the static rendition cannot be generated. For example, an asset could not be ingested\n",
                                    "enum": [
                                      "ready",
                                      "preparing",
                                      "skipped",
                                      "errored"
                                    ]
                                  },
                                  "resolution_tier": {
                                    "type": "string",
                                    "description": "Indicates the resolution tier of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "audio-only"
                                    ]
                                  },
                                  "resolution": {
                                    "type": "string",
                                    "description": "Indicates the resolution of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of this static rendition, used in managing this static rendition. This field is only valid for `static_renditions`, not for `mp4_support`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "recording_times": {
                          "type": "array",
                          "description": "An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \"slate\" type.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "started_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."
                              },
                              "duration": {
                                "type": "number",
                                "format": "double",
                                "description": "The duration of the live stream recorded. The time value is in seconds."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "content",
                                  "slate"
                                ],
                                "description": "The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."
                              }
                            }
                          }
                        },
                        "non_standard_input_reasons": {
                          "type": "object",
                          "description": "An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](mdc:https:/docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.",
                          "properties": {
                            "video_codec": {
                              "type": "string",
                              "description": "The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."
                            },
                            "audio_codec": {
                              "type": "string",
                              "description": "The audio codec used on the input file. Non-AAC audio codecs are non-standard."
                            },
                            "video_gop_size": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."
                            },
                            "video_frame_rate": {
                              "type": "string",
                              "description": "The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."
                            },
                            "video_resolution": {
                              "type": "string",
                              "description": "The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."
                            },
                            "video_bitrate": {
                              "type": "string",
                              "enum": [
                                "high"
                              ],
                              "description": "The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what's considered standard which typically is 16 Mbps."
                            },
                            "pixel_aspect_ratio": {
                              "type": "string",
                              "description": "The video pixel aspect ratio of the input file."
                            },
                            "video_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List."
                            },
                            "audio_edit_list": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List."
                            },
                            "unexpected_media_file_parameters": {
                              "type": "string",
                              "enum": [
                                "non-standard"
                              ],
                              "description": "A catch-all reason when the input file in created with non-standard encoding parameters."
                            },
                            "unsupported_pixel_format": {
                              "type": "string",
                              "description": "The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."
                            }
                          }
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."
                        },
                        "ingest_type": {
                          "type": "string",
                          "enum": [
                            "on_demand_url",
                            "on_demand_direct_upload",
                            "on_demand_clip",
                            "live_rtmp",
                            "live_srt"
                          ],
                          "description": "The type of ingest used to create the asset."
                        },
                        "meta": {
                          "type": "object",
                          "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                          "properties": {
                            "title": {
                              "type": "string",
                              "maxLength": 512,
                              "description": "The asset title. Max 512 code points."
                            },
                            "creator_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                            },
                            "external_id": {
                              "type": "string",
                              "maxLength": 128,
                              "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "tracks": [
                      {
                        "type": "video",
                        "max_width": 1920,
                        "max_height": 1080,
                        "max_frame_rate": 29.97,
                        "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                        "duration": 23.8238
                      },
                      {
                        "type": "audio",
                        "max_channels": 2,
                        "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                        "duration": 23.823792
                      }
                    ],
                    "status": "ready",
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ"
                      }
                    ],
                    "max_stored_resolution": "HD",
                    "resolution_tier": "1080p",
                    "max_stored_frame_rate": 29.97,
                    "master_access": "temporary",
                    "master": {
                      "status": "preparing"
                    },
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "encoding_tier": "baseline",
                    "video_quality": "basic",
                    "duration": 23.857167,
                    "created_at": "1609868768",
                    "aspect_ratio": "16:9"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/static-renditions": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create a static rendition for an asset",
        "description": "Creates a static rendition (i.e. MP4) for an asset",
        "operationId": "create-asset-static-rendition",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "resolution"
                ],
                "properties": {
                  "resolution": {
                    "type": "string",
                    "enum": [
                      "highest",
                      "audio-only",
                      "2160p",
                      "1440p",
                      "1080p",
                      "720p",
                      "540p",
                      "480p",
                      "360p",
                      "270p"
                    ],
                    "x-mux-doc-decorators-hidden-enum-values": [
                      "2160p",
                      "1440p",
                      "1080p",
                      "720p",
                      "540p",
                      "480p",
                      "360p",
                      "270p"
                    ]
                  },
                  "passthrough": {
                    "type": "string",
                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                  }
                }
              },
              "example": {
                "resolution": "highest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "enum": [
                            "low.mp4",
                            "medium.mp4",
                            "high.mp4",
                            "highest.mp4",
                            "audio.m4a",
                            "capped-1080p.mp4",
                            "2160p.mp4",
                            "1440p.mp4",
                            "1080p.mp4",
                            "720p.mp4",
                            "540p.mp4",
                            "480p.mp4",
                            "360p.mp4",
                            "270p.mp4"
                          ],
                          "x-mux-doc-decorators-hidden-enum-values": [
                            "2160p.mp4",
                            "1440p.mp4",
                            "1080p.mp4",
                            "720p.mp4",
                            "540p.mp4",
                            "480p.mp4",
                            "360p.mp4",
                            "270p.mp4"
                          ],
                          "description": "Name of the static rendition file"
                        },
                        "ext": {
                          "type": "string",
                          "description": "Extension of the static rendition file",
                          "enum": [
                            "mp4",
                            "m4a"
                          ]
                        },
                        "height": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The height of the static rendition's file in pixels"
                        },
                        "width": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The width of the static rendition's file in pixels"
                        },
                        "bitrate": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The bitrate in bits per second"
                        },
                        "filesize": {
                          "type": "string",
                          "format": "int64",
                          "description": "The file size in bytes"
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates the static rendition type of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                          "enum": [
                            "standard",
                            "advanced"
                          ],
                          "x-mux-doc-decorators-hidden-enum-values": [
                            "advanced"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "Indicates the status of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.\n* `ready` indicates the MP4 has been generated and is ready for download\n* `preparing` indicates the asset has not been ingested or the static rendition is still being generated after an asset is ready\n* `skipped` indicates the static rendition will not be generated because the requested resolution conflicts with the asset attributes after the asset has been ingested\n* `errored` indicates the static rendition cannot be generated. For example, an asset could not be ingested\n",
                          "enum": [
                            "ready",
                            "preparing",
                            "skipped",
                            "errored"
                          ]
                        },
                        "resolution_tier": {
                          "type": "string",
                          "description": "Indicates the resolution tier of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                          "enum": [
                            "2160p",
                            "1440p",
                            "1080p",
                            "720p",
                            "audio-only"
                          ]
                        },
                        "resolution": {
                          "type": "string",
                          "description": "Indicates the resolution of this specific MP4 version of this asset. This field is only valid for `static_renditions`, not for `mp4_support`.",
                          "enum": [
                            "highest",
                            "audio-only",
                            "2160p",
                            "1440p",
                            "1080p",
                            "720p",
                            "540p",
                            "480p",
                            "360p",
                            "270p"
                          ],
                          "x-mux-doc-decorators-hidden-enum-values": [
                            "2160p",
                            "1440p",
                            "1080p",
                            "720p",
                            "540p",
                            "480p",
                            "360p",
                            "270p"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of this static rendition, used in managing this static rendition. This field is only valid for `static_renditions`, not for `mp4_support`."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "type": "standard",
                    "ext": "mp4",
                    "status": "preparing",
                    "resolution": "highest",
                    "name": "highest.mp4"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/static-renditions/{STATIC_RENDITION_ID}": {
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete a single static rendition for an asset",
        "description": "Deletes a single static rendition for an asset",
        "operationId": "delete-asset-static-rendition",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATIC_RENDITION_ID",
            "in": "path",
            "description": "The static rendition ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/tracks": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create an asset track",
        "description": "Adds an asset track (for example, subtitles, or an alternate audio track) to an asset. Assets must be in the `ready` state before tracks can be added.",
        "operationId": "create-asset-track",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "url",
                  "type",
                  "language_code"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL of the file that Mux should download and use.\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "text",
                      "audio"
                    ]
                  },
                  "text_type": {
                    "type": "string",
                    "enum": [
                      "subtitles"
                    ]
                  },
                  "language_code": {
                    "type": "string",
                    "description": "The language code value must be a valid BCP 47 specification compliant value. For example, en for English or en-US for the US version of English."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate the `text` or `audio` track with this value. For example, set the value to \"English\" for subtitles text track with `language_code` as en-US. If this parameter is not included, Mux will auto-populate a value based on the `language_code` value."
                  },
                  "closed_captions": {
                    "type": "boolean",
                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH)."
                  },
                  "passthrough": {
                    "type": "string",
                    "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track."
                  }
                }
              },
              "example": {
                "url": "https://example.com/myVideo_en.srt",
                "type": "text",
                "text_type": "subtitles",
                "language_code": "en-US",
                "name": "English",
                "closed_captions": true,
                "passthrough": "English"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Track"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of track",
                          "enum": [
                            "video",
                            "audio",
                            "text"
                          ]
                        },
                        "duration": {
                          "type": "number",
                          "format": "double",
                          "description": "The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
                        },
                        "max_width": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
                        },
                        "max_height": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
                        },
                        "max_frame_rate": {
                          "type": "number",
                          "format": "double",
                          "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
                        },
                        "max_channels": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
                        },
                        "max_channel_layout": {
                          "type": "string",
                          "description": "Only set for the `audio` type track.",
                          "deprecated": true
                        },
                        "text_type": {
                          "type": "string",
                          "enum": [
                            "subtitles"
                          ],
                          "description": "This parameter is only set for `text` type tracks."
                        },
                        "text_source": {
                          "type": "string",
                          "description": "The source of the text contained in a Track of type `text`. Valid `text_source`\nvalues are listed below.\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n",
                          "enum": [
                            "uploaded",
                            "embedded",
                            "generated_live",
                            "generated_live_final",
                            "generated_vod"
                          ]
                        },
                        "language_code": {
                          "type": "string",
                          "description": "The language code value represents [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \"English\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."
                        },
                        "closed_captions": {
                          "type": "boolean",
                          "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "preparing",
                            "ready",
                            "errored",
                            "deleted"
                          ],
                          "description": "The status of the track. This parameter is only set for `text` type tracks."
                        },
                        "primary": {
                          "type": "boolean",
                          "description": "For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "type": "text",
                    "text_type": "subtitles",
                    "status": "preparing",
                    "passthrough": "English",
                    "name": "English",
                    "language_code": "en-US",
                    "id": "xBe7u01029ipxBLQhYzZCJ1cke01zCkuUsgnYtH0017nNzbpv2YcsoMDmw",
                    "closed_captions": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/tracks/{TRACK_ID}": {
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete an asset track",
        "description": "Removes a text track from an asset. Audio and video tracks on assets cannot be removed.",
        "operationId": "delete-asset-track",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TRACK_ID",
            "in": "path",
            "description": "The track ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/tracks/{TRACK_ID}/generate-subtitles": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Generate track subtitles",
        "description": "Generates subtitles (captions) for a given audio track. This API can be used for up to 7 days after an asset is created.",
        "operationId": "generate-asset-track-subtitles",
        "parameters": [
          {
            "name": "ASSET_ID",
            "in": "path",
            "description": "The asset ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TRACK_ID",
            "in": "path",
            "description": "The track ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "generated_subtitles"
                ],
                "properties": {
                  "generated_subtitles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "A name for this subtitle track."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                        },
                        "language_code": {
                          "type": "string",
                          "description": "The language to generate subtitles in.",
                          "default": "en",
                          "enum": [
                            "en",
                            "es",
                            "it",
                            "pt",
                            "de",
                            "fr",
                            "pl",
                            "ru",
                            "nl",
                            "ca",
                            "tr",
                            "sv",
                            "uk",
                            "no",
                            "fi",
                            "sk",
                            "el",
                            "cs",
                            "hr",
                            "da",
                            "ro",
                            "bg"
                          ]
                        }
                      }
                    },
                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration."
                  }
                }
              },
              "example": {
                "generated_subtitles": [
                  {
                    "language_code": "en",
                    "name": "English (generated)",
                    "passthrough": "English (generated)"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the Track"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of track",
                            "enum": [
                              "video",
                              "audio",
                              "text"
                            ]
                          },
                          "duration": {
                            "type": "number",
                            "format": "double",
                            "description": "The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
                          },
                          "max_width": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
                          },
                          "max_height": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
                          },
                          "max_frame_rate": {
                            "type": "number",
                            "format": "double",
                            "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
                          },
                          "max_channels": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
                          },
                          "max_channel_layout": {
                            "type": "string",
                            "description": "Only set for the `audio` type track.",
                            "deprecated": true
                          },
                          "text_type": {
                            "type": "string",
                            "enum": [
                              "subtitles"
                            ],
                            "description": "This parameter is only set for `text` type tracks."
                          },
                          "text_source": {
                            "type": "string",
                            "description": "The source of the text contained in a Track of type `text`. Valid `text_source`\nvalues are listed below.\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\n",
                            "enum": [
                              "uploaded",
                              "embedded",
                              "generated_live",
                              "generated_live_final",
                              "generated_vod"
                            ]
                          },
                          "language_code": {
                            "type": "string",
                            "description": "The language code value represents [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \"English\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."
                          },
                          "closed_captions": {
                            "type": "boolean",
                            "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."
                          },
                          "passthrough": {
                            "type": "string",
                            "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "preparing",
                              "ready",
                              "errored",
                              "deleted"
                            ],
                            "description": "The status of the track. This parameter is only set for `text` type tracks."
                          },
                          "primary": {
                            "type": "boolean",
                            "description": "For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "type": "text",
                      "text_type": "subtitles",
                      "status": "preparing",
                      "passthrough": "English (generated)",
                      "name": "English (generated)",
                      "language_code": "en",
                      "id": "hXhnqUq0054k9SBFB5aczHhj6xMbOTlriTG7gqRn8kikv101lkFUgKNw"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams": {
      "post": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Create a live stream",
        "description": "Creates a new live stream. Once created, an encoder can connect to Mux via the specified stream key and begin streaming to an audience.",
        "operationId": "create-live-stream",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "playback_policy": {
                    "deprecated": true,
                    "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                    "x-mux-doc-decorators-hidden-children": "all",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "public",
                        "signed",
                        "drm"
                      ],
                      "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                    }
                  },
                  "playback_policies": {
                    "deprecated": true,
                    "description": "An array of playback policy names that you want applied to this live stream and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the live stream).\n* `\"signed\"` (an additional access token is required to play the live stream).\n\nIf no `playback_policies` is set, the live stream will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "public",
                        "signed",
                        "drm"
                      ],
                      "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                    }
                  },
                  "advanced_playback_policies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "policy": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "drm_configuration_id": {
                          "type": "string",
                          "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                        }
                      }
                    },
                    "description": "An array of playback policy objects that you want applied on this live stream and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                  },
                  "new_asset_settings": {
                    "type": "object",
                    "properties": {
                      "input": {
                        "type": "array",
                        "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                        "deprecated": true,
                        "x-mux-doc-decorators-hidden-children": "all",
                        "items": {
                          "type": "object",
                          "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                            },
                            "overlay_settings": {
                              "type": "object",
                              "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                              "properties": {
                                "vertical_align": {
                                  "type": "string",
                                  "enum": [
                                    "top",
                                    "middle",
                                    "bottom"
                                  ],
                                  "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                },
                                "vertical_margin": {
                                  "type": "string",
                                  "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                },
                                "horizontal_align": {
                                  "type": "string",
                                  "enum": [
                                    "left",
                                    "center",
                                    "right"
                                  ],
                                  "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                },
                                "horizontal_margin": {
                                  "type": "string",
                                  "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                },
                                "width": {
                                  "type": "string",
                                  "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                },
                                "height": {
                                  "type": "string",
                                  "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                },
                                "opacity": {
                                  "type": "string",
                                  "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                }
                              }
                            },
                            "generated_subtitles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "A name for this subtitle track."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language to generate subtitles in.",
                                    "default": "en",
                                    "enum": [
                                      "en",
                                      "es",
                                      "it",
                                      "pt",
                                      "de",
                                      "fr",
                                      "pl",
                                      "ru",
                                      "nl",
                                      "ca",
                                      "tr",
                                      "sv",
                                      "uk",
                                      "no",
                                      "fi",
                                      "sk",
                                      "el",
                                      "cs",
                                      "hr",
                                      "da",
                                      "ro",
                                      "bg"
                                    ]
                                  }
                                }
                              },
                              "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                            },
                            "start_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "end_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "video",
                                "audio",
                                "text"
                              ],
                              "description": "This parameter is required for `text` type tracks."
                            },
                            "text_type": {
                              "type": "string",
                              "enum": [
                                "subtitles"
                              ],
                              "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                            },
                            "language_code": {
                              "type": "string",
                              "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                            },
                            "closed_captions": {
                              "type": "boolean",
                              "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            }
                          }
                        }
                      },
                      "inputs": {
                        "type": "array",
                        "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                        "items": {
                          "type": "object",
                          "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                            },
                            "overlay_settings": {
                              "type": "object",
                              "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                              "properties": {
                                "vertical_align": {
                                  "type": "string",
                                  "enum": [
                                    "top",
                                    "middle",
                                    "bottom"
                                  ],
                                  "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                },
                                "vertical_margin": {
                                  "type": "string",
                                  "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                },
                                "horizontal_align": {
                                  "type": "string",
                                  "enum": [
                                    "left",
                                    "center",
                                    "right"
                                  ],
                                  "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                },
                                "horizontal_margin": {
                                  "type": "string",
                                  "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                },
                                "width": {
                                  "type": "string",
                                  "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                },
                                "height": {
                                  "type": "string",
                                  "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                },
                                "opacity": {
                                  "type": "string",
                                  "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                }
                              }
                            },
                            "generated_subtitles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "A name for this subtitle track."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language to generate subtitles in.",
                                    "default": "en",
                                    "enum": [
                                      "en",
                                      "es",
                                      "it",
                                      "pt",
                                      "de",
                                      "fr",
                                      "pl",
                                      "ru",
                                      "nl",
                                      "ca",
                                      "tr",
                                      "sv",
                                      "uk",
                                      "no",
                                      "fi",
                                      "sk",
                                      "el",
                                      "cs",
                                      "hr",
                                      "da",
                                      "ro",
                                      "bg"
                                    ]
                                  }
                                }
                              },
                              "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                            },
                            "start_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "end_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "video",
                                "audio",
                                "text"
                              ],
                              "description": "This parameter is required for `text` type tracks."
                            },
                            "text_type": {
                              "type": "string",
                              "enum": [
                                "subtitles"
                              ],
                              "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                            },
                            "language_code": {
                              "type": "string",
                              "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                            },
                            "closed_captions": {
                              "type": "boolean",
                              "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            }
                          }
                        }
                      },
                      "playback_policy": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "deprecated": true,
                        "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                        "x-mux-doc-decorators-hidden-children": "all"
                      },
                      "playback_policies": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                      },
                      "advanced_playback_policies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policy": {
                              "type": "string",
                              "enum": [
                                "public",
                                "signed",
                                "drm"
                              ],
                              "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                            },
                            "drm_configuration_id": {
                              "type": "string",
                              "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                            }
                          }
                        },
                        "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                      },
                      "per_title_encode": {
                        "type": "boolean",
                        "format": "boolean",
                        "x-mux-doc-decorators": [
                          "hidden"
                        ],
                        "deprecated": true
                      },
                      "passthrough": {
                        "type": "string",
                        "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                      },
                      "mp4_support": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                          "none",
                          "standard",
                          "capped-1080p",
                          "audio-only",
                          "audio-only,capped-1080p"
                        ],
                        "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                        "x-mux-doc-decorators-deprecated-enum-values": [
                          "standard"
                        ]
                      },
                      "normalize_audio": {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                        "default": false
                      },
                      "master_access": {
                        "type": "string",
                        "enum": [
                          "none",
                          "temporary"
                        ],
                        "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                      },
                      "test": {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                      },
                      "max_resolution_tier": {
                        "type": "string",
                        "enum": [
                          "1080p",
                          "1440p",
                          "2160p"
                        ],
                        "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                      },
                      "encoding_tier": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                          "smart",
                          "baseline",
                          "premium"
                        ],
                        "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                      },
                      "video_quality": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "plus",
                          "premium"
                        ],
                        "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                      },
                      "static_renditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-required": [
                            "resolution"
                          ],
                          "properties": {
                            "resolution": {
                              "type": "string",
                              "enum": [
                                "highest",
                                "audio-only",
                                "2160p",
                                "1440p",
                                "1080p",
                                "720p",
                                "540p",
                                "480p",
                                "360p",
                                "270p"
                              ],
                              "x-mux-doc-decorators-hidden-enum-values": [
                                "2160p",
                                "1440p",
                                "1080p",
                                "720p",
                                "540p",
                                "480p",
                                "360p",
                                "270p"
                              ]
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                            }
                          }
                        },
                        "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                      },
                      "meta": {
                        "type": "object",
                        "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maxLength": 512,
                            "description": "The asset title. Max 512 code points."
                          },
                          "creator_id": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                          },
                          "external_id": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                          }
                        }
                      }
                    }
                  },
                  "reconnect_window": {
                    "type": "number",
                    "format": "float",
                    "default": 60,
                    "minimum": 0,
                    "maximum": 1800,
                    "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. Defaults to 60 seconds on the API if not specified.\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                  },
                  "use_slate_for_standard_latency": {
                    "type": "boolean",
                    "format": "boolean",
                    "default": false,
                    "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                  },
                  "reconnect_slate_url": {
                    "type": "string",
                    "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                  },
                  "passthrough": {
                    "type": "string"
                  },
                  "audio_only": {
                    "type": "boolean",
                    "description": "Force the live stream to only process the audio track when the value is set to true. Mux drops the video track if broadcasted."
                  },
                  "embedded_subtitles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "A name for this live stream closed caption track."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                        },
                        "language_code": {
                          "type": "string",
                          "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                          "default": "en"
                        },
                        "language_channel": {
                          "type": "string",
                          "description": "CEA-608 caption channel to read data from.",
                          "default": "cc1",
                          "enum": [
                            "cc1",
                            "cc2",
                            "cc3",
                            "cc4"
                          ]
                        }
                      }
                    },
                    "description": "Describe the embedded closed caption contents of the incoming live stream."
                  },
                  "generated_subtitles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "A name for this live stream subtitle track."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                        },
                        "language_code": {
                          "type": "string",
                          "description": "The language to generate subtitles in.",
                          "default": "en",
                          "enum": [
                            "en",
                            "en-US"
                          ]
                        },
                        "transcription_vocabulary_ids": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                        }
                      }
                    },
                    "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                  },
                  "reduced_latency": {
                    "type": "boolean",
                    "format": "boolean",
                    "deprecated": true,
                    "x-mux-doc-decorators": [
                      "hidden"
                    ],
                    "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. Read more here: https://mux.com/blog/reduced-latency-for-mux-live-streaming-now-available/"
                  },
                  "low_latency": {
                    "type": "boolean",
                    "format": "boolean",
                    "deprecated": true,
                    "x-mux-doc-decorators": [
                      "hidden"
                    ],
                    "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                  },
                  "latency_mode": {
                    "type": "string",
                    "enum": [
                      "low",
                      "reduced",
                      "standard"
                    ],
                    "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                  },
                  "test": {
                    "type": "boolean",
                    "format": "boolean",
                    "description": "Marks the live stream as a test live stream when the value is set to true. A test live stream can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test live streams created. Test live streams are watermarked with the Mux logo and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                  },
                  "simulcast_targets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-required": [
                        "url"
                      ],
                      "properties": {
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set by you when creating a simulcast target."
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                        },
                        "url": {
                          "type": "string",
                          "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                        }
                      }
                    }
                  },
                  "max_continuous_duration": {
                    "type": "integer",
                    "format": "int32",
                    "default": 43200,
                    "minimum": 60,
                    "maximum": 43200,
                    "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                  }
                }
              },
              "example": {
                "playback_policies": [
                  "public"
                ],
                "new_asset_settings": {
                  "playback_policies": [
                    "public"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "latency_mode",
                        "max_continuous_duration",
                        "status",
                        "stream_key"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Live Stream. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
                        },
                        "active_asset_id": {
                          "type": "string",
                          "description": "The Asset that is currently being created if there is an active broadcast."
                        },
                        "recent_asset_ids": {
                          "type": "array",
                          "description": "An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "idle",
                            "disabled"
                          ],
                          "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
                        },
                        "audio_only": {
                          "type": "boolean",
                          "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
                        },
                        "embedded_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code",
                              "language_channel"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream closed caption track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                                "default": "en"
                              },
                              "language_channel": {
                                "type": "string",
                                "description": "CEA-608 caption channel to read data from.",
                                "default": "cc1",
                                "enum": [
                                  "cc1",
                                  "cc2",
                                  "cc3",
                                  "cc4"
                                ]
                              }
                            }
                          },
                          "description": "Describes the embedded closed caption configuration of the incoming live stream."
                        },
                        "generated_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream subtitle track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language to generate subtitles in.",
                                "default": "en",
                                "enum": [
                                  "en",
                                  "en-US"
                                ]
                              },
                              "transcription_vocabulary_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                              }
                            }
                          },
                          "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                        },
                        "reconnect_window": {
                          "type": "number",
                          "format": "float",
                          "default": 60,
                          "minimum": 0,
                          "maximum": 1800,
                          "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                        },
                        "use_slate_for_standard_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "default": false,
                          "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                        },
                        "reconnect_slate_url": {
                          "type": "string",
                          "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                        },
                        "reduced_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](mdc:https:/docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."
                        },
                        "low_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                        },
                        "simulcast_targets": {
                          "type": "array",
                          "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](mdc:https:/docs.mux.com/guides/stream-live-to-3rd-party-platforms).",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "url",
                              "status"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the Simulcast Target"
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "idle",
                                  "starting",
                                  "broadcasting",
                                  "errored"
                                ],
                                "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                              },
                              "stream_key": {
                                "type": "string",
                                "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                              },
                              "url": {
                                "type": "string",
                                "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                              },
                              "error_severity": {
                                "type": "string",
                                "enum": [
                                  "normal",
                                  "fatal"
                                ],
                                "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                              }
                            }
                          }
                        },
                        "latency_mode": {
                          "type": "string",
                          "enum": [
                            "low",
                            "reduced",
                            "standard"
                          ],
                          "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                        },
                        "max_continuous_duration": {
                          "type": "integer",
                          "format": "int32",
                          "default": 43200,
                          "minimum": 60,
                          "maximum": 43200,
                          "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                        },
                        "srt_passphrase": {
                          "type": "string",
                          "description": "Unique key used for encrypting a stream to a Mux SRT endpoint."
                        },
                        "active_ingest_protocol": {
                          "type": "string",
                          "enum": [
                            "rtmp",
                            "srt"
                          ],
                          "description": "The protocol used for the active ingest stream. This is only set when the live stream is active."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "stream_key": "abcdefgh",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "latency_mode": "standard",
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Live Streams"
        ],
        "summary": "List live streams",
        "description": "Lists the live streams that currently exist in the current environment.",
        "operationId": "list-live-streams",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "stream_key",
            "in": "query",
            "description": "Filter response to return live stream for this stream key only",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter response to return live streams with the specified status only",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "idle",
                "disabled"
              ],
              "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-required": [
                          "id",
                          "created_at",
                          "latency_mode",
                          "max_continuous_duration",
                          "status",
                          "stream_key"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the Live Stream. Max 255 characters."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "int64",
                            "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
                          },
                          "stream_key": {
                            "type": "string",
                            "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
                          },
                          "active_asset_id": {
                            "type": "string",
                            "description": "The Asset that is currently being created if there is an active broadcast."
                          },
                          "recent_asset_ids": {
                            "type": "array",
                            "description": "An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "idle",
                              "disabled"
                            ],
                            "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
                          },
                          "playback_ids": {
                            "type": "array",
                            "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                            "items": {
                              "type": "object",
                              "x-required": [
                                "id",
                                "policy"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier for the PlaybackID"
                                },
                                "policy": {
                                  "type": "string",
                                  "enum": [
                                    "public",
                                    "signed",
                                    "drm"
                                  ],
                                  "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                },
                                "drm_configuration_id": {
                                  "type": "string",
                                  "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                }
                              }
                            }
                          },
                          "new_asset_settings": {
                            "type": "object",
                            "properties": {
                              "input": {
                                "type": "array",
                                "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                                "deprecated": true,
                                "x-mux-doc-decorators-hidden-children": "all",
                                "items": {
                                  "type": "object",
                                  "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                    },
                                    "overlay_settings": {
                                      "type": "object",
                                      "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                      "properties": {
                                        "vertical_align": {
                                          "type": "string",
                                          "enum": [
                                            "top",
                                            "middle",
                                            "bottom"
                                          ],
                                          "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                        },
                                        "vertical_margin": {
                                          "type": "string",
                                          "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                        },
                                        "horizontal_align": {
                                          "type": "string",
                                          "enum": [
                                            "left",
                                            "center",
                                            "right"
                                          ],
                                          "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                        },
                                        "horizontal_margin": {
                                          "type": "string",
                                          "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                        },
                                        "width": {
                                          "type": "string",
                                          "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                        },
                                        "height": {
                                          "type": "string",
                                          "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                        },
                                        "opacity": {
                                          "type": "string",
                                          "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                        }
                                      }
                                    },
                                    "generated_subtitles": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "A name for this subtitle track."
                                          },
                                          "passthrough": {
                                            "type": "string",
                                            "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                          },
                                          "language_code": {
                                            "type": "string",
                                            "description": "The language to generate subtitles in.",
                                            "default": "en",
                                            "enum": [
                                              "en",
                                              "es",
                                              "it",
                                              "pt",
                                              "de",
                                              "fr",
                                              "pl",
                                              "ru",
                                              "nl",
                                              "ca",
                                              "tr",
                                              "sv",
                                              "uk",
                                              "no",
                                              "fi",
                                              "sk",
                                              "el",
                                              "cs",
                                              "hr",
                                              "da",
                                              "ro",
                                              "bg"
                                            ]
                                          }
                                        }
                                      },
                                      "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                    },
                                    "start_time": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                    },
                                    "end_time": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "video",
                                        "audio",
                                        "text"
                                      ],
                                      "description": "This parameter is required for `text` type tracks."
                                    },
                                    "text_type": {
                                      "type": "string",
                                      "enum": [
                                        "subtitles"
                                      ],
                                      "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                    },
                                    "language_code": {
                                      "type": "string",
                                      "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                    },
                                    "closed_captions": {
                                      "type": "boolean",
                                      "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                    },
                                    "passthrough": {
                                      "type": "string",
                                      "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                    }
                                  }
                                }
                              },
                              "inputs": {
                                "type": "array",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "items": {
                                  "type": "object",
                                  "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                    },
                                    "overlay_settings": {
                                      "type": "object",
                                      "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                      "properties": {
                                        "vertical_align": {
                                          "type": "string",
                                          "enum": [
                                            "top",
                                            "middle",
                                            "bottom"
                                          ],
                                          "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                        },
                                        "vertical_margin": {
                                          "type": "string",
                                          "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                        },
                                        "horizontal_align": {
                                          "type": "string",
                                          "enum": [
                                            "left",
                                            "center",
                                            "right"
                                          ],
                                          "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                        },
                                        "horizontal_margin": {
                                          "type": "string",
                                          "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                        },
                                        "width": {
                                          "type": "string",
                                          "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                        },
                                        "height": {
                                          "type": "string",
                                          "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                        },
                                        "opacity": {
                                          "type": "string",
                                          "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                        }
                                      }
                                    },
                                    "generated_subtitles": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "A name for this subtitle track."
                                          },
                                          "passthrough": {
                                            "type": "string",
                                            "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                          },
                                          "language_code": {
                                            "type": "string",
                                            "description": "The language to generate subtitles in.",
                                            "default": "en",
                                            "enum": [
                                              "en",
                                              "es",
                                              "it",
                                              "pt",
                                              "de",
                                              "fr",
                                              "pl",
                                              "ru",
                                              "nl",
                                              "ca",
                                              "tr",
                                              "sv",
                                              "uk",
                                              "no",
                                              "fi",
                                              "sk",
                                              "el",
                                              "cs",
                                              "hr",
                                              "da",
                                              "ro",
                                              "bg"
                                            ]
                                          }
                                        }
                                      },
                                      "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                    },
                                    "start_time": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                    },
                                    "end_time": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "video",
                                        "audio",
                                        "text"
                                      ],
                                      "description": "This parameter is required for `text` type tracks."
                                    },
                                    "text_type": {
                                      "type": "string",
                                      "enum": [
                                        "subtitles"
                                      ],
                                      "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                    },
                                    "language_code": {
                                      "type": "string",
                                      "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                    },
                                    "closed_captions": {
                                      "type": "boolean",
                                      "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                    },
                                    "passthrough": {
                                      "type": "string",
                                      "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                    }
                                  }
                                }
                              },
                              "playback_policy": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "public",
                                    "signed",
                                    "drm"
                                  ],
                                  "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                },
                                "deprecated": true,
                                "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                                "x-mux-doc-decorators-hidden-children": "all"
                              },
                              "playback_policies": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "public",
                                    "signed",
                                    "drm"
                                  ],
                                  "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                },
                                "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                              },
                              "advanced_playback_policies": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "policy": {
                                      "type": "string",
                                      "enum": [
                                        "public",
                                        "signed",
                                        "drm"
                                      ],
                                      "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                    },
                                    "drm_configuration_id": {
                                      "type": "string",
                                      "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                    }
                                  }
                                },
                                "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                              },
                              "per_title_encode": {
                                "type": "boolean",
                                "format": "boolean",
                                "x-mux-doc-decorators": [
                                  "hidden"
                                ],
                                "deprecated": true
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                              },
                              "mp4_support": {
                                "type": "string",
                                "deprecated": true,
                                "enum": [
                                  "none",
                                  "standard",
                                  "capped-1080p",
                                  "audio-only",
                                  "audio-only,capped-1080p"
                                ],
                                "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                                "x-mux-doc-decorators-deprecated-enum-values": [
                                  "standard"
                                ]
                              },
                              "normalize_audio": {
                                "type": "boolean",
                                "format": "boolean",
                                "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                                "default": false
                              },
                              "master_access": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "temporary"
                                ],
                                "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                              },
                              "test": {
                                "type": "boolean",
                                "format": "boolean",
                                "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                              },
                              "max_resolution_tier": {
                                "type": "string",
                                "enum": [
                                  "1080p",
                                  "1440p",
                                  "2160p"
                                ],
                                "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                              },
                              "encoding_tier": {
                                "type": "string",
                                "deprecated": true,
                                "enum": [
                                  "smart",
                                  "baseline",
                                  "premium"
                                ],
                                "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                              },
                              "video_quality": {
                                "type": "string",
                                "enum": [
                                  "basic",
                                  "plus",
                                  "premium"
                                ],
                                "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                              },
                              "static_renditions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "x-required": [
                                    "resolution"
                                  ],
                                  "properties": {
                                    "resolution": {
                                      "type": "string",
                                      "enum": [
                                        "highest",
                                        "audio-only",
                                        "2160p",
                                        "1440p",
                                        "1080p",
                                        "720p",
                                        "540p",
                                        "480p",
                                        "360p",
                                        "270p"
                                      ],
                                      "x-mux-doc-decorators-hidden-enum-values": [
                                        "2160p",
                                        "1440p",
                                        "1080p",
                                        "720p",
                                        "540p",
                                        "480p",
                                        "360p",
                                        "270p"
                                      ]
                                    },
                                    "passthrough": {
                                      "type": "string",
                                      "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                    }
                                  }
                                },
                                "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                              },
                              "meta": {
                                "type": "object",
                                "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                                "properties": {
                                  "title": {
                                    "type": "string",
                                    "maxLength": 512,
                                    "description": "The asset title. Max 512 code points."
                                  },
                                  "creator_id": {
                                    "type": "string",
                                    "maxLength": 128,
                                    "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "maxLength": 128,
                                    "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                  }
                                }
                              }
                            }
                          },
                          "passthrough": {
                            "type": "string",
                            "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
                          },
                          "audio_only": {
                            "type": "boolean",
                            "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
                          },
                          "embedded_subtitles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-required": [
                                "name",
                                "language_code",
                                "language_channel"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "A name for this live stream closed caption track."
                                },
                                "passthrough": {
                                  "type": "string",
                                  "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                                },
                                "language_code": {
                                  "type": "string",
                                  "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                                  "default": "en"
                                },
                                "language_channel": {
                                  "type": "string",
                                  "description": "CEA-608 caption channel to read data from.",
                                  "default": "cc1",
                                  "enum": [
                                    "cc1",
                                    "cc2",
                                    "cc3",
                                    "cc4"
                                  ]
                                }
                              }
                            },
                            "description": "Describes the embedded closed caption configuration of the incoming live stream."
                          },
                          "generated_subtitles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-required": [
                                "name",
                                "language_code"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "A name for this live stream subtitle track."
                                },
                                "passthrough": {
                                  "type": "string",
                                  "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                                },
                                "language_code": {
                                  "type": "string",
                                  "description": "The language to generate subtitles in.",
                                  "default": "en",
                                  "enum": [
                                    "en",
                                    "en-US"
                                  ]
                                },
                                "transcription_vocabulary_ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                                }
                              }
                            },
                            "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                          },
                          "reconnect_window": {
                            "type": "number",
                            "format": "float",
                            "default": 60,
                            "minimum": 0,
                            "maximum": 1800,
                            "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                          },
                          "use_slate_for_standard_latency": {
                            "type": "boolean",
                            "format": "boolean",
                            "default": false,
                            "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                          },
                          "reconnect_slate_url": {
                            "type": "string",
                            "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                          },
                          "reduced_latency": {
                            "type": "boolean",
                            "format": "boolean",
                            "deprecated": true,
                            "x-mux-doc-decorators": [
                              "hidden"
                            ],
                            "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](mdc:https:/docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."
                          },
                          "low_latency": {
                            "type": "boolean",
                            "format": "boolean",
                            "deprecated": true,
                            "x-mux-doc-decorators": [
                              "hidden"
                            ],
                            "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                          },
                          "simulcast_targets": {
                            "type": "array",
                            "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](mdc:https:/docs.mux.com/guides/stream-live-to-3rd-party-platforms).",
                            "items": {
                              "type": "object",
                              "x-required": [
                                "id",
                                "url",
                                "status"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the Simulcast Target"
                                },
                                "passthrough": {
                                  "type": "string",
                                  "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "idle",
                                    "starting",
                                    "broadcasting",
                                    "errored"
                                  ],
                                  "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                                },
                                "stream_key": {
                                  "type": "string",
                                  "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                                },
                                "error_severity": {
                                  "type": "string",
                                  "enum": [
                                    "normal",
                                    "fatal"
                                  ],
                                  "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                                }
                              }
                            }
                          },
                          "latency_mode": {
                            "type": "string",
                            "enum": [
                              "low",
                              "reduced",
                              "standard"
                            ],
                            "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                          },
                          "test": {
                            "type": "boolean",
                            "format": "boolean",
                            "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                          },
                          "max_continuous_duration": {
                            "type": "integer",
                            "format": "int32",
                            "default": 43200,
                            "minimum": 60,
                            "maximum": 43200,
                            "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                          },
                          "srt_passphrase": {
                            "type": "string",
                            "description": "Unique key used for encrypting a stream to a Mux SRT endpoint."
                          },
                          "active_ingest_protocol": {
                            "type": "string",
                            "enum": [
                              "rtmp",
                              "srt"
                            ],
                            "description": "The protocol used for the active ingest stream. This is only set when the live stream is active."
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "stream_key": "831b5bde-cd8a-5bc4-115d-4ba34b19f481",
                      "status": "idle",
                      "reconnect_window": 60,
                      "playback_ids": [
                        {
                          "policy": "public",
                          "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                        }
                      ],
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ]
                      },
                      "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                      "created_at": "1609937654",
                      "latency_mode": "standard",
                      "max_continuous_duration": 43200
                    },
                    {
                      "stream_key": "d273c65e-1fc8-27dc-e9ef-56144cbceb3a",
                      "status": "idle",
                      "reconnect_window": 60,
                      "recent_asset_ids": [
                        "SZs02xxHgYdkHp00OSCjJiHUHqzVQZNU332XPXRxe341o",
                        "e4J9cwb5tjVxMeeV8201dC00i800ThPKKGT2SEN002dHH2s"
                      ],
                      "playback_ids": [
                        {
                          "policy": "public",
                          "id": "00zOcribkUmXqXHzBTpflk2771BRTcKATqPjWf7JHpuM"
                        }
                      ],
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ]
                      },
                      "id": "B65hEUWW01ErVKDDGImKcBquYhwEAkjW6Ic3lPY0299Cc",
                      "created_at": "1607587513",
                      "latency_mode": "standard",
                      "max_continuous_duration": 43200
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}": {
      "get": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Retrieve a live stream",
        "description": "Retrieves the details of a live stream that has previously been created. Supply the unique live stream ID that was returned from your previous request, and Mux will return the corresponding live stream information. The same information is returned when creating a live stream.",
        "operationId": "get-live-stream",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "latency_mode",
                        "max_continuous_duration",
                        "status",
                        "stream_key"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Live Stream. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
                        },
                        "active_asset_id": {
                          "type": "string",
                          "description": "The Asset that is currently being created if there is an active broadcast."
                        },
                        "recent_asset_ids": {
                          "type": "array",
                          "description": "An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "idle",
                            "disabled"
                          ],
                          "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
                        },
                        "audio_only": {
                          "type": "boolean",
                          "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
                        },
                        "embedded_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code",
                              "language_channel"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream closed caption track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                                "default": "en"
                              },
                              "language_channel": {
                                "type": "string",
                                "description": "CEA-608 caption channel to read data from.",
                                "default": "cc1",
                                "enum": [
                                  "cc1",
                                  "cc2",
                                  "cc3",
                                  "cc4"
                                ]
                              }
                            }
                          },
                          "description": "Describes the embedded closed caption configuration of the incoming live stream."
                        },
                        "generated_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream subtitle track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language to generate subtitles in.",
                                "default": "en",
                                "enum": [
                                  "en",
                                  "en-US"
                                ]
                              },
                              "transcription_vocabulary_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                              }
                            }
                          },
                          "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                        },
                        "reconnect_window": {
                          "type": "number",
                          "format": "float",
                          "default": 60,
                          "minimum": 0,
                          "maximum": 1800,
                          "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                        },
                        "use_slate_for_standard_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "default": false,
                          "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                        },
                        "reconnect_slate_url": {
                          "type": "string",
                          "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                        },
                        "reduced_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](mdc:https:/docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."
                        },
                        "low_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                        },
                        "simulcast_targets": {
                          "type": "array",
                          "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](mdc:https:/docs.mux.com/guides/stream-live-to-3rd-party-platforms).",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "url",
                              "status"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the Simulcast Target"
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "idle",
                                  "starting",
                                  "broadcasting",
                                  "errored"
                                ],
                                "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                              },
                              "stream_key": {
                                "type": "string",
                                "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                              },
                              "url": {
                                "type": "string",
                                "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                              },
                              "error_severity": {
                                "type": "string",
                                "enum": [
                                  "normal",
                                  "fatal"
                                ],
                                "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                              }
                            }
                          }
                        },
                        "latency_mode": {
                          "type": "string",
                          "enum": [
                            "low",
                            "reduced",
                            "standard"
                          ],
                          "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                        },
                        "max_continuous_duration": {
                          "type": "integer",
                          "format": "int32",
                          "default": 43200,
                          "minimum": 60,
                          "maximum": 43200,
                          "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                        },
                        "srt_passphrase": {
                          "type": "string",
                          "description": "Unique key used for encrypting a stream to a Mux SRT endpoint."
                        },
                        "active_ingest_protocol": {
                          "type": "string",
                          "enum": [
                            "rtmp",
                            "srt"
                          ],
                          "description": "The protocol used for the active ingest stream. This is only set when the live stream is active."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "stream_key": "831b5bde-cd8a-5bc4-115d-4ba34b19f481",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "latency_mode": "standard",
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Delete a live stream",
        "description": "Deletes a live stream from the current environment. If the live stream is currently active and being streamed to, ingest will be terminated and the encoder will be disconnected.",
        "operationId": "delete-live-stream",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Update a live stream",
        "description": "Updates the parameters of a previously-created live stream. This currently supports a subset of variables. Supply the live stream ID and the updated parameters and Mux will return the corresponding live stream information. The information returned will be the same after update as for subsequent get live stream requests.",
        "operationId": "update-live-stream",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "passthrough": {
                    "type": "string",
                    "description": "Arbitrary user-supplied metadata set for the live stream. Max 255 characters. In order to clear this value, the field should be included with an empty-string value."
                  },
                  "latency_mode": {
                    "type": "string",
                    "enum": [
                      "low",
                      "reduced",
                      "standard"
                    ],
                    "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                  },
                  "reconnect_window": {
                    "type": "number",
                    "format": "float",
                    "default": 60,
                    "minimum": 0,
                    "maximum": 1800,
                    "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset.\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                  },
                  "use_slate_for_standard_latency": {
                    "type": "boolean",
                    "format": "boolean",
                    "default": false,
                    "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                  },
                  "reconnect_slate_url": {
                    "type": "string",
                    "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. Set this to a blank string to clear the value so that the default slate media will be used."
                  },
                  "max_continuous_duration": {
                    "type": "integer",
                    "format": "int32",
                    "default": 43200,
                    "minimum": 60,
                    "maximum": 43200,
                    "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                  },
                  "new_asset_settings": {
                    "type": "object",
                    "description": "Updates the new asset settings to use to generate a new asset for this live stream. Only the `mp4_support`, `master_access`, and `video_quality` settings may be updated.\n",
                    "properties": {
                      "mp4_support": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                          "none",
                          "standard",
                          "capped-1080p",
                          "audio-only",
                          "audio-only,capped-1080p"
                        ],
                        "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions#during-live-stream-creation) for the updated API.\nSpecify what level of support for mp4 playback should be added to new assets generated from this live stream.\n* The `none` option disables MP4 support for new assets. MP4 files will not be produced for an asset generated from this live stream.\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n* The `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n",
                        "x-mux-doc-decorators-deprecated-enum-values": [
                          "standard"
                        ]
                      },
                      "master_access": {
                        "type": "string",
                        "description": "Add or remove access to the master version of the video.",
                        "enum": [
                          "temporary",
                          "none"
                        ]
                      },
                      "video_quality": {
                        "type": "string",
                        "enum": [
                          "plus",
                          "premium"
                        ],
                        "description": "The video quality controls the cost, quality, and available platform features for the asset. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                      },
                      "meta": {
                        "type": "object",
                        "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maxLength": 512,
                            "description": "The asset title. Max 512 code points."
                          },
                          "creator_id": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                          },
                          "external_id": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "latency_mode": "standard",
                "reconnect_window": 30,
                "max_continuous_duration": 1200
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "latency_mode",
                        "max_continuous_duration",
                        "status",
                        "stream_key"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Live Stream. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
                        },
                        "active_asset_id": {
                          "type": "string",
                          "description": "The Asset that is currently being created if there is an active broadcast."
                        },
                        "recent_asset_ids": {
                          "type": "array",
                          "description": "An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "idle",
                            "disabled"
                          ],
                          "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
                        },
                        "audio_only": {
                          "type": "boolean",
                          "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
                        },
                        "embedded_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code",
                              "language_channel"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream closed caption track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                                "default": "en"
                              },
                              "language_channel": {
                                "type": "string",
                                "description": "CEA-608 caption channel to read data from.",
                                "default": "cc1",
                                "enum": [
                                  "cc1",
                                  "cc2",
                                  "cc3",
                                  "cc4"
                                ]
                              }
                            }
                          },
                          "description": "Describes the embedded closed caption configuration of the incoming live stream."
                        },
                        "generated_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream subtitle track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language to generate subtitles in.",
                                "default": "en",
                                "enum": [
                                  "en",
                                  "en-US"
                                ]
                              },
                              "transcription_vocabulary_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                              }
                            }
                          },
                          "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                        },
                        "reconnect_window": {
                          "type": "number",
                          "format": "float",
                          "default": 60,
                          "minimum": 0,
                          "maximum": 1800,
                          "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                        },
                        "use_slate_for_standard_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "default": false,
                          "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                        },
                        "reconnect_slate_url": {
                          "type": "string",
                          "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                        },
                        "reduced_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](mdc:https:/docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."
                        },
                        "low_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                        },
                        "simulcast_targets": {
                          "type": "array",
                          "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](mdc:https:/docs.mux.com/guides/stream-live-to-3rd-party-platforms).",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "url",
                              "status"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the Simulcast Target"
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "idle",
                                  "starting",
                                  "broadcasting",
                                  "errored"
                                ],
                                "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                              },
                              "stream_key": {
                                "type": "string",
                                "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                              },
                              "url": {
                                "type": "string",
                                "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                              },
                              "error_severity": {
                                "type": "string",
                                "enum": [
                                  "normal",
                                  "fatal"
                                ],
                                "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                              }
                            }
                          }
                        },
                        "latency_mode": {
                          "type": "string",
                          "enum": [
                            "low",
                            "reduced",
                            "standard"
                          ],
                          "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                        },
                        "max_continuous_duration": {
                          "type": "integer",
                          "format": "int32",
                          "default": 43200,
                          "minimum": 60,
                          "maximum": 43200,
                          "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                        },
                        "srt_passphrase": {
                          "type": "string",
                          "description": "Unique key used for encrypting a stream to a Mux SRT endpoint."
                        },
                        "active_ingest_protocol": {
                          "type": "string",
                          "enum": [
                            "rtmp",
                            "srt"
                          ],
                          "description": "The protocol used for the active ingest stream. This is only set when the live stream is active."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "stream_key": "831b5bde-cd8a-5bc4-115d-4ba34b19f481",
                    "status": "idle",
                    "reconnect_window": 30,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "latency_mode": "standard",
                    "max_continuous_duration": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids": {
      "post": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Create a live stream playback ID",
        "description": "Create a new playback ID for this live stream, through which a viewer can watch the streamed content of the live stream.",
        "operationId": "create-live-stream-playback-id",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "policy": {
                    "type": "string",
                    "enum": [
                      "public",
                      "signed",
                      "drm"
                    ],
                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                  },
                  "drm_configuration_id": {
                    "type": "string",
                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                  }
                }
              },
              "example": {
                "policy": "signed"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "policy"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the PlaybackID"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "drm_configuration_id": {
                          "type": "string",
                          "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "policy": "public",
                    "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids/{PLAYBACK_ID}": {
      "get": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Retrieve a live stream playback ID",
        "description": "Fetches information about a live stream's playback ID, through which a viewer can watch the streamed content from this live stream.",
        "operationId": "get-live-stream-playback-id",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PLAYBACK_ID",
            "in": "path",
            "description": "The asset or live stream's playback ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "policy"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the PlaybackID"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "drm_configuration_id": {
                          "type": "string",
                          "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "policy": "public",
                    "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Delete a live stream playback ID",
        "description": "Deletes the playback ID for the live stream. This will not disable ingest (as the live stream still exists). New attempts to play back the live stream will fail immediately. However, current viewers will be able to continue watching the stream for some period of time.",
        "operationId": "delete-live-stream-playback-id",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PLAYBACK_ID",
            "in": "path",
            "description": "The asset or live stream's playback ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/reset-stream-key": {
      "post": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Reset a live stream's stream key",
        "description": "Reset a live stream key if you want to immediately stop the current stream key from working and create a new stream key that can be used for future broadcasts.",
        "operationId": "reset-stream-key",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "latency_mode",
                        "max_continuous_duration",
                        "status",
                        "stream_key"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Live Stream. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
                        },
                        "active_asset_id": {
                          "type": "string",
                          "description": "The Asset that is currently being created if there is an active broadcast."
                        },
                        "recent_asset_ids": {
                          "type": "array",
                          "description": "An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "idle",
                            "disabled"
                          ],
                          "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
                        },
                        "audio_only": {
                          "type": "boolean",
                          "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
                        },
                        "embedded_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code",
                              "language_channel"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream closed caption track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                                "default": "en"
                              },
                              "language_channel": {
                                "type": "string",
                                "description": "CEA-608 caption channel to read data from.",
                                "default": "cc1",
                                "enum": [
                                  "cc1",
                                  "cc2",
                                  "cc3",
                                  "cc4"
                                ]
                              }
                            }
                          },
                          "description": "Describes the embedded closed caption configuration of the incoming live stream."
                        },
                        "generated_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream subtitle track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language to generate subtitles in.",
                                "default": "en",
                                "enum": [
                                  "en",
                                  "en-US"
                                ]
                              },
                              "transcription_vocabulary_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                              }
                            }
                          },
                          "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                        },
                        "reconnect_window": {
                          "type": "number",
                          "format": "float",
                          "default": 60,
                          "minimum": 0,
                          "maximum": 1800,
                          "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                        },
                        "use_slate_for_standard_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "default": false,
                          "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                        },
                        "reconnect_slate_url": {
                          "type": "string",
                          "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                        },
                        "reduced_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](mdc:https:/docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."
                        },
                        "low_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                        },
                        "simulcast_targets": {
                          "type": "array",
                          "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](mdc:https:/docs.mux.com/guides/stream-live-to-3rd-party-platforms).",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "url",
                              "status"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the Simulcast Target"
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "idle",
                                  "starting",
                                  "broadcasting",
                                  "errored"
                                ],
                                "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                              },
                              "stream_key": {
                                "type": "string",
                                "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                              },
                              "url": {
                                "type": "string",
                                "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                              },
                              "error_severity": {
                                "type": "string",
                                "enum": [
                                  "normal",
                                  "fatal"
                                ],
                                "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                              }
                            }
                          }
                        },
                        "latency_mode": {
                          "type": "string",
                          "enum": [
                            "low",
                            "reduced",
                            "standard"
                          ],
                          "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                        },
                        "max_continuous_duration": {
                          "type": "integer",
                          "format": "int32",
                          "default": 43200,
                          "minimum": 60,
                          "maximum": 43200,
                          "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                        },
                        "srt_passphrase": {
                          "type": "string",
                          "description": "Unique key used for encrypting a stream to a Mux SRT endpoint."
                        },
                        "active_ingest_protocol": {
                          "type": "string",
                          "enum": [
                            "rtmp",
                            "srt"
                          ],
                          "description": "The protocol used for the active ingest stream. This is only set when the live stream is active."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "stream_key": "acaf2ca1-ba9c-5ffe-8c9c-a02bbf0009a6",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      },
                      {
                        "policy": "public",
                        "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "latency_mode": "standard",
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/complete": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Signal a live stream is finished",
        "description": "(Optional) End the live stream recording immediately instead of waiting for the reconnect_window. `EXT-X-ENDLIST` tag is added to the HLS manifest which notifies the player that this live stream is over.\n\nMux does not close the encoder connection immediately. Encoders are often configured to re-establish connections immediately which would result in a new recorded asset. For this reason, Mux waits for 60s before closing the connection with the encoder. This 60s timeframe is meant to give encoder operators a chance to disconnect from their end.\n",
        "operationId": "signal-live-stream-complete",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/disable": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Disable a live stream",
        "description": "Disables a live stream, making it reject incoming RTMP streams until re-enabled. The API also ends the live stream recording immediately when active. Ending the live stream recording adds the `EXT-X-ENDLIST` tag to the HLS manifest which notifies the player that this live stream is over.\n\nMux also closes the encoder connection immediately. Any attempt from the encoder to re-establish connection will fail till the live stream is re-enabled.\n",
        "operationId": "disable-live-stream",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/enable": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Enable a live stream",
        "description": "Enables a live stream, allowing it to accept an incoming RTMP stream.",
        "operationId": "enable-live-stream",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/embedded-subtitles": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Update a live stream's embedded subtitles",
        "description": "Configures a live stream to receive embedded closed captions.\nThe resulting Asset's subtitle text track will have `closed_captions: true` set.\n",
        "operationId": "update-live-stream-embedded-subtitles",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "embedded_subtitles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "A name for this live stream closed caption track."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                        },
                        "language_code": {
                          "type": "string",
                          "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                          "default": "en"
                        },
                        "language_channel": {
                          "type": "string",
                          "description": "CEA-608 caption channel to read data from.",
                          "default": "cc1",
                          "enum": [
                            "cc1",
                            "cc2",
                            "cc3",
                            "cc4"
                          ]
                        }
                      }
                    },
                    "description": "Describe the embedded closed caption contents of the incoming live stream."
                  }
                }
              },
              "example": {
                "embedded_subtitles": [
                  {
                    "passthrough": "Example"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "latency_mode",
                        "max_continuous_duration",
                        "status",
                        "stream_key"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Live Stream. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
                        },
                        "active_asset_id": {
                          "type": "string",
                          "description": "The Asset that is currently being created if there is an active broadcast."
                        },
                        "recent_asset_ids": {
                          "type": "array",
                          "description": "An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "idle",
                            "disabled"
                          ],
                          "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
                        },
                        "audio_only": {
                          "type": "boolean",
                          "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
                        },
                        "embedded_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code",
                              "language_channel"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream closed caption track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                                "default": "en"
                              },
                              "language_channel": {
                                "type": "string",
                                "description": "CEA-608 caption channel to read data from.",
                                "default": "cc1",
                                "enum": [
                                  "cc1",
                                  "cc2",
                                  "cc3",
                                  "cc4"
                                ]
                              }
                            }
                          },
                          "description": "Describes the embedded closed caption configuration of the incoming live stream."
                        },
                        "generated_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream subtitle track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language to generate subtitles in.",
                                "default": "en",
                                "enum": [
                                  "en",
                                  "en-US"
                                ]
                              },
                              "transcription_vocabulary_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                              }
                            }
                          },
                          "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                        },
                        "reconnect_window": {
                          "type": "number",
                          "format": "float",
                          "default": 60,
                          "minimum": 0,
                          "maximum": 1800,
                          "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                        },
                        "use_slate_for_standard_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "default": false,
                          "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                        },
                        "reconnect_slate_url": {
                          "type": "string",
                          "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                        },
                        "reduced_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](mdc:https:/docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."
                        },
                        "low_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                        },
                        "simulcast_targets": {
                          "type": "array",
                          "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](mdc:https:/docs.mux.com/guides/stream-live-to-3rd-party-platforms).",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "url",
                              "status"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the Simulcast Target"
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "idle",
                                  "starting",
                                  "broadcasting",
                                  "errored"
                                ],
                                "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                              },
                              "stream_key": {
                                "type": "string",
                                "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                              },
                              "url": {
                                "type": "string",
                                "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                              },
                              "error_severity": {
                                "type": "string",
                                "enum": [
                                  "normal",
                                  "fatal"
                                ],
                                "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                              }
                            }
                          }
                        },
                        "latency_mode": {
                          "type": "string",
                          "enum": [
                            "low",
                            "reduced",
                            "standard"
                          ],
                          "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                        },
                        "max_continuous_duration": {
                          "type": "integer",
                          "format": "int32",
                          "default": 43200,
                          "minimum": 60,
                          "maximum": 43200,
                          "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                        },
                        "srt_passphrase": {
                          "type": "string",
                          "description": "Unique key used for encrypting a stream to a Mux SRT endpoint."
                        },
                        "active_ingest_protocol": {
                          "type": "string",
                          "enum": [
                            "rtmp",
                            "srt"
                          ],
                          "description": "The protocol used for the active ingest stream. This is only set when the live stream is active."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "stream_key": "acaf2ca1-ba9c-5ffe-8c9c-a02bbf0009a6",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      },
                      {
                        "policy": "public",
                        "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "embedded_subtitles": [
                      {
                        "name": "English CC",
                        "language_code": "en",
                        "language_channel": "cc1",
                        "passthrough": "Example"
                      }
                    ],
                    "latency_mode": "standard",
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/generated-subtitles": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Update a live stream's generated subtitles",
        "description": "Updates a live stream's automatic-speech-recognition-generated subtitle configuration.\nAutomatic speech recognition subtitles can be removed by sending an empty array in the\nrequest payload.\n",
        "operationId": "update-live-stream-generated-subtitles",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "generated_subtitles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "A name for this live stream subtitle track."
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                        },
                        "language_code": {
                          "type": "string",
                          "description": "The language to generate subtitles in.",
                          "default": "en",
                          "enum": [
                            "en",
                            "en-US"
                          ]
                        },
                        "transcription_vocabulary_ids": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                        }
                      }
                    },
                    "description": "Update automated speech recognition subtitle configuration for a live stream. At most one subtitle track is allowed."
                  }
                },
                "x-mux-no-required-properties": true
              },
              "example": {
                "generated_subtitles": [
                  {
                    "name": "English CC (ASR)",
                    "language_code": "en",
                    "passthrough": "Example"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "latency_mode",
                        "max_continuous_duration",
                        "status",
                        "stream_key"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Live Stream. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
                        },
                        "active_asset_id": {
                          "type": "string",
                          "description": "The Asset that is currently being created if there is an active broadcast."
                        },
                        "recent_asset_ids": {
                          "type": "array",
                          "description": "An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "idle",
                            "disabled"
                          ],
                          "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
                        },
                        "audio_only": {
                          "type": "boolean",
                          "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
                        },
                        "embedded_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code",
                              "language_channel"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream closed caption track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                                "default": "en"
                              },
                              "language_channel": {
                                "type": "string",
                                "description": "CEA-608 caption channel to read data from.",
                                "default": "cc1",
                                "enum": [
                                  "cc1",
                                  "cc2",
                                  "cc3",
                                  "cc4"
                                ]
                              }
                            }
                          },
                          "description": "Describes the embedded closed caption configuration of the incoming live stream."
                        },
                        "generated_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream subtitle track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language to generate subtitles in.",
                                "default": "en",
                                "enum": [
                                  "en",
                                  "en-US"
                                ]
                              },
                              "transcription_vocabulary_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                              }
                            }
                          },
                          "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                        },
                        "reconnect_window": {
                          "type": "number",
                          "format": "float",
                          "default": 60,
                          "minimum": 0,
                          "maximum": 1800,
                          "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                        },
                        "use_slate_for_standard_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "default": false,
                          "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                        },
                        "reconnect_slate_url": {
                          "type": "string",
                          "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                        },
                        "reduced_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](mdc:https:/docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."
                        },
                        "low_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                        },
                        "simulcast_targets": {
                          "type": "array",
                          "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](mdc:https:/docs.mux.com/guides/stream-live-to-3rd-party-platforms).",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "url",
                              "status"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the Simulcast Target"
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "idle",
                                  "starting",
                                  "broadcasting",
                                  "errored"
                                ],
                                "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                              },
                              "stream_key": {
                                "type": "string",
                                "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                              },
                              "url": {
                                "type": "string",
                                "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                              },
                              "error_severity": {
                                "type": "string",
                                "enum": [
                                  "normal",
                                  "fatal"
                                ],
                                "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                              }
                            }
                          }
                        },
                        "latency_mode": {
                          "type": "string",
                          "enum": [
                            "low",
                            "reduced",
                            "standard"
                          ],
                          "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                        },
                        "max_continuous_duration": {
                          "type": "integer",
                          "format": "int32",
                          "default": 43200,
                          "minimum": 60,
                          "maximum": 43200,
                          "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                        },
                        "srt_passphrase": {
                          "type": "string",
                          "description": "Unique key used for encrypting a stream to a Mux SRT endpoint."
                        },
                        "active_ingest_protocol": {
                          "type": "string",
                          "enum": [
                            "rtmp",
                            "srt"
                          ],
                          "description": "The protocol used for the active ingest stream. This is only set when the live stream is active."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "stream_key": "acaf2ca1-ba9c-5ffe-8c9c-a02bbf0009a6",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      },
                      {
                        "policy": "public",
                        "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "generated_subtitles": [
                      {
                        "name": "English CC (ASR)",
                        "language_code": "en",
                        "passthrough": "Example"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-ids/{PLAYBACK_ID}": {
      "get": {
        "tags": [
          "Playback ID"
        ],
        "summary": "Retrieve an asset or live stream ID",
        "description": "Retrieves the Identifier of the Asset or Live Stream associated with the Playback ID.",
        "operationId": "get-asset-or-livestream-id",
        "parameters": [
          {
            "name": "PLAYBACK_ID",
            "in": "path",
            "description": "The asset or live stream's playback ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "object",
                        "policy"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Playback ID used to retrieve the corresponding asset or the live stream ID"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "object": {
                          "type": "object",
                          "x-required": [
                            "id",
                            "type"
                          ],
                          "description": "Describes the Asset or LiveStream object associated with the playback ID.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The identifier of the object."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "asset",
                                "live_stream"
                              ],
                              "description": "Identifies the object type associated with the playback ID."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "a1B2c3D4e5F6g7H8i9",
                    "policy": "public",
                    "object": {
                      "type": "asset",
                      "id": "123456789012345678"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets": {
      "post": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Create a live stream simulcast target",
        "description": "Create a simulcast target for the parent live stream. Simulcast target can only be created when the parent live stream is in idle state. Only one simulcast target can be created at a time with this API.",
        "operationId": "create-live-stream-simulcast-target",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "url"
                ],
                "properties": {
                  "passthrough": {
                    "type": "string",
                    "description": "Arbitrary user-supplied metadata set by you when creating a simulcast target."
                  },
                  "stream_key": {
                    "type": "string",
                    "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                  },
                  "url": {
                    "type": "string",
                    "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                  }
                }
              },
              "example": {
                "url": "rtmp://live.example.com/app",
                "stream_key": "abcdefgh",
                "passthrough": "Example"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "url",
                        "status"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the Simulcast Target"
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "idle",
                            "starting",
                            "broadcasting",
                            "errored"
                          ],
                          "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                        },
                        "url": {
                          "type": "string",
                          "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                        },
                        "error_severity": {
                          "type": "string",
                          "enum": [
                            "normal",
                            "fatal"
                          ],
                          "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "url": "rtmp://live.example.com/app",
                    "stream_key": "abcdefgh",
                    "status": "idle",
                    "passthrough": "Example",
                    "id": "le1axfGDc9ETqh6trHNTxGQ9XEhj02fOnX0200aAh24fwlmwzqKCYNJgw"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets/{SIMULCAST_TARGET_ID}": {
      "delete": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Delete a live stream simulcast target",
        "description": "Delete the simulcast target using the simulcast target ID returned when creating the simulcast target. Simulcast Target can only be deleted when the parent live stream is in idle state.",
        "operationId": "delete-live-stream-simulcast-target",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SIMULCAST_TARGET_ID",
            "in": "path",
            "description": "The ID of the simulcast target.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Retrieve a live stream simulcast target",
        "description": "Retrieves the details of the simulcast target created for the parent live stream. Supply the unique live stream ID and simulcast target ID that was returned in the response of create simulcast target request, and Mux will return the corresponding information.",
        "operationId": "get-live-stream-simulcast-target",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SIMULCAST_TARGET_ID",
            "in": "path",
            "description": "The ID of the simulcast target.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "url",
                        "status"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the Simulcast Target"
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "idle",
                            "starting",
                            "broadcasting",
                            "errored"
                          ],
                          "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                        },
                        "url": {
                          "type": "string",
                          "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                        },
                        "error_severity": {
                          "type": "string",
                          "enum": [
                            "normal",
                            "fatal"
                          ],
                          "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "url": "rtmp://live.example.com/app",
                    "stream_key": "abcdefgh",
                    "status": "idle",
                    "passthrough": "Example",
                    "id": "02FU00rPq00fC9S6kygrqlxygGMdpW1lk00BkFpCfc2kGregEIr7brt7CQ"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/new-asset-settings/static-renditions": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Update live stream static renditions for new assets",
        "description": "Updates a live stream's static renditions settings for new assets. Further assets made via this live stream will create static renditions per the settings provided. You must provide all static renditions desired.",
        "operationId": "update-live-stream-new-asset-settings-static-renditions",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "static_renditions"
                ],
                "properties": {
                  "static_renditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-required": [
                        "resolution"
                      ],
                      "properties": {
                        "resolution": {
                          "type": "string",
                          "enum": [
                            "highest",
                            "audio-only",
                            "2160p",
                            "1440p",
                            "1080p",
                            "720p",
                            "540p",
                            "480p",
                            "360p",
                            "270p"
                          ],
                          "x-mux-doc-decorators-hidden-enum-values": [
                            "2160p",
                            "1440p",
                            "1080p",
                            "720p",
                            "540p",
                            "480p",
                            "360p",
                            "270p"
                          ]
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "static_renditions": [
                  {
                    "resolution": "audio-only"
                  },
                  {
                    "resolution": "highest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at",
                        "latency_mode",
                        "max_continuous_duration",
                        "status",
                        "stream_key"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Live Stream. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "stream_key": {
                          "type": "string",
                          "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
                        },
                        "active_asset_id": {
                          "type": "string",
                          "description": "The Asset that is currently being created if there is an active broadcast."
                        },
                        "recent_asset_ids": {
                          "type": "array",
                          "description": "An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "idle",
                            "disabled"
                          ],
                          "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
                        },
                        "playback_ids": {
                          "type": "array",
                          "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](mdc:https:/docs.mux.com/guides/play-your-videos) for more details.",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "policy"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the PlaybackID"
                              },
                              "policy": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "drm_configuration_id": {
                                "type": "string",
                                "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                              }
                            }
                          }
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "passthrough": {
                          "type": "string",
                          "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
                        },
                        "audio_only": {
                          "type": "boolean",
                          "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
                        },
                        "embedded_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code",
                              "language_channel"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream closed caption track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
                                "default": "en"
                              },
                              "language_channel": {
                                "type": "string",
                                "description": "CEA-608 caption channel to read data from.",
                                "default": "cc1",
                                "enum": [
                                  "cc1",
                                  "cc2",
                                  "cc3",
                                  "cc4"
                                ]
                              }
                            }
                          },
                          "description": "Describes the embedded closed caption configuration of the incoming live stream."
                        },
                        "generated_subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "name",
                              "language_code"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A name for this live stream subtitle track."
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary metadata set for the live stream subtitle track. Max 255 characters."
                              },
                              "language_code": {
                                "type": "string",
                                "description": "The language to generate subtitles in.",
                                "default": "en",
                                "enum": [
                                  "en",
                                  "en-US"
                                ]
                              },
                              "transcription_vocabulary_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."
                              }
                            }
                          },
                          "description": "Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."
                        },
                        "reconnect_window": {
                          "type": "number",
                          "format": "float",
                          "default": 60,
                          "minimum": 0,
                          "maximum": 1800,
                          "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\n\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\n\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\n"
                        },
                        "use_slate_for_standard_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "default": false,
                          "description": "By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."
                        },
                        "reconnect_slate_url": {
                          "type": "string",
                          "description": "The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."
                        },
                        "reduced_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](mdc:https:/docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."
                        },
                        "low_latency": {
                          "type": "boolean",
                          "format": "boolean",
                          "deprecated": true,
                          "x-mux-doc-decorators": [
                            "hidden"
                          ],
                          "description": "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."
                        },
                        "simulcast_targets": {
                          "type": "array",
                          "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](mdc:https:/docs.mux.com/guides/stream-live-to-3rd-party-platforms).",
                          "items": {
                            "type": "object",
                            "x-required": [
                              "id",
                              "url",
                              "status"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the Simulcast Target"
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "idle",
                                  "starting",
                                  "broadcasting",
                                  "errored"
                                ],
                                "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\n"
                              },
                              "stream_key": {
                                "type": "string",
                                "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."
                              },
                              "url": {
                                "type": "string",
                                "description": "The RTMP(s) or SRT endpoint for a simulcast destination.\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\n\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\n"
                              },
                              "error_severity": {
                                "type": "string",
                                "enum": [
                                  "normal",
                                  "fatal"
                                ],
                                "description": "The severity of the error encountered by the simulcast target.\nThis field is only set when the simulcast target is in the `errored` status.\nSee the values of severities below and their descriptions.\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\n"
                              }
                            }
                          }
                        },
                        "latency_mode": {
                          "type": "string",
                          "enum": [
                            "low",
                            "reduced",
                            "standard"
                          ],
                          "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
                        },
                        "max_continuous_duration": {
                          "type": "integer",
                          "format": "int32",
                          "default": 43200,
                          "minimum": 60,
                          "maximum": 43200,
                          "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
                        },
                        "srt_passphrase": {
                          "type": "string",
                          "description": "Unique key used for encrypting a stream to a Mux SRT endpoint."
                        },
                        "active_ingest_protocol": {
                          "type": "string",
                          "enum": [
                            "rtmp",
                            "srt"
                          ],
                          "description": "The protocol used for the active ingest stream. This is only set when the live stream is active."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "stream_key": "abcdefgh",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ],
                      "static_renditions": [
                        {
                          "resolution": "audio-only"
                        },
                        {
                          "resolution": "highest"
                        }
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "latency_mode": "standard",
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Delete a live stream's static renditions setting for new assets",
        "description": "Deletes a live stream's static renditions settings for new assets. Further assets made via this live stream will not create static renditions unless re-added.",
        "operationId": "delete-live-stream-new-asset-settings-static-renditions",
        "parameters": [
          {
            "name": "LIVE_STREAM_ID",
            "in": "path",
            "description": "The live stream ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/signing-keys": {
      "post": {
        "deprecated": true,
        "tags": [
          "URL Signing Keys"
        ],
        "summary": "Create a URL signing key",
        "description": "This route is now deprecated, please use the `Signing Keys` API. Creates a new signing key pair. When creating a new signing key,\nthe API will generate a 2048-bit RSA key-pair and return the private key and\na generated key-id; the public key will be stored at Mux to validate signed\ntokens.\n\nNote: Any new access tokens authenticating this route will be required to have `System` level permissions.\n",
        "operationId": "create-url-signing-key",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "x-required": [
                            "id",
                            "created_at"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the Signing Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "int64",
                              "description": "Time at which the object was created. Measured in seconds since the Unix epoch."
                            },
                            "private_key": {
                              "type": "string",
                              "format": "byte",
                              "description": "A Base64 encoded private key that can be used with the RS256 algorithm when creating a [JWT](mdc:https:/jwt.io). **Note that this value is only returned once when creating a URL signing key.**"
                            }
                          }
                        },
                        {
                          "x-required": [
                            "private_key"
                          ]
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "data": {
                    "private_key": "abcd123=",
                    "id": "vI5KTQ78ohYriuvWKHY6COtZWXexHGLllxksOdZuya8",
                    "created_at": "1610108345"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "deprecated": true,
        "tags": [
          "URL Signing Keys"
        ],
        "summary": "List URL signing keys",
        "description": "This route is now deprecated, please use the `Signing Keys` API. Returns a list of URL signing keys.\n\nNote: Any new access tokens authenticating this route will be required to have `System` level permissions.\n",
        "operationId": "list-url-signing-keys",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-required": [
                          "id",
                          "created_at"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the Signing Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "int64",
                            "description": "Time at which the object was created. Measured in seconds since the Unix epoch."
                          },
                          "private_key": {
                            "type": "string",
                            "format": "byte",
                            "description": "A Base64 encoded private key that can be used with the RS256 algorithm when creating a [JWT](mdc:https:/jwt.io). **Note that this value is only returned once when creating a URL signing key.**"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "vI5KTQ78ohYriuvWKHY6COtZWXexHGLllxksOdZuya8",
                      "created_at": "1610108345"
                    },
                    {
                      "id": "jc6lJiCLMjyC202EXtRQ644sShzDv6x5tWJrbvUFpvmo",
                      "created_at": "1608632647"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/signing-keys/{SIGNING_KEY_ID}": {
      "get": {
        "deprecated": true,
        "tags": [
          "URL Signing Keys"
        ],
        "summary": "Retrieve a URL signing key",
        "description": "This route is now deprecated, please use the `Signing Keys` API. Retrieves the details of a URL signing key that has previously\nbeen created. Supply the unique signing key ID that was returned from your\nprevious request, and Mux will return the corresponding signing key information.\n**The private key is not returned in this response.**\n\nNote: Any new access tokens authenticating this route will be required to have `System` level permissions.\n",
        "operationId": "get-url-signing-key",
        "parameters": [
          {
            "name": "SIGNING_KEY_ID",
            "in": "path",
            "description": "The ID of the signing key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "created_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Signing Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time at which the object was created. Measured in seconds since the Unix epoch."
                        },
                        "private_key": {
                          "type": "string",
                          "format": "byte",
                          "description": "A Base64 encoded private key that can be used with the RS256 algorithm when creating a [JWT](mdc:https:/jwt.io). **Note that this value is only returned once when creating a URL signing key.**"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "jc6lJiCLMjyC202EXtRQ644sShzDv6x5tWJrbvUFpvmo",
                    "created_at": "1608632647"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": true,
        "tags": [
          "URL Signing Keys"
        ],
        "summary": "Delete a URL signing key",
        "description": "This route is now deprecated, please use the `Signing Keys` API. Deletes an existing signing key. Use with caution, as this will\ninvalidate any existing signatures and no URLs can be signed using the key\nagain.\n\nNote: Any new access tokens authenticating this route will be required to have `System` level permissions.\n",
        "operationId": "delete-url-signing-key",
        "parameters": [
          {
            "name": "SIGNING_KEY_ID",
            "in": "path",
            "description": "The ID of the signing key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/uploads": {
      "post": {
        "operationId": "create-direct-upload",
        "description": "Creates a new direct upload, through which video content can be uploaded for ingest to Mux.",
        "summary": "Create a new direct upload URL",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "cors_origin"
                ],
                "properties": {
                  "timeout": {
                    "type": "integer",
                    "format": "int32",
                    "default": 3600,
                    "minimum": 60,
                    "maximum": 604800,
                    "description": "Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"
                  },
                  "cors_origin": {
                    "type": "string",
                    "description": "If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."
                  },
                  "new_asset_settings": {
                    "type": "object",
                    "properties": {
                      "input": {
                        "type": "array",
                        "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                        "deprecated": true,
                        "x-mux-doc-decorators-hidden-children": "all",
                        "items": {
                          "type": "object",
                          "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                            },
                            "overlay_settings": {
                              "type": "object",
                              "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                              "properties": {
                                "vertical_align": {
                                  "type": "string",
                                  "enum": [
                                    "top",
                                    "middle",
                                    "bottom"
                                  ],
                                  "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                },
                                "vertical_margin": {
                                  "type": "string",
                                  "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                },
                                "horizontal_align": {
                                  "type": "string",
                                  "enum": [
                                    "left",
                                    "center",
                                    "right"
                                  ],
                                  "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                },
                                "horizontal_margin": {
                                  "type": "string",
                                  "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                },
                                "width": {
                                  "type": "string",
                                  "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                },
                                "height": {
                                  "type": "string",
                                  "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                },
                                "opacity": {
                                  "type": "string",
                                  "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                }
                              }
                            },
                            "generated_subtitles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "A name for this subtitle track."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language to generate subtitles in.",
                                    "default": "en",
                                    "enum": [
                                      "en",
                                      "es",
                                      "it",
                                      "pt",
                                      "de",
                                      "fr",
                                      "pl",
                                      "ru",
                                      "nl",
                                      "ca",
                                      "tr",
                                      "sv",
                                      "uk",
                                      "no",
                                      "fi",
                                      "sk",
                                      "el",
                                      "cs",
                                      "hr",
                                      "da",
                                      "ro",
                                      "bg"
                                    ]
                                  }
                                }
                              },
                              "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                            },
                            "start_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "end_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "video",
                                "audio",
                                "text"
                              ],
                              "description": "This parameter is required for `text` type tracks."
                            },
                            "text_type": {
                              "type": "string",
                              "enum": [
                                "subtitles"
                              ],
                              "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                            },
                            "language_code": {
                              "type": "string",
                              "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                            },
                            "closed_captions": {
                              "type": "boolean",
                              "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            }
                          }
                        }
                      },
                      "inputs": {
                        "type": "array",
                        "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                        "items": {
                          "type": "object",
                          "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                            },
                            "overlay_settings": {
                              "type": "object",
                              "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                              "properties": {
                                "vertical_align": {
                                  "type": "string",
                                  "enum": [
                                    "top",
                                    "middle",
                                    "bottom"
                                  ],
                                  "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                },
                                "vertical_margin": {
                                  "type": "string",
                                  "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                },
                                "horizontal_align": {
                                  "type": "string",
                                  "enum": [
                                    "left",
                                    "center",
                                    "right"
                                  ],
                                  "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                },
                                "horizontal_margin": {
                                  "type": "string",
                                  "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                },
                                "width": {
                                  "type": "string",
                                  "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                },
                                "height": {
                                  "type": "string",
                                  "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                },
                                "opacity": {
                                  "type": "string",
                                  "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                }
                              }
                            },
                            "generated_subtitles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "A name for this subtitle track."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language to generate subtitles in.",
                                    "default": "en",
                                    "enum": [
                                      "en",
                                      "es",
                                      "it",
                                      "pt",
                                      "de",
                                      "fr",
                                      "pl",
                                      "ru",
                                      "nl",
                                      "ca",
                                      "tr",
                                      "sv",
                                      "uk",
                                      "no",
                                      "fi",
                                      "sk",
                                      "el",
                                      "cs",
                                      "hr",
                                      "da",
                                      "ro",
                                      "bg"
                                    ]
                                  }
                                }
                              },
                              "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                            },
                            "start_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "end_time": {
                              "type": "number",
                              "format": "double",
                              "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "video",
                                "audio",
                                "text"
                              ],
                              "description": "This parameter is required for `text` type tracks."
                            },
                            "text_type": {
                              "type": "string",
                              "enum": [
                                "subtitles"
                              ],
                              "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                            },
                            "language_code": {
                              "type": "string",
                              "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                            },
                            "closed_captions": {
                              "type": "boolean",
                              "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                            }
                          }
                        }
                      },
                      "playback_policy": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "deprecated": true,
                        "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                        "x-mux-doc-decorators-hidden-children": "all"
                      },
                      "playback_policies": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "public",
                            "signed",
                            "drm"
                          ],
                          "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                        },
                        "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                      },
                      "advanced_playback_policies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policy": {
                              "type": "string",
                              "enum": [
                                "public",
                                "signed",
                                "drm"
                              ],
                              "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                            },
                            "drm_configuration_id": {
                              "type": "string",
                              "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                            }
                          }
                        },
                        "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                      },
                      "per_title_encode": {
                        "type": "boolean",
                        "format": "boolean",
                        "x-mux-doc-decorators": [
                          "hidden"
                        ],
                        "deprecated": true
                      },
                      "passthrough": {
                        "type": "string",
                        "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                      },
                      "mp4_support": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                          "none",
                          "standard",
                          "capped-1080p",
                          "audio-only",
                          "audio-only,capped-1080p"
                        ],
                        "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                        "x-mux-doc-decorators-deprecated-enum-values": [
                          "standard"
                        ]
                      },
                      "normalize_audio": {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                        "default": false
                      },
                      "master_access": {
                        "type": "string",
                        "enum": [
                          "none",
                          "temporary"
                        ],
                        "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                      },
                      "test": {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                      },
                      "max_resolution_tier": {
                        "type": "string",
                        "enum": [
                          "1080p",
                          "1440p",
                          "2160p"
                        ],
                        "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                      },
                      "encoding_tier": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                          "smart",
                          "baseline",
                          "premium"
                        ],
                        "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                      },
                      "video_quality": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "plus",
                          "premium"
                        ],
                        "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                      },
                      "static_renditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-required": [
                            "resolution"
                          ],
                          "properties": {
                            "resolution": {
                              "type": "string",
                              "enum": [
                                "highest",
                                "audio-only",
                                "2160p",
                                "1440p",
                                "1080p",
                                "720p",
                                "540p",
                                "480p",
                                "360p",
                                "270p"
                              ],
                              "x-mux-doc-decorators-hidden-enum-values": [
                                "2160p",
                                "1440p",
                                "1080p",
                                "720p",
                                "540p",
                                "480p",
                                "360p",
                                "270p"
                              ]
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                            }
                          }
                        },
                        "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                      },
                      "meta": {
                        "type": "object",
                        "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maxLength": 512,
                            "description": "The asset title. Max 512 code points."
                          },
                          "creator_id": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                          },
                          "external_id": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                          }
                        }
                      }
                    }
                  },
                  "test": {
                    "type": "boolean",
                    "format": "boolean",
                    "description": "Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."
                  }
                }
              },
              "example": {
                "cors_origin": "https://example.com/",
                "new_asset_settings": {
                  "playback_policies": [
                    "public"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Direct Uploads"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "url",
                        "timeout",
                        "status",
                        "cors_origin"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Direct Upload."
                        },
                        "timeout": {
                          "type": "integer",
                          "format": "int32",
                          "default": 3600,
                          "minimum": 60,
                          "maximum": 604800,
                          "description": "Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "waiting",
                            "asset_created",
                            "errored",
                            "cancelled",
                            "timed_out"
                          ]
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "asset_id": {
                          "type": "string",
                          "description": "Only set once the upload is in the `asset_created` state."
                        },
                        "error": {
                          "type": "object",
                          "description": "Only set if an error occurred during asset creation.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Label for the specific error"
                            },
                            "message": {
                              "type": "string",
                              "description": "Human readable error message"
                            }
                          }
                        },
                        "cors_origin": {
                          "type": "string",
                          "description": "If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL to upload the associated source media to."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "url": "https://storage.googleapis.com/video-storage-us-east1-uploads/zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc?Expires=1610112458&GoogleAccessId=mux-direct-upload%40mux-cloud.iam.gserviceaccount.com&Signature=LCu4PMoKUo%2BJkWQAUwB9WU4bWVVfW3K5bZxSxEptBz3DrjbFxNyGvs0sriyJupZh9Jdb6FxKWFIRbxEetfnAAiesOvSPH%2F1GlIichmGg3YfebfxiX77%2B6ToFF6FMkJucBo284PD90AVLHhKagOea2VsbdO0fh78MAxGH9sEspyQ2uJEfYWjHFqYQ9smJyIuM3CYOmN5HKPgRWy2yUqzV7OTMe%2FivPO4%2FX6XiiN2J4nTmy83252CJUsHIvbiGctfKxcNI6b23UVN4B1tJTVgyxTOZiBQCkMLkD%2FEe5OhoAkvJgkqENRr0q3swO0IChDDWjrh7OTMwqvWGwAoVXEGiHg%3D%3D&upload_id=ABg5-UznTdib1HhOAMjdHhWIYqBbwmSYM6dVKyPe3v33uTeEE8gkN5QzvR3cei6uSZOSrjPn7bdvvDH3nhsrLBq8AjWY2qE4UQ",
                    "timeout": 3600,
                    "status": "waiting",
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ],
                      "video_quality": "basic"
                    },
                    "id": "zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc",
                    "cors_origin": "https://example.com/"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-direct-uploads",
        "description": "Lists direct uploads in the current environment.",
        "summary": "List direct uploads",
        "tags": [
          "Direct Uploads"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-required": [
                          "id",
                          "url",
                          "timeout",
                          "status",
                          "cors_origin"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the Direct Upload."
                          },
                          "timeout": {
                            "type": "integer",
                            "format": "int32",
                            "default": 3600,
                            "minimum": 60,
                            "maximum": 604800,
                            "description": "Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "waiting",
                              "asset_created",
                              "errored",
                              "cancelled",
                              "timed_out"
                            ]
                          },
                          "new_asset_settings": {
                            "type": "object",
                            "properties": {
                              "input": {
                                "type": "array",
                                "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                                "deprecated": true,
                                "x-mux-doc-decorators-hidden-children": "all",
                                "items": {
                                  "type": "object",
                                  "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                    },
                                    "overlay_settings": {
                                      "type": "object",
                                      "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                      "properties": {
                                        "vertical_align": {
                                          "type": "string",
                                          "enum": [
                                            "top",
                                            "middle",
                                            "bottom"
                                          ],
                                          "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                        },
                                        "vertical_margin": {
                                          "type": "string",
                                          "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                        },
                                        "horizontal_align": {
                                          "type": "string",
                                          "enum": [
                                            "left",
                                            "center",
                                            "right"
                                          ],
                                          "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                        },
                                        "horizontal_margin": {
                                          "type": "string",
                                          "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                        },
                                        "width": {
                                          "type": "string",
                                          "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                        },
                                        "height": {
                                          "type": "string",
                                          "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                        },
                                        "opacity": {
                                          "type": "string",
                                          "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                        }
                                      }
                                    },
                                    "generated_subtitles": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "A name for this subtitle track."
                                          },
                                          "passthrough": {
                                            "type": "string",
                                            "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                          },
                                          "language_code": {
                                            "type": "string",
                                            "description": "The language to generate subtitles in.",
                                            "default": "en",
                                            "enum": [
                                              "en",
                                              "es",
                                              "it",
                                              "pt",
                                              "de",
                                              "fr",
                                              "pl",
                                              "ru",
                                              "nl",
                                              "ca",
                                              "tr",
                                              "sv",
                                              "uk",
                                              "no",
                                              "fi",
                                              "sk",
                                              "el",
                                              "cs",
                                              "hr",
                                              "da",
                                              "ro",
                                              "bg"
                                            ]
                                          }
                                        }
                                      },
                                      "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                    },
                                    "start_time": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                    },
                                    "end_time": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "video",
                                        "audio",
                                        "text"
                                      ],
                                      "description": "This parameter is required for `text` type tracks."
                                    },
                                    "text_type": {
                                      "type": "string",
                                      "enum": [
                                        "subtitles"
                                      ],
                                      "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                    },
                                    "language_code": {
                                      "type": "string",
                                      "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                    },
                                    "closed_captions": {
                                      "type": "boolean",
                                      "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                    },
                                    "passthrough": {
                                      "type": "string",
                                      "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                    }
                                  }
                                }
                              },
                              "inputs": {
                                "type": "array",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "items": {
                                  "type": "object",
                                  "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                    },
                                    "overlay_settings": {
                                      "type": "object",
                                      "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                      "properties": {
                                        "vertical_align": {
                                          "type": "string",
                                          "enum": [
                                            "top",
                                            "middle",
                                            "bottom"
                                          ],
                                          "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                        },
                                        "vertical_margin": {
                                          "type": "string",
                                          "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                        },
                                        "horizontal_align": {
                                          "type": "string",
                                          "enum": [
                                            "left",
                                            "center",
                                            "right"
                                          ],
                                          "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                        },
                                        "horizontal_margin": {
                                          "type": "string",
                                          "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                        },
                                        "width": {
                                          "type": "string",
                                          "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                        },
                                        "height": {
                                          "type": "string",
                                          "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                        },
                                        "opacity": {
                                          "type": "string",
                                          "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                        }
                                      }
                                    },
                                    "generated_subtitles": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "A name for this subtitle track."
                                          },
                                          "passthrough": {
                                            "type": "string",
                                            "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                          },
                                          "language_code": {
                                            "type": "string",
                                            "description": "The language to generate subtitles in.",
                                            "default": "en",
                                            "enum": [
                                              "en",
                                              "es",
                                              "it",
                                              "pt",
                                              "de",
                                              "fr",
                                              "pl",
                                              "ru",
                                              "nl",
                                              "ca",
                                              "tr",
                                              "sv",
                                              "uk",
                                              "no",
                                              "fi",
                                              "sk",
                                              "el",
                                              "cs",
                                              "hr",
                                              "da",
                                              "ro",
                                              "bg"
                                            ]
                                          }
                                        }
                                      },
                                      "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                    },
                                    "start_time": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                    },
                                    "end_time": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "video",
                                        "audio",
                                        "text"
                                      ],
                                      "description": "This parameter is required for `text` type tracks."
                                    },
                                    "text_type": {
                                      "type": "string",
                                      "enum": [
                                        "subtitles"
                                      ],
                                      "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                    },
                                    "language_code": {
                                      "type": "string",
                                      "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                    },
                                    "closed_captions": {
                                      "type": "boolean",
                                      "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                    },
                                    "passthrough": {
                                      "type": "string",
                                      "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                    }
                                  }
                                }
                              },
                              "playback_policy": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "public",
                                    "signed",
                                    "drm"
                                  ],
                                  "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                },
                                "deprecated": true,
                                "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                                "x-mux-doc-decorators-hidden-children": "all"
                              },
                              "playback_policies": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "public",
                                    "signed",
                                    "drm"
                                  ],
                                  "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                },
                                "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                              },
                              "advanced_playback_policies": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "policy": {
                                      "type": "string",
                                      "enum": [
                                        "public",
                                        "signed",
                                        "drm"
                                      ],
                                      "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                    },
                                    "drm_configuration_id": {
                                      "type": "string",
                                      "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                    }
                                  }
                                },
                                "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                              },
                              "per_title_encode": {
                                "type": "boolean",
                                "format": "boolean",
                                "x-mux-doc-decorators": [
                                  "hidden"
                                ],
                                "deprecated": true
                              },
                              "passthrough": {
                                "type": "string",
                                "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                              },
                              "mp4_support": {
                                "type": "string",
                                "deprecated": true,
                                "enum": [
                                  "none",
                                  "standard",
                                  "capped-1080p",
                                  "audio-only",
                                  "audio-only,capped-1080p"
                                ],
                                "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                                "x-mux-doc-decorators-deprecated-enum-values": [
                                  "standard"
                                ]
                              },
                              "normalize_audio": {
                                "type": "boolean",
                                "format": "boolean",
                                "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                                "default": false
                              },
                              "master_access": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "temporary"
                                ],
                                "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                              },
                              "test": {
                                "type": "boolean",
                                "format": "boolean",
                                "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                              },
                              "max_resolution_tier": {
                                "type": "string",
                                "enum": [
                                  "1080p",
                                  "1440p",
                                  "2160p"
                                ],
                                "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                              },
                              "encoding_tier": {
                                "type": "string",
                                "deprecated": true,
                                "enum": [
                                  "smart",
                                  "baseline",
                                  "premium"
                                ],
                                "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                              },
                              "video_quality": {
                                "type": "string",
                                "enum": [
                                  "basic",
                                  "plus",
                                  "premium"
                                ],
                                "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                              },
                              "static_renditions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "x-required": [
                                    "resolution"
                                  ],
                                  "properties": {
                                    "resolution": {
                                      "type": "string",
                                      "enum": [
                                        "highest",
                                        "audio-only",
                                        "2160p",
                                        "1440p",
                                        "1080p",
                                        "720p",
                                        "540p",
                                        "480p",
                                        "360p",
                                        "270p"
                                      ],
                                      "x-mux-doc-decorators-hidden-enum-values": [
                                        "2160p",
                                        "1440p",
                                        "1080p",
                                        "720p",
                                        "540p",
                                        "480p",
                                        "360p",
                                        "270p"
                                      ]
                                    },
                                    "passthrough": {
                                      "type": "string",
                                      "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                    }
                                  }
                                },
                                "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                              },
                              "meta": {
                                "type": "object",
                                "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                                "properties": {
                                  "title": {
                                    "type": "string",
                                    "maxLength": 512,
                                    "description": "The asset title. Max 512 code points."
                                  },
                                  "creator_id": {
                                    "type": "string",
                                    "maxLength": 128,
                                    "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "maxLength": 128,
                                    "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                  }
                                }
                              }
                            }
                          },
                          "asset_id": {
                            "type": "string",
                            "description": "Only set once the upload is in the `asset_created` state."
                          },
                          "error": {
                            "type": "object",
                            "description": "Only set if an error occurred during asset creation.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Label for the specific error"
                              },
                              "message": {
                                "type": "string",
                                "description": "Human readable error message"
                              }
                            }
                          },
                          "cors_origin": {
                            "type": "string",
                            "description": "If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL to upload the associated source media to."
                          },
                          "test": {
                            "type": "boolean",
                            "format": "boolean",
                            "description": "Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "url": "https://storage.googleapis.com/video-storage-us-east1-uploads/zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc?Expires=1610112458&GoogleAccessId=mux-direct-upload%40mux-cloud.iam.gserviceaccount.com&Signature=LCu4PMoKUo%2BJkWQAUwB9WU4bWVVfW3K5bZxSxEptBz3DrjbFxNyGvs0sriyJupZh9Jdb6FxKWFIRbxEetfnAAiesOvSPH%2F1GlIichmGg3YfebfxiX77%2B6ToFF6FMkJucBo284PD90AVLHhKagOea2VsbdO0fh78MAxGH9sEspyQ2uJEfYWjHFqYQ9smJyIuM3CYOmN5HKPgRWy2yUqzV7OTMe%2FivPO4%2FX6XiiN2J4nTmy83252CJUsHIvbiGctfKxcNI6b23UVN4B1tJTVgyxTOZiBQCkMLkD%2FEe5OhoAkvJgkqENRr0q3swO0IChDDWjrh7OTMwqvWGwAoVXEGiHg%3D%3D&upload_id=ABg5-UznTdib1HhOAMjdHhWIYqBbwmSYM6dVKyPe3v33uTeEE8gkN5QzvR3cei6uSZOSrjPn7bdvvDH3nhsrLBq8AjWY2qE4UQ",
                      "timeout": 3600,
                      "status": "waiting",
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ],
                        "video_quality": "basic"
                      },
                      "id": "zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc",
                      "cors_origin": "https://example.com/"
                    },
                    {
                      "timeout": 3600,
                      "status": "asset_created",
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ],
                        "video_quality": "basic"
                      },
                      "id": "YzoCL01HHOtAVYq4Ds9zekdHJ2XqL9e8ukPWbr01KhtvM",
                      "asset_id": "AnFVqAVXfb7vVL3ypSQDMnJZunnb8nkwe02O00p2gK8P00"
                    },
                    {
                      "timeout": 10800,
                      "status": "cancelled",
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ],
                        "video_quality": "basic"
                      },
                      "id": "AZcWu0201SqVW01LMdmVxE00m3gEWUFZPItvni1sTqF800dQ"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/uploads/{UPLOAD_ID}": {
      "get": {
        "operationId": "get-direct-upload",
        "description": "Fetches information about a single direct upload in the current environment.",
        "summary": "Retrieve a single direct upload's info",
        "tags": [
          "Direct Uploads"
        ],
        "parameters": [
          {
            "name": "UPLOAD_ID",
            "in": "path",
            "description": "ID of the Upload",
            "required": true,
            "example": "abcd1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "url",
                        "timeout",
                        "status",
                        "cors_origin"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Direct Upload."
                        },
                        "timeout": {
                          "type": "integer",
                          "format": "int32",
                          "default": 3600,
                          "minimum": 60,
                          "maximum": 604800,
                          "description": "Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "waiting",
                            "asset_created",
                            "errored",
                            "cancelled",
                            "timed_out"
                          ]
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "asset_id": {
                          "type": "string",
                          "description": "Only set once the upload is in the `asset_created` state."
                        },
                        "error": {
                          "type": "object",
                          "description": "Only set if an error occurred during asset creation.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Label for the specific error"
                            },
                            "message": {
                              "type": "string",
                              "description": "Human readable error message"
                            }
                          }
                        },
                        "cors_origin": {
                          "type": "string",
                          "description": "If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL to upload the associated source media to."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "timeout": 3600,
                    "status": "asset_created",
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ],
                      "video_quality": "basic"
                    },
                    "id": "YzoCL01HHOtAVYq4Ds9zekdHJ2XqL9e8ukPWbr01KhtvM",
                    "asset_id": "AnFVqAVXfb7vVL3ypSQDMnJZunnb8nkwe02O00p2gK8P00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/uploads/{UPLOAD_ID}/cancel": {
      "put": {
        "operationId": "cancel-direct-upload",
        "summary": "Cancel a direct upload",
        "description": "Cancels a direct upload and marks it as cancelled. If a pending upload finishes after this\nrequest, no asset will be created. This request will only succeed if the upload is still in\nthe `waiting` state.\n",
        "tags": [
          "Direct Uploads"
        ],
        "parameters": [
          {
            "name": "UPLOAD_ID",
            "in": "path",
            "description": "ID of the Upload",
            "required": true,
            "example": "abcd1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "url",
                        "timeout",
                        "status",
                        "cors_origin"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Direct Upload."
                        },
                        "timeout": {
                          "type": "integer",
                          "format": "int32",
                          "default": 3600,
                          "minimum": 60,
                          "maximum": 604800,
                          "description": "Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "waiting",
                            "asset_created",
                            "errored",
                            "cancelled",
                            "timed_out"
                          ]
                        },
                        "new_asset_settings": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "array",
                              "description": "Deprecated. Use `inputs` instead, which accepts an identical type.",
                              "deprecated": true,
                              "x-mux-doc-decorators-hidden-children": "all",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "inputs": {
                              "type": "array",
                              "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                              "items": {
                                "type": "object",
                                "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the file that Mux should download and use.\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](mdc:https:/docs.mux.com/guides/minimize-processing-time).\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](mdc:https:/en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](mdc:https:/www.w3.org/TR/webvtt1) formats for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\n"
                                  },
                                  "overlay_settings": {
                                    "type": "object",
                                    "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
                                    "properties": {
                                      "vertical_align": {
                                        "type": "string",
                                        "enum": [
                                          "top",
                                          "middle",
                                          "bottom"
                                        ],
                                        "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
                                      },
                                      "vertical_margin": {
                                        "type": "string",
                                        "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
                                      },
                                      "horizontal_align": {
                                        "type": "string",
                                        "enum": [
                                          "left",
                                          "center",
                                          "right"
                                        ],
                                        "description": "Where the horizontal positioning of the overlay/watermark should begin from."
                                      },
                                      "horizontal_margin": {
                                        "type": "string",
                                        "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
                                      },
                                      "width": {
                                        "type": "string",
                                        "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
                                      },
                                      "height": {
                                        "type": "string",
                                        "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
                                      },
                                      "opacity": {
                                        "type": "string",
                                        "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
                                      }
                                    }
                                  },
                                  "generated_subtitles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "A name for this subtitle track."
                                        },
                                        "passthrough": {
                                          "type": "string",
                                          "description": "Arbitrary metadata set for the subtitle track. Max 255 characters."
                                        },
                                        "language_code": {
                                          "type": "string",
                                          "description": "The language to generate subtitles in.",
                                          "default": "en",
                                          "enum": [
                                            "en",
                                            "es",
                                            "it",
                                            "pt",
                                            "de",
                                            "fr",
                                            "pl",
                                            "ru",
                                            "nl",
                                            "ca",
                                            "tr",
                                            "sv",
                                            "uk",
                                            "no",
                                            "fi",
                                            "sk",
                                            "el",
                                            "cs",
                                            "hr",
                                            "da",
                                            "ro",
                                            "bg"
                                          ]
                                        }
                                      }
                                    },
                                    "description": "Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."
                                  },
                                  "start_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "end_time": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "video",
                                      "audio",
                                      "text"
                                    ],
                                    "description": "This parameter is required for `text` type tracks."
                                  },
                                  "text_type": {
                                    "type": "string",
                                    "enum": [
                                      "subtitles"
                                    ],
                                    "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](mdc:https:/mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags). This parameter is required for `text` type tracks."
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "The language code value must be a valid [BCP 47](mdc:https:/tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
                                  },
                                  "closed_captions": {
                                    "type": "boolean",
                                    "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."
                                  }
                                }
                              }
                            },
                            "playback_policy": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "deprecated": true,
                              "description": "Deprecated. Use `playback_policies` instead, which accepts an identical type.",
                              "x-mux-doc-decorators-hidden-children": "all"
                            },
                            "playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "public",
                                  "signed",
                                  "drm"
                                ],
                                "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                              },
                              "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include:\n\n* `\"public\"` (anyone with the playback URL can stream the asset).\n* `\"signed\"` (an additional access token is required to play the asset).\n\nIf no `playback_policies` are set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.\n"
                            },
                            "advanced_playback_policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "policy": {
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "signed",
                                      "drm"
                                    ],
                                    "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](mdc:https:/docs.mux.com/guides/secure-video-playback) for details about creating tokens.\n\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](mdc:https:/docs.mux.com/guides/protect-videos-with-drm).\n"
                                  },
                                  "drm_configuration_id": {
                                    "type": "string",
                                    "description": "The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."
                                  }
                                }
                              },
                              "description": "An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policies` when creating a DRM playback ID.\n"
                            },
                            "per_title_encode": {
                              "type": "boolean",
                              "format": "boolean",
                              "x-mux-doc-decorators": [
                                "hidden"
                              ],
                              "deprecated": true
                            },
                            "passthrough": {
                              "type": "string",
                              "description": "You can set this field to anything you want. It will be included in the asset details and related webhooks. If you're looking for more structured metadata, such as `title` or `external_id`, you can use the `meta` object instead. **Max: 255 characters**."
                            },
                            "mp4_support": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "none",
                                "standard",
                                "capped-1080p",
                                "audio-only",
                                "audio-only,capped-1080p"
                              ],
                              "description": "Deprecated. See the [Static Renditions API](mdc:https:/www.mux.com/docs/guides/enable-static-mp4-renditions) for the updated API.\n\nSpecify what level of support for mp4 playback. You may not enable both `mp4_support` and  `static_renditions`.\n\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\n\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\n\nMP4 files are not produced for `none` (default).\n\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information.\n",
                              "x-mux-doc-decorators-deprecated-enum-values": [
                                "standard"
                              ]
                            },
                            "normalize_audio": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
                              "default": false
                            },
                            "master_access": {
                              "type": "string",
                              "enum": [
                                "none",
                                "temporary"
                              ],
                              "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](mdc:https:/docs.mux.com/guides/enable-static-mp4-renditions) for more information."
                            },
                            "test": {
                              "type": "boolean",
                              "format": "boolean",
                              "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
                            },
                            "max_resolution_tier": {
                              "type": "string",
                              "enum": [
                                "1080p",
                                "1440p",
                                "2160p"
                              ],
                              "description": "Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."
                            },
                            "encoding_tier": {
                              "type": "string",
                              "deprecated": true,
                              "enum": [
                                "smart",
                                "baseline",
                                "premium"
                              ],
                              "description": "This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "video_quality": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "plus",
                                "premium"
                              ],
                              "description": "The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                            },
                            "static_renditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-required": [
                                  "resolution"
                                ],
                                "properties": {
                                  "resolution": {
                                    "type": "string",
                                    "enum": [
                                      "highest",
                                      "audio-only",
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ],
                                    "x-mux-doc-decorators-hidden-enum-values": [
                                      "2160p",
                                      "1440p",
                                      "1080p",
                                      "720p",
                                      "540p",
                                      "480p",
                                      "360p",
                                      "270p"
                                    ]
                                  },
                                  "passthrough": {
                                    "type": "string",
                                    "description": "Arbitrary user-supplied metadata set for the static rendition. Max 255 characters."
                                  }
                                }
                              },
                              "description": "An array of static renditions to create for this asset. You may not enable both `static_renditions` and `mp4_support (the latter being deprecated)`"
                            },
                            "meta": {
                              "type": "object",
                              "description": "Customer provided metadata about this asset.\n\nNote: This metadata may be publicly available via the video player. Do not include PII or sensitive information.\n",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "maxLength": 512,
                                  "description": "The asset title. Max 512 code points."
                                },
                                "creator_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to keep track of the creator of the asset. Max 128 code points."
                                },
                                "external_id": {
                                  "type": "string",
                                  "maxLength": 128,
                                  "description": "This is an identifier you provide to link the asset to your own data. Max 128 code points."
                                }
                              }
                            }
                          }
                        },
                        "asset_id": {
                          "type": "string",
                          "description": "Only set once the upload is in the `asset_created` state."
                        },
                        "error": {
                          "type": "object",
                          "description": "Only set if an error occurred during asset creation.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Label for the specific error"
                            },
                            "message": {
                              "type": "string",
                              "description": "Human readable error message"
                            }
                          }
                        },
                        "cors_origin": {
                          "type": "string",
                          "description": "If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL to upload the associated source media to."
                        },
                        "test": {
                          "type": "boolean",
                          "format": "boolean",
                          "description": "Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "timeout": 3600,
                    "status": "cancelled",
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ],
                      "video_quality": "basic"
                    },
                    "id": "zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc",
                    "cors_origin": "https://example.com/"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Cancellation no longer possible"
          }
        }
      }
    },
    "/video/v1/delivery-usage": {
      "get": {
        "tags": [
          "Delivery Usage"
        ],
        "summary": "List Usage",
        "description": "Returns a list of delivery usage records and their associated Asset IDs or Live Stream IDs.",
        "operationId": "list-delivery-usage",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "Filter response to return delivery usage for this asset only. You cannot specify both the `asset_id` and `live_stream_id` parameters together.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "live_stream_id",
            "in": "query",
            "description": "Filter response to return delivery usage for assets for this live stream. You cannot specify both the `asset_id` and `live_stream_id` parameters together.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeframe[]",
            "in": "query",
            "description": "Time window to get delivery usage information. timeframe[0] indicates the start time, timeframe[1] indicates the end time in seconds since the Unix epoch. Default time window is 1 hour representing usage from 13th to 12th hour from when the request is made.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data",
                    "timeframe",
                    "page",
                    "limit",
                    "total_row_count"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-required": [
                          "asset_id",
                          "asset_state",
                          "asset_resolution_tier",
                          "asset_encoding_tier",
                          "asset_duration",
                          "created_at",
                          "delivered_seconds",
                          "delivered_seconds_by_resolution"
                        ],
                        "properties": {
                          "live_stream_id": {
                            "type": "string",
                            "description": "Unique identifier for the live stream that created the asset."
                          },
                          "asset_id": {
                            "type": "string",
                            "description": "Unique identifier for the asset."
                          },
                          "passthrough": {
                            "type": "string",
                            "description": "The `passthrough` value for the asset."
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Time at which the asset was created. Measured in seconds since the Unix epoch."
                          },
                          "deleted_at": {
                            "type": "string",
                            "description": "If exists, time at which the asset was deleted. Measured in seconds since the Unix epoch."
                          },
                          "asset_state": {
                            "type": "string",
                            "enum": [
                              "ready",
                              "errored",
                              "deleted"
                            ],
                            "description": "The state of the asset."
                          },
                          "asset_duration": {
                            "type": "number",
                            "format": "double",
                            "description": "The duration of the asset in seconds."
                          },
                          "asset_resolution_tier": {
                            "type": "string",
                            "enum": [
                              "audio-only",
                              "720p",
                              "1080p",
                              "1440p",
                              "2160p"
                            ],
                            "description": "The resolution tier that the asset was ingested at, affecting billing for ingest & storage"
                          },
                          "asset_encoding_tier": {
                            "type": "string",
                            "deprecated": true,
                            "enum": [
                              "smart",
                              "baseline",
                              "premium"
                            ],
                            "description": "This field is deprecated. Please use `asset_video_quality` instead. The encoding tier that the asset was ingested at. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                          },
                          "asset_video_quality": {
                            "type": "string",
                            "enum": [
                              "basic",
                              "plus",
                              "premium"
                            ],
                            "description": "The video quality that the asset was ingested at. This field replaces `asset_encoding_tier`. [See the video quality guide for more details.](mdc:https:/docs.mux.com/guides/use-video-quality-levels)"
                          },
                          "delivered_seconds": {
                            "type": "number",
                            "format": "double",
                            "description": "Total number of delivered seconds during this time window."
                          },
                          "delivered_seconds_by_resolution": {
                            "type": "object",
                            "description": "Seconds delivered broken into resolution tiers. Each tier will only be displayed if there was content delivered in the tier.",
                            "properties": {
                              "tier_2160p": {
                                "type": "number",
                                "format": "double",
                                "description": "Total number of delivered seconds during this time window that had a resolution larger than the 1440p tier (over 4,194,304 pixels total)."
                              },
                              "tier_1440p": {
                                "type": "number",
                                "format": "double",
                                "description": "Total number of delivered seconds during this time window that had a resolution larger than the 1080p tier but less than or equal to the 2160p tier (over 2,073,600 and <= 4,194,304 pixels total)."
                              },
                              "tier_1080p": {
                                "type": "number",
                                "format": "double",
                                "description": "Total number of delivered seconds during this time window that had a resolution larger than the 720p tier but less than or equal to the 1440p tier (over 921,600 and <= 2,073,600 pixels total)."
                              },
                              "tier_720p": {
                                "type": "number",
                                "format": "double",
                                "description": "Total number of delivered seconds during this time window that had a resolution within the 720p tier (up to 921,600 pixels total, based on typical 1280x720)."
                              },
                              "tier_audio_only": {
                                "type": "number",
                                "format": "double",
                                "description": "Total number of delivered seconds during this time window that had a resolution of audio only."
                              }
                            }
                          }
                        }
                      }
                    },
                    "total_row_count": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "timeframe": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "limit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of assets returned in this response. Default value is 100."
                    }
                  }
                },
                "example": {
                  "total_row_count": 2,
                  "timeframe": [
                    1607817600,
                    1607990400
                  ],
                  "page": 1,
                  "limit": 100,
                  "data": [
                    {
                      "live_stream_id": "B65hEUWW01ErVKDDGImKcBquYhwEAkjW6Ic3lPY0299Cc",
                      "delivered_seconds": 206.366667,
                      "delivered_seconds_by_resolution": {
                        "tier_1080p": 100,
                        "tier_720p": 100,
                        "tier_audio_only": 6.366667
                      },
                      "deleted_at": "1607945257",
                      "created_at": "1607939184",
                      "asset_state": "deleted",
                      "asset_id": "Ww4v2q2H4MNbHIAM2wApKb3cmrh7eHjGLUjdKohR5wM",
                      "asset_duration": 154.366667,
                      "asset_resolution_tier": "1080p",
                      "asset_encoding_tier": "baseline",
                      "asset_video_quality": "basic"
                    },
                    {
                      "delivered_seconds": 30,
                      "delivered_seconds_by_resolution": {
                        "tier_1080p": 10,
                        "tier_720p": 10,
                        "tier_audio_only": 10
                      },
                      "deleted_at": "1607935288",
                      "created_at": "1607617107",
                      "asset_state": "deleted",
                      "asset_id": "Qlb007on1TwN43XLIG027QJlUxm3jd01v5PRi1aXhnyFZY",
                      "asset_duration": 98.773667,
                      "asset_resolution_tier": "1080p",
                      "asset_encoding_tier": "smart",
                      "asset_video_quality": "plus"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-restrictions": {
      "post": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Create a Playback Restriction",
        "description": "Create a new Playback Restriction.",
        "operationId": "create-playback-restriction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "referrer",
                  "user_agent"
                ],
                "properties": {
                  "referrer": {
                    "type": "object",
                    "description": "A list of domains allowed to play your videos.",
                    "x-required": [
                      "allowed_domains"
                    ],
                    "properties": {
                      "allowed_domains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains allowed to play videos. Possible values are\n  * `[]` Empty Array indicates deny video playback requests for all domains\n  * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain\n  * `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards\n"
                      },
                      "allow_no_referrer": {
                        "type": "boolean",
                        "default": false,
                        "description": "A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests."
                      }
                    }
                  },
                  "user_agent": {
                    "type": "object",
                    "description": "Rules that control what user agents are allowed to play your videos. Please see [Using User-Agent HTTP header for validation](mdc:https:/docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation) for more details on this feature.",
                    "properties": {
                      "allow_no_user_agent": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to allow views without a `User-Agent` HTTP request header."
                      },
                      "allow_high_risk_user_agent": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to allow high risk user agents. The high risk user agents are defined by Mux."
                      }
                    }
                  }
                }
              },
              "example": {
                "referrer": {
                  "allowed_domains": [
                    "*.example.com"
                  ],
                  "allow_no_referrer": true
                },
                "user_agent": {
                  "allow_no_user_agent": false,
                  "allow_high_risk_user_agent": false
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "referrer",
                        "user_agent",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Playback Restriction. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "referrer": {
                          "type": "object",
                          "description": "A list of domains allowed to play your videos.",
                          "properties": {
                            "allowed_domains": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of domains allowed to play videos. Possible values are\n  * `[]` Empty Array indicates deny video playback requests for all domains\n  * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain\n  * `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards\n"
                            },
                            "allow_no_referrer": {
                              "type": "boolean",
                              "default": false,
                              "description": "A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests."
                            }
                          }
                        },
                        "user_agent": {
                          "type": "object",
                          "description": "Rules that control what user agents are allowed to play your videos. Please see [Using User-Agent HTTP header for validation](mdc:https:/docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation) for more details on this feature.",
                          "properties": {
                            "allow_no_user_agent": {
                              "type": "boolean",
                              "default": true,
                              "description": "Whether or not to allow views without a `User-Agent` HTTP request header."
                            },
                            "allow_high_risk_user_agent": {
                              "type": "boolean",
                              "default": true,
                              "description": "Whether or not to allow high risk user agents. The high risk user agents are defined by Mux."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                    "updated_at": "1607945257",
                    "created_at": "1607945257",
                    "referrer": {
                      "allowed_domains": [
                        "*.example.com"
                      ],
                      "allow_no_referrer": true
                    },
                    "user_agent": {
                      "allow_no_user_agent": false,
                      "allow_high_risk_user_agent": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "List Playback Restrictions",
        "description": "Returns a list of all Playback Restrictions.",
        "operationId": "list-playback-restrictions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-required": [
                          "id",
                          "referrer",
                          "user_agent",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the Playback Restriction. Max 255 characters."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "int64",
                            "description": "Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch)."
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "int64",
                            "description": "Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch)."
                          },
                          "referrer": {
                            "type": "object",
                            "description": "A list of domains allowed to play your videos.",
                            "properties": {
                              "allowed_domains": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of domains allowed to play videos. Possible values are\n  * `[]` Empty Array indicates deny video playback requests for all domains\n  * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain\n  * `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards\n"
                              },
                              "allow_no_referrer": {
                                "type": "boolean",
                                "default": false,
                                "description": "A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests."
                              }
                            }
                          },
                          "user_agent": {
                            "type": "object",
                            "description": "Rules that control what user agents are allowed to play your videos. Please see [Using User-Agent HTTP header for validation](mdc:https:/docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation) for more details on this feature.",
                            "properties": {
                              "allow_no_user_agent": {
                                "type": "boolean",
                                "default": true,
                                "description": "Whether or not to allow views without a `User-Agent` HTTP request header."
                              },
                              "allow_high_risk_user_agent": {
                                "type": "boolean",
                                "default": true,
                                "description": "Whether or not to allow high risk user agents. The high risk user agents are defined by Mux."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "total_row_count": 2,
                  "page": 1,
                  "limit": 100,
                  "data": [
                    {
                      "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                      "updated_at": "1607945257",
                      "created_at": "1607939184",
                      "referrer": {
                        "allowed_domains": [
                          "*.example.com"
                        ],
                        "allow_no_referrer": false
                      },
                      "user_agent": {
                        "allow_no_user_agent": false,
                        "allow_high_risk_user_agent": false
                      }
                    },
                    {
                      "id": "012uTQqPygDYWz3jey8cyOX9n01Bd5SDH1",
                      "updated_at": "1607945980",
                      "created_at": "1607939188",
                      "referrer": {
                        "allowed_domains": [
                          "a.example.com",
                          "b.example.com"
                        ],
                        "allow_no_referrer": true
                      },
                      "user_agent": {
                        "allow_no_user_agent": false,
                        "allow_high_risk_user_agent": false
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}": {
      "delete": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Delete a Playback Restriction",
        "description": "Deletes a single Playback Restriction.",
        "operationId": "delete-playback-restriction",
        "parameters": [
          {
            "name": "PLAYBACK_RESTRICTION_ID",
            "in": "path",
            "description": "ID of the Playback Restriction.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Retrieve a Playback Restriction",
        "description": "Retrieves a Playback Restriction associated with the unique identifier.",
        "operationId": "get-playback-restriction",
        "parameters": [
          {
            "name": "PLAYBACK_RESTRICTION_ID",
            "in": "path",
            "description": "ID of the Playback Restriction.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "referrer",
                        "user_agent",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Playback Restriction. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "referrer": {
                          "type": "object",
                          "description": "A list of domains allowed to play your videos.",
                          "properties": {
                            "allowed_domains": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of domains allowed to play videos. Possible values are\n  * `[]` Empty Array indicates deny video playback requests for all domains\n  * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain\n  * `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards\n"
                            },
                            "allow_no_referrer": {
                              "type": "boolean",
                              "default": false,
                              "description": "A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests."
                            }
                          }
                        },
                        "user_agent": {
                          "type": "object",
                          "description": "Rules that control what user agents are allowed to play your videos. Please see [Using User-Agent HTTP header for validation](mdc:https:/docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation) for more details on this feature.",
                          "properties": {
                            "allow_no_user_agent": {
                              "type": "boolean",
                              "default": true,
                              "description": "Whether or not to allow views without a `User-Agent` HTTP request header."
                            },
                            "allow_high_risk_user_agent": {
                              "type": "boolean",
                              "default": true,
                              "description": "Whether or not to allow high risk user agents. The high risk user agents are defined by Mux."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                    "updated_at": "1607945257",
                    "created_at": "1607939184",
                    "referrer": {
                      "allowed_domains": [
                        "*.example.com"
                      ],
                      "allow_no_referrer": false
                    },
                    "user_agent": {
                      "allow_no_user_agent": false,
                      "allow_high_risk_user_agent": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}/referrer": {
      "put": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Update the Referrer Playback Restriction",
        "description": "Allows you to modify the list of domains or change how Mux validates playback requests without the `Referer` HTTP header. The Referrer restriction fully replaces the old list with this new list of domains.",
        "operationId": "update-referrer-domain-restriction",
        "parameters": [
          {
            "name": "PLAYBACK_RESTRICTION_ID",
            "in": "path",
            "description": "ID of the Playback Restriction.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "A list of domains allowed to play your videos.",
                "x-required": [
                  "allowed_domains"
                ],
                "properties": {
                  "allowed_domains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of domains allowed to play videos. Possible values are\n  * `[]` Empty Array indicates deny video playback requests for all domains\n  * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain\n  * `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards\n"
                  },
                  "allow_no_referrer": {
                    "type": "boolean",
                    "default": false,
                    "description": "A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests."
                  }
                }
              },
              "example": {
                "allowed_domains": [
                  "*.example.com"
                ],
                "allow_no_referrer": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "referrer",
                        "user_agent",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Playback Restriction. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "referrer": {
                          "type": "object",
                          "description": "A list of domains allowed to play your videos.",
                          "properties": {
                            "allowed_domains": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of domains allowed to play videos. Possible values are\n  * `[]` Empty Array indicates deny video playback requests for all domains\n  * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain\n  * `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards\n"
                            },
                            "allow_no_referrer": {
                              "type": "boolean",
                              "default": false,
                              "description": "A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests."
                            }
                          }
                        },
                        "user_agent": {
                          "type": "object",
                          "description": "Rules that control what user agents are allowed to play your videos. Please see [Using User-Agent HTTP header for validation](mdc:https:/docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation) for more details on this feature.",
                          "properties": {
                            "allow_no_user_agent": {
                              "type": "boolean",
                              "default": true,
                              "description": "Whether or not to allow views without a `User-Agent` HTTP request header."
                            },
                            "allow_high_risk_user_agent": {
                              "type": "boolean",
                              "default": true,
                              "description": "Whether or not to allow high risk user agents. The high risk user agents are defined by Mux."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                    "updated_at": "1607945257",
                    "created_at": "1607939184",
                    "referrer": {
                      "allowed_domains": [
                        "*.example.com"
                      ],
                      "allow_no_referrer": true
                    },
                    "user_agent": {
                      "allow_no_user_agent": false,
                      "allow_high_risk_user_agent": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}/user_agent": {
      "put": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Update the User Agent Restriction",
        "description": "Allows you to modify how Mux validates playback requests with different user agents.  Please see [Using User-Agent HTTP header for validation](mdc:https:/docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation) for more details on this feature.",
        "operationId": "update-user-agent-restriction",
        "parameters": [
          {
            "name": "PLAYBACK_RESTRICTION_ID",
            "in": "path",
            "description": "ID of the Playback Restriction.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-required": [
                  "allow_no_user_agent",
                  "allow_high_risk_user_agent"
                ],
                "properties": {
                  "allow_no_user_agent": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether or not to allow views without a `User-Agent` HTTP request header."
                  },
                  "allow_high_risk_user_agent": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether or not to allow high risk user agents. The high risk user agents are defined by Mux."
                  }
                }
              },
              "example": {
                "allow_no_user_agent": false,
                "allow_high_risk_user_agent": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id",
                        "referrer",
                        "user_agent",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the Playback Restriction. Max 255 characters."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch)."
                        },
                        "referrer": {
                          "type": "object",
                          "description": "A list of domains allowed to play your videos.",
                          "properties": {
                            "allowed_domains": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of domains allowed to play videos. Possible values are\n  * `[]` Empty Array indicates deny video playback requests for all domains\n  * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain\n  * `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards\n"
                            },
                            "allow_no_referrer": {
                              "type": "boolean",
                              "default": false,
                              "description": "A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests."
                            }
                          }
                        },
                        "user_agent": {
                          "type": "object",
                          "description": "Rules that control what user agents are allowed to play your videos. Please see [Using User-Agent HTTP header for validation](mdc:https:/docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation) for more details on this feature.",
                          "properties": {
                            "allow_no_user_agent": {
                              "type": "boolean",
                              "default": true,
                              "description": "Whether or not to allow views without a `User-Agent` HTTP request header."
                            },
                            "allow_high_risk_user_agent": {
                              "type": "boolean",
                              "default": true,
                              "description": "Whether or not to allow high risk user agents. The high risk user agents are defined by Mux."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                    "updated_at": "1607945257",
                    "created_at": "1607939184",
                    "referrer": {
                      "allowed_domains": [
                        "*.example.com"
                      ],
                      "allow_no_referrer": true
                    },
                    "user_agent": {
                      "allow_no_user_agent": false,
                      "allow_high_risk_user_agent": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/drm-configurations": {
      "get": {
        "tags": [
          "DRM Configurations"
        ],
        "summary": "List DRM Configurations",
        "description": "Returns a list of DRM Configurations",
        "operationId": "list-drm-configurations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Offset by this many pages, of the size of `limit`",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to include in the response",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the DRM Configuration. Max 255 characters."
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "total_row_count": 2,
                  "page": 1,
                  "limit": 100,
                  "data": [
                    {
                      "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O"
                    },
                    {
                      "id": "012uTQqPygDYWz3jey8cyOX9n01Bd5SDH1"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/drm-configurations/{DRM_CONFIGURATION_ID}": {
      "get": {
        "tags": [
          "DRM Configurations"
        ],
        "summary": "Retrieve a DRM Configuration",
        "description": "Retrieves a single DRM Configuration.",
        "operationId": "get-drm-configuration",
        "parameters": [
          {
            "name": "DRM_CONFIGURATION_ID",
            "in": "path",
            "description": "The DRM Configuration ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the DRM Configuration. Max 255 characters."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {}
}```
